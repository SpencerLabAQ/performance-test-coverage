Project Name,Benchmark Name,Count,Direct Count,Methods,Direct Methods
feign,feign.benchmark.DecoderIteratorsBenchmark.decode,15,12,"feign.stream.StreamDecoder.create,feign.benchmark.DecoderIteratorsBenchmark.fetch,,feign.jackson.JacksonDecoder.decode,feign.benchmark.DecoderIteratorsBenchmark.carsJson,feign.Util.checkNotNull,feign.Util.checkState,feign.Types.checkNotPrimitive,feign.jackson.JacksonIteratorDecoder.decode,feign.stream.StreamDecoder.decode,feign.Response.close,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Util.ensureClosed,feign.Response.builder,feign.jackson.JacksonIteratorDecoder.actualIteratorTypeArgument,feign.jackson.JacksonIteratorDecoder.create","feign.stream.StreamDecoder.create,feign.benchmark.DecoderIteratorsBenchmark.fetch,,feign.jackson.JacksonDecoder.decode,feign.benchmark.DecoderIteratorsBenchmark.carsJson,feign.Util.checkNotNull,feign.Util.checkState,feign.Types.checkNotPrimitive,feign.jackson.JacksonIteratorDecoder.decode,feign.stream.StreamDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Response.builder,feign.jackson.JacksonIteratorDecoder.create"
feign,feign.benchmark.RealRequestBenchmarks.query_baseCaseUsingOkHttp,61,2,",feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.warnings,feign.template.Template.getVariables,feign.template.Expression.getValue,feign.RequestTemplate.query,feign.MethodMetadata.addWarning,feign.RequestTemplate.appendQuery,feign.MethodMetadata.configKey,feign.Types.checkNotPrimitive,feign.Util.checkState,feign.RequestTemplate.uri,feign.RequestTemplate.hasRequestVariable,feign.benchmark.RealRequestBenchmarks.tearDown,feign.Types.getRawType,feign.template.Template.parseTemplate,feign.template.BodyTemplate.create,feign.RequestTemplate.header,feign.template.UriUtils.isAlpha,feign.DeclarativeContract.registerParameterAnnotation,feign.Types.resolve,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.template,feign.template.UriUtils.isDigit,feign.Util.emptyToNull,feign.MethodMetadata.method,feign.template.Literal.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.RequestTemplate.decodeSlash,feign.template.QueryTemplate.create,feign.template.UriUtils.isAbsolute,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.collectionFormat,feign.template.Template.toString,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getValues,feign.Feign.builder,feign.RequestTemplate.getRequestVariables,feign.template.UriUtils.encode,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.UriUtils.isUnreserved,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getVariables,feign.template.Expressions.create,feign.template.UriUtils.isEncoded,feign.MethodMetadata.bodyType,feign.RequestTemplate.method,feign.Util.isDefault,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.appendHeader,feign.MethodMetadata.isAlreadyProcessed,feign.template.UriUtils.encodeInternal,feign.template.Template.encodeLiteral,feign.template.UriUtils.encodeChunk,feign.template.Expressions.stripBraces",",feign.benchmark.RealRequestBenchmarks.tearDown,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.benchmark.RealRequestBenchmarks.query_feignUsingOkHttp,58,3,",feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.warnings,feign.template.Template.getVariables,feign.RequestTemplate.appendQuery,feign.Types.checkNotPrimitive,feign.RequestTemplate.uri,feign.benchmark.RealRequestBenchmarks.tearDown,feign.template.BodyTemplate.create,feign.template.Literal.create,feign.Response.close,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.template.Template.parseFragment,feign.MethodMetadata.queryMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.headers,feign.template.UriUtils.isUnreserved,feign.template.UriUtils.isEncoded,feign.RequestTemplate.method,feign.okhttp.OkHttpClient.toBody,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.appendHeader,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.QueryTemplate.queryString,feign.Response.toBuilder,feign.RequestTemplate.hasRequestVariable,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.invoke,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.from,feign.DeclarativeContract.registerParameterAnnotation,feign.okhttp.OkHttpClient.toOkHttpRequest,feign.template.QueryTemplate.toString,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.bodyTemplate,feign.template.Expressions.create,feign.Util.checkNotNull,feign.Response.caseInsensitiveCopyOf,feign.template.Template.encodeLiteral,feign.template.Expressions.stripBraces,feign.template.Expression.getValue,feign.RequestTemplate.query,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.configKey,feign.Util.checkState,feign.Types.getRawType,feign.Util.ensureClosed,feign.template.UriUtils.isReserved,feign.RequestTemplate.resolve,feign.template.QueryTemplate.create,feign.okhttp.OkHttpClient.toFeignResponse,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.QueryTemplate.getValues,feign.Feign.builder,feign.template.UriTemplate.create,feign.template.QueryTemplate.getVariables,feign.Request.body,feign.MethodMetadata.bodyType,feign.Util.isDefault,feign.RequestTemplate.queryLine,feign.Request.create,feign.MethodMetadata.isAlreadyProcessed,feign.template.UriUtils.encodeChunk,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.addWarning,feign.RequestTemplate.queries,feign.Request.headers,feign.Response.builder,feign.template.QueryTemplate.expand,feign.okhttp.OkHttpClient.execute,feign.RequestTemplate.header,feign.template.UriUtils.isAlpha,feign.Types.resolve,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.target,feign.MethodMetadata.template,feign.template.QueryTemplate.getName,feign.RequestTemplate.decodeSlash,feign.template.Template.expand,feign.Util.isBlank,feign.template.HeaderTemplate.expand,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.url,feign.MethodMetadata.returnType,feign.Feign.configKey,feign.template.HeaderTemplate.create,feign.okhttp.OkHttpClient.toMap,feign.template.UriUtils.encode,feign.template.HeaderTemplate.getValues,feign.AsyncResponseHandler.handleResponse,feign.template.UriUtils.encodeInternal",",feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.benchmark.RealRequestBenchmarks.tearDown,feign.SynchronousMethodHandler.invoke,feign.Response.close"
feign,feign.benchmark.WhatShouldWeCacheBenchmarks.buildAndQuery_fake,94,8,",feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.warnings,feign.RequestTemplate.appendQuery,feign.template.Template.getVariables,feign.Types.checkNotPrimitive,feign.RequestTemplate.uri,feign.template.BodyTemplate.create,feign.template.Expression.getName,feign.MethodMetadata.method,feign.template.Literal.create,feign.Response.body,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.template.Template.parseFragment,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.headers,feign.template.UriUtils.isUnreserved,feign.template.UriUtils.isEncoded,feign.RequestTemplate.method,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.appendHeader,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.QueryTemplate.queryString,feign.Response.toBuilder,feign.RequestTemplate.hasRequestVariable,feign.SynchronousMethodHandler.invoke,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.from,feign.DeclarativeContract.registerParameterAnnotation,feign.template.QueryTemplate.toString,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.bodyTemplate,feign.template.Expressions.create,feign.Util.checkNotNull,feign.Response.caseInsensitiveCopyOf,feign.template.Template.encodeLiteral,feign.template.Expressions.stripBraces,feign.template.Expression.getValue,feign.RequestTemplate.query,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.configKey,feign.Util.checkState,feign.MethodMetadata.indexToExpander,feign.Types.getRawType,feign.template.UriUtils.isDigit,feign.template.UriUtils.isReserved,feign.RequestTemplate.resolve,feign.template.QueryTemplate.create,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.QueryTemplate.getValues,feign.Feign.builder,feign.template.UriTemplate.create,feign.template.QueryTemplate.getVariables,feign.MethodMetadata.bodyType,feign.Util.isDefault,feign.RequestTemplate.queryLine,feign.Request.create,feign.MethodMetadata.isAlreadyProcessed,feign.template.UriUtils.encodeChunk,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.addWarning,feign.RequestTemplate.queries,feign.Response.builder,feign.template.QueryTemplate.expand,feign.template.UriUtils.isAlpha,feign.RequestTemplate.header,feign.Types.resolve,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.target,feign.MethodMetadata.template,feign.template.QueryTemplate.getName,feign.RequestTemplate.decodeSlash,feign.template.Template.expand,feign.Util.isBlank,feign.template.HeaderTemplate.expand,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.url,feign.Feign.configKey,feign.MethodMetadata.isIgnored,feign.template.HeaderTemplate.create,feign.template.UriUtils.encode,feign.template.HeaderTemplate.getValues,feign.AsyncResponseHandler.handleResponse,feign.Util.isNotBlank,feign.MethodMetadata.indexToName,feign.template.Literal.getValue,feign.template.UriUtils.encodeInternal",",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.Util.emptyToNull,feign.DeclarativeContract.registerParameterAnnotation,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.benchmark.WhatShouldWeCacheBenchmarks.buildAndQuery_fake_cachedApi,88,8,",feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.warnings,feign.RequestTemplate.appendQuery,feign.template.Template.getVariables,feign.RequestTemplate.uri,feign.template.BodyTemplate.create,feign.template.Literal.create,feign.Response.body,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.template.Template.parseFragment,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.headers,feign.template.UriUtils.isUnreserved,feign.template.UriUtils.isEncoded,feign.RequestTemplate.method,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.appendHeader,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.QueryTemplate.queryString,feign.Response.toBuilder,feign.RequestTemplate.hasRequestVariable,feign.SynchronousMethodHandler.invoke,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.from,feign.DeclarativeContract.registerParameterAnnotation,feign.template.QueryTemplate.toString,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.bodyTemplate,feign.template.Expressions.create,feign.Util.checkNotNull,feign.Response.caseInsensitiveCopyOf,feign.template.Template.encodeLiteral,feign.template.Expressions.stripBraces,feign.template.Expression.getValue,feign.RequestTemplate.query,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.configKey,feign.Util.checkState,feign.MethodMetadata.indexToExpander,feign.Types.getRawType,feign.template.UriUtils.isDigit,feign.template.UriUtils.isReserved,feign.RequestTemplate.resolve,feign.template.QueryTemplate.create,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.QueryTemplate.getValues,feign.Feign.builder,feign.template.UriTemplate.create,feign.template.QueryTemplate.getVariables,feign.Util.isDefault,feign.RequestTemplate.queryLine,feign.Request.create,feign.MethodMetadata.isAlreadyProcessed,feign.template.UriUtils.encodeChunk,feign.MethodMetadata.addWarning,feign.RequestTemplate.queries,feign.Response.builder,feign.template.QueryTemplate.expand,feign.template.UriUtils.isAlpha,feign.RequestTemplate.header,feign.Types.resolve,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.target,feign.MethodMetadata.template,feign.template.QueryTemplate.getName,feign.RequestTemplate.decodeSlash,feign.template.Template.expand,feign.Util.isBlank,feign.template.HeaderTemplate.expand,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.url,feign.Feign.configKey,feign.MethodMetadata.isIgnored,feign.template.HeaderTemplate.create,feign.template.UriUtils.encode,feign.template.HeaderTemplate.getValues,feign.AsyncResponseHandler.handleResponse,feign.Util.isNotBlank,feign.template.Literal.getValue,feign.template.UriUtils.encodeInternal",",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveFeign.newInstance,feign.Util.checkNotNull,feign.Feign.builder,feign.DeclarativeContract.registerParameterAnnotation,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.benchmark.WhatShouldWeCacheBenchmarks.buildAndQuery_fake_cachedContract,71,8,",feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.warnings,feign.RequestTemplate.appendQuery,feign.template.Template.getVariables,feign.Types.checkNotPrimitive,feign.RequestTemplate.uri,feign.template.BodyTemplate.create,feign.template.Literal.create,feign.MethodMetadata.indexToExpanderClass,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.template.Template.parseFragment,feign.MethodMetadata.queryMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.headers,feign.template.UriUtils.isUnreserved,feign.template.UriUtils.isEncoded,feign.RequestTemplate.method,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.getName,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.QueryTemplate.queryString,feign.Response.toBuilder,feign.RequestTemplate.hasRequestVariable,feign.SynchronousMethodHandler.invoke,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.from,feign.DeclarativeContract.registerParameterAnnotation,feign.template.QueryTemplate.toString,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.bodyTemplate,feign.template.Expressions.create,feign.Util.checkNotNull,feign.Response.caseInsensitiveCopyOf,feign.template.Template.encodeLiteral,feign.template.Expressions.stripBraces,feign.template.Expression.getValue,feign.RequestTemplate.query,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.configKey,feign.MethodMetadata.indexToExpander,feign.Types.getRawType,feign.template.UriUtils.isDigit,feign.RequestTemplate.resolve,feign.template.QueryTemplate.create,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.QueryTemplate.getValues,feign.Feign.builder,feign.template.UriTemplate.create,feign.template.QueryTemplate.getVariables,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.bodyType,feign.Util.isDefault,feign.RequestTemplate.queryLine,feign.Request.create,feign.MethodMetadata.isAlreadyProcessed,feign.template.UriUtils.encodeChunk,feign.MethodMetadata.addWarning,feign.RequestTemplate.queries,feign.Response.builder,feign.template.QueryTemplate.expand,feign.template.UriUtils.isAlpha,feign.RequestTemplate.header,feign.Types.resolve,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.target,feign.MethodMetadata.template,feign.template.QueryTemplate.getName,feign.template.Template.expand,feign.RequestTemplate.decodeSlash,feign.Util.isBlank,feign.MethodMetadata.bodyIndex,feign.template.HeaderTemplate.expand,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.url,feign.Feign.configKey,feign.MethodMetadata.isIgnored,feign.template.HeaderTemplate.create,feign.template.UriUtils.encode,feign.template.HeaderTemplate.getValues,feign.AsyncResponseHandler.handleResponse,feign.Util.isNotBlank,feign.MethodMetadata.formParams,feign.template.Literal.getValue,feign.template.UriUtils.encodeInternal",",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveFeign.newInstance,feign.Util.checkNotNull,feign.Feign.builder,feign.Util.emptyToNull,feign.DeclarativeContract.registerParameterAnnotation,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.benchmark.WhatShouldWeCacheBenchmarks.buildAndQuery_fake_cachedFeign,93,7,",feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.warnings,feign.RequestTemplate.appendQuery,feign.template.Template.getVariables,feign.RequestTemplate.uri,feign.template.BodyTemplate.create,feign.template.Expression.getName,feign.MethodMetadata.method,feign.template.Literal.create,feign.MethodMetadata.indexToExpanderClass,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.template.Template.parseFragment,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.headers,feign.template.UriUtils.isUnreserved,feign.template.UriUtils.isEncoded,feign.RequestTemplate.method,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.appendHeader,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.QueryTemplate.queryString,feign.Response.toBuilder,feign.RequestTemplate.hasRequestVariable,feign.SynchronousMethodHandler.invoke,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.from,feign.DeclarativeContract.registerParameterAnnotation,feign.template.QueryTemplate.toString,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.bodyTemplate,feign.template.Expressions.create,feign.Util.checkNotNull,feign.Response.caseInsensitiveCopyOf,feign.template.Template.encodeLiteral,feign.template.Expressions.stripBraces,feign.template.Expression.getValue,feign.RequestTemplate.query,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.configKey,feign.Util.checkState,feign.template.UriUtils.isDigit,feign.template.UriUtils.isReserved,feign.RequestTemplate.resolve,feign.template.QueryTemplate.create,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.QueryTemplate.getValues,feign.Feign.builder,feign.template.UriTemplate.create,feign.template.QueryTemplate.getVariables,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.bodyType,feign.Util.isDefault,feign.RequestTemplate.queryLine,feign.Request.create,feign.MethodMetadata.isAlreadyProcessed,feign.template.UriUtils.encodeChunk,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.addWarning,feign.RequestTemplate.queries,feign.Response.builder,feign.template.QueryTemplate.expand,feign.template.UriUtils.isAlpha,feign.RequestTemplate.header,feign.Types.resolve,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.target,feign.MethodMetadata.template,feign.template.QueryTemplate.getName,feign.RequestTemplate.decodeSlash,feign.template.Template.expand,feign.Util.isBlank,feign.MethodMetadata.bodyIndex,feign.template.HeaderTemplate.expand,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.url,feign.Feign.configKey,feign.MethodMetadata.isIgnored,feign.template.HeaderTemplate.create,feign.template.UriUtils.encode,feign.template.HeaderTemplate.getValues,feign.AsyncResponseHandler.handleResponse,feign.Util.isNotBlank,feign.MethodMetadata.formParams,feign.template.Literal.getValue,feign.template.UriUtils.encodeInternal",",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.Util.emptyToNull,feign.DeclarativeContract.registerParameterAnnotation,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.benchmark.WhatShouldWeCacheBenchmarks.parseFeignContract,68,6,",feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.warnings,feign.template.Template.getVariables,feign.template.Expression.getValue,feign.RequestTemplate.query,feign.MethodMetadata.addWarning,feign.RequestTemplate.appendQuery,feign.MethodMetadata.configKey,feign.Util.checkState,feign.template.UriUtils.isGenericDelimiter,feign.Types.checkNotPrimitive,feign.RequestTemplate.uri,feign.RequestTemplate.hasRequestVariable,feign.MethodMetadata.indexToExpander,feign.Types.getRawType,feign.template.Template.parseTemplate,feign.template.BodyTemplate.create,feign.RequestTemplate.header,feign.template.UriUtils.isAlpha,feign.DeclarativeContract.registerParameterAnnotation,feign.template.Expression.getName,feign.Types.resolve,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.template,feign.template.UriUtils.isDigit,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.Literal.create,feign.Util.emptyToNull,feign.template.UriUtils.isReserved,feign.MethodMetadata.method,feign.RequestTemplate.decodeSlash,feign.template.QueryTemplate.create,feign.Util.isBlank,feign.template.UriUtils.isAbsolute,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.collectionFormat,feign.MethodMetadata.returnType,feign.template.Template.toString,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getValues,feign.Feign.builder,feign.RequestTemplate.getRequestVariables,feign.template.UriUtils.encode,feign.template.UriTemplate.create,feign.Util.isNotBlank,feign.RequestTemplate.headers,feign.MethodMetadata.formParams,feign.template.UriUtils.isUnreserved,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getVariables,feign.MethodMetadata.indexToName,feign.MethodMetadata.headerMapIndex,feign.template.Expressions.create,feign.RequestTemplate.methodMetadata,feign.template.UriUtils.isEncoded,feign.MethodMetadata.bodyType,feign.RequestTemplate.method,feign.Util.isDefault,feign.ReflectiveFeign.newInstance,feign.Util.checkNotNull,feign.template.Literal.getValue,feign.RequestTemplate.appendHeader,feign.MethodMetadata.isAlreadyProcessed,feign.template.UriUtils.encodeInternal,feign.template.Template.encodeLiteral,feign.template.UriUtils.encodeChunk,feign.template.Expressions.stripBraces",",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.DeclarativeContract.registerParameterAnnotation,feign.DeclarativeContract.parseAndValidateMetadata"
