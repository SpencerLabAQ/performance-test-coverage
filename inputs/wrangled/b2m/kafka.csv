Project Name,Benchmark Name,Count,Direct Count,Methods,Direct Methods
kafka,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.testAclsIterator,44,12,",org.apache.kafka.common.resource.ResourcePattern.resourceType,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.acl.AclBinding.pattern,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.setFieldValue,org.apache.kafka.common.acl.AccessControlEntryFilter.matches,org.apache.kafka.common.resource.ResourcePattern.hashCode,org.apache.kafka.common.acl.AccessControlEntryFilter.operation,org.apache.kafka.common.utils.SecurityUtils.toPascalCase,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.security.auth.KafkaPrincipal.toString,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.acl.AccessControlEntry.equals,org.apache.kafka.common.acl.AccessControlEntryData.equals,org.apache.kafka.common.acl.AclBindingFilter.matches,org.apache.kafka.common.resource.ResourcePattern.patternType,org.apache.kafka.common.acl.AccessControlEntry.host,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.acl.AclBinding.entry,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.acl.AccessControlEntryData.principal,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.acl.AccessControlEntry.operation,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.tearDown,org.apache.kafka.common.acl.AccessControlEntryFilter.principal,org.apache.kafka.common.resource.ResourcePatternFilter.matches,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.prepareAclCache,org.apache.kafka.common.utils.SecurityUtils.parseKafkaPrincipal,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.acl.AccessControlEntryData.hashCode,org.apache.kafka.common.acl.AccessControlEntryData.permissionType,org.apache.kafka.common.acl.AccessControlEntry.hashCode,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.common.acl.AccessControlEntry.principal,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.acl.AccessControlEntryFilter.host,org.apache.kafka.common.acl.AccessControlEntryData.operation,org.apache.kafka.common.acl.AccessControlEntryFilter.permissionType,org.apache.kafka.common.resource.ResourcePattern.name,org.apache.kafka.common.acl.AccessControlEntryData.host,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.acl.AccessControlEntry.permissionType",",org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.security.auth.KafkaPrincipal.toString,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.prepareAclCache,org.apache.kafka.common.acl.AclBindingFilter.matches,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.setFieldValue,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.tearDown"
kafka,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.testAuthorizer,36,13,",org.apache.kafka.common.resource.ResourcePattern.resourceType,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.setFieldValue,org.apache.kafka.common.resource.ResourcePattern.hashCode,org.apache.kafka.common.utils.SecurityUtils.toPascalCase,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.security.auth.KafkaPrincipal.toString,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.acl.AccessControlEntry.equals,org.apache.kafka.common.acl.AccessControlEntryData.equals,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.resource.ResourcePattern.patternType,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.acl.AccessControlEntry.host,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.acl.AccessControlEntryData.principal,org.apache.kafka.common.acl.AccessControlEntry.operation,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.tearDown,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.prepareAclCache,org.apache.kafka.common.utils.SecurityUtils.parseKafkaPrincipal,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.acl.AccessControlEntryData.hashCode,org.apache.kafka.common.acl.AccessControlEntryData.permissionType,org.apache.kafka.common.acl.AccessControlEntry.hashCode,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.common.acl.AccessControlEntry.principal,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.acl.AccessControlEntryData.operation,org.apache.kafka.common.security.auth.KafkaPrincipal.equals,org.apache.kafka.common.resource.ResourcePattern.name,org.apache.kafka.common.acl.AccessControlEntryData.host,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.acl.AccessControlEntry.permissionType",",org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.security.auth.KafkaPrincipal.toString,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.prepareAclCache,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.resource.ResourcePattern.patternType,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.setFieldValue,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.security.auth.KafkaPrincipal.equals,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.resource.ResourcePattern.name,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.tearDown,org.apache.kafka.common.acl.AccessControlEntry.permissionType"
kafka,org.apache.kafka.jmh.cache.LRUCacheBenchmark.testCachePerformance,2,2,",org.apache.kafka.common.cache.LRUCache.get,org.apache.kafka.common.cache.LRUCache.put",",org.apache.kafka.common.cache.LRUCache.get,org.apache.kafka.common.cache.LRUCache.put"
kafka,org.apache.kafka.jmh.common.FetchRequestBenchmark.testFetchRequestForConsumer,22,14,",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.requests.FetchRequest.optionalEpoch,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.requests.FetchRequest.data,org.apache.kafka.common.requests.FetchMetadata.sessionId,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.FetchMetadata.epoch,org.apache.kafka.common.requests.FetchRequest.toPartitionDataMap,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.protocol.types.Struct.set,org.apache.kafka.common.protocol.types.Schema.get",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.FetchMetadata.sessionId,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.requests.FetchMetadata.epoch,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.requests.FetchRequest.toPartitionDataMap,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.FetchRequest.data,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.protocol.types.Struct.set"
kafka,org.apache.kafka.jmh.common.FetchRequestBenchmark.testFetchRequestForReplica,21,13,",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.requests.FetchRequest.optionalEpoch,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.requests.FetchRequest.data,org.apache.kafka.common.requests.FetchMetadata.sessionId,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.FetchMetadata.epoch,org.apache.kafka.common.requests.FetchRequest.toPartitionDataMap,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.protocol.types.Struct.set,org.apache.kafka.common.protocol.types.Schema.get",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.FetchMetadata.sessionId,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.requests.FetchMetadata.epoch,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.requests.FetchRequest.toPartitionDataMap,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.FetchRequest.data,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.protocol.types.Struct.set"
kafka,org.apache.kafka.jmh.common.FetchRequestBenchmark.testFetchRequestFromStruct,32,17,",org.apache.kafka.common.protocol.types.Struct.getArray,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.protocol.types.Struct.getInt,org.apache.kafka.common.requests.AbstractRequest.version,org.apache.kafka.common.protocol.types.Struct.getLong,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.protocol.types.Struct.getFieldOrDefault,org.apache.kafka.common.requests.FetchRequest.optionalEpoch,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.protocol.types.Struct.getByte,org.apache.kafka.common.protocol.types.Struct.get,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.requests.FetchRequest.data,org.apache.kafka.common.protocol.types.Struct.getString,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.FetchMetadata.epoch,org.apache.kafka.common.requests.AbstractRequest.parseRequest,org.apache.kafka.common.requests.FetchRequest.toPartitionDataMap,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.protocol.types.Struct.set,org.apache.kafka.common.protocol.types.Schema.get",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.requests.AbstractRequest.version,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.requests.FetchRequest.data,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.AbstractRequest.parseRequest,org.apache.kafka.common.requests.FetchMetadata.epoch,org.apache.kafka.common.requests.FetchRequest.toPartitionDataMap,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.protocol.types.Struct.set"
kafka,org.apache.kafka.jmh.common.FetchRequestBenchmark.testSerializeFetchRequestForConsumer,43,19,",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.protocol.ByteBufferAccessor.writeShort,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.writeRawTags,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.protocol.ByteBufferAccessor.writeInt,org.apache.kafka.common.protocol.ObjectSerializationCache.cacheSerializedValue,org.apache.kafka.common.protocol.ByteBufferAccessor.writeByteArray,org.apache.kafka.common.network.TransportLayers.hasPendingWrites,org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.forFields,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.network.NetworkSend.sizeBuffer,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.utils.ByteUtils.sizeOfUnsignedVarint,org.apache.kafka.common.requests.FetchRequest.optionalEpoch,org.apache.kafka.common.utils.ByteUtils.writeUnsignedVarint,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.requests.AbstractRequest.toSend,org.apache.kafka.common.requests.FetchRequest.data,org.apache.kafka.common.protocol.ObjectSerializationCache.getSerializedValue,org.apache.kafka.common.protocol.ByteBufferAccessor.writeUnsignedVarint,org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.numFields,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.protocol.ByteBufferAccessor.writeLong,org.apache.kafka.common.requests.ByteBufferChannel.write,org.apache.kafka.common.requests.RequestHeader.apiVersion,org.apache.kafka.common.requests.ByteBufferChannel.buffer,org.apache.kafka.common.requests.RequestHeader.data,org.apache.kafka.common.network.ByteBufferSend.size,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.common.network.ByteBufferSend.writeTo,org.apache.kafka.common.protocol.ByteBufferAccessor.writeByte,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.FetchMetadata.epoch,org.apache.kafka.common.requests.FetchRequest.toPartitionDataMap,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.RequestHeader.headerVersion,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.protocol.types.Struct.set,org.apache.kafka.common.protocol.types.Schema.get",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.requests.AbstractRequest.toSend,org.apache.kafka.common.requests.FetchRequest.data,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.requests.ByteBufferChannel.buffer,org.apache.kafka.common.network.ByteBufferSend.size,org.apache.kafka.common.network.ByteBufferSend.writeTo,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.FetchMetadata.epoch,org.apache.kafka.common.requests.FetchRequest.toPartitionDataMap,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.protocol.types.Struct.set"
kafka,org.apache.kafka.jmh.common.FetchRequestBenchmark.testSerializeFetchRequestForReplica,39,13,",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.protocol.ByteBufferAccessor.writeShort,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.writeRawTags,org.apache.kafka.common.protocol.types.Struct.set,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.protocol.ByteBufferAccessor.writeInt,org.apache.kafka.common.protocol.ObjectSerializationCache.cacheSerializedValue,org.apache.kafka.common.protocol.ByteBufferAccessor.writeByteArray,org.apache.kafka.common.network.TransportLayers.hasPendingWrites,org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.forFields,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.network.NetworkSend.sizeBuffer,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.utils.ByteUtils.sizeOfUnsignedVarint,org.apache.kafka.common.requests.FetchRequest.optionalEpoch,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.requests.AbstractRequest.toSend,org.apache.kafka.common.protocol.ObjectSerializationCache.getSerializedValue,org.apache.kafka.common.protocol.ByteBufferAccessor.writeUnsignedVarint,org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.numFields,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.requests.RequestHeader.apiVersion,org.apache.kafka.common.requests.ByteBufferChannel.write,org.apache.kafka.common.protocol.ByteBufferAccessor.writeLong,org.apache.kafka.common.requests.RequestHeader.data,org.apache.kafka.common.requests.ByteBufferChannel.buffer,org.apache.kafka.common.network.ByteBufferSend.size,org.apache.kafka.common.network.ByteBufferSend.writeTo,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.common.protocol.ByteBufferAccessor.writeByte,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.FetchMetadata.epoch,org.apache.kafka.common.requests.FetchRequest.toPartitionDataMap,org.apache.kafka.common.requests.RequestHeader.headerVersion,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.utils.ByteUtils.writeUnsignedVarint,org.apache.kafka.common.protocol.types.Schema.get",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.requests.AbstractRequest.toSend,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.requests.ByteBufferChannel.buffer,org.apache.kafka.common.network.ByteBufferSend.size,org.apache.kafka.common.network.ByteBufferSend.writeTo,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.FetchMetadata.epoch,org.apache.kafka.common.requests.FetchRequest.toPartitionDataMap,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.protocol.types.Struct.set"
kafka,org.apache.kafka.jmh.common.FetchResponseBenchmark.testConstructFetchResponse,50,13,",org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.utils.Crc32C.create,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.requests.FetchResponse.responseData,org.apache.kafka.common.utils.ByteBufferOutputStream.position,org.apache.kafka.common.record.DefaultRecordBatch.computeAttributes,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordBatchWrite,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.record.MemoryRecordsBuilder.nextSequentialOffset,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.common.utils.Utils.writeTo,org.apache.kafka.common.record.MemoryRecordsBuilder.appendDefaultRecord,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.record.SimpleRecord.key,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.record.DefaultRecordBatch.writeHeader,org.apache.kafka.common.record.MemoryRecordsBuilder.writeDefaultBatchHeader,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.record.MemoryRecordsBuilder.close,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.utils.ByteUtils.sizeOfUnsignedVarint,org.apache.kafka.common.record.MemoryRecords.withRecords,org.apache.kafka.common.record.AbstractRecords.recordBatchHeaderSizeInBytes,org.apache.kafka.common.utils.ByteUtils.writeUnsignedVarint,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.record.DefaultRecord.sizeInBytes,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.record.MemoryRecordsBuilder.closeForRecordAppends,org.apache.kafka.common.utils.PureJavaCrc32C.update,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.record.MemoryRecordsBuilder.buffer,org.apache.kafka.common.utils.ByteBufferOutputStream.ensureRemaining,org.apache.kafka.common.record.MemoryRecordsBuilder.recordWritten,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.utils.ByteUtils.sizeOfVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.isClosed,org.apache.kafka.common.utils.Crc32C.compute,org.apache.kafka.common.record.MemoryRecordsBuilder.appendWithOffset,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.utils.ByteUtils.writeVarint,org.apache.kafka.common.record.DefaultRecord.writeTo,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.common.utils.Utils.wrapNullable,org.apache.kafka.common.utils.PureJavaCrc32C.reset,org.apache.kafka.common.utils.PureJavaCrc32C.getValue,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.record.DefaultRecordBatch.sizeInBytes,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytes,org.apache.kafka.common.record.DefaultRecord.sizeOfBodyInBytes,org.apache.kafka.common.record.AbstractRecords.estimateCompressedSizeInBytes,org.apache.kafka.common.record.SimpleRecord.headers,org.apache.kafka.common.record.DefaultRecord.sizeOf,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.utils.ByteUtils.writeVarlong,org.apache.kafka.common.utils.Checksums.update,org.apache.kafka.common.requests.FetchResponse.toMessage,org.apache.kafka.common.utils.ByteBufferOutputStream.write,org.apache.kafka.common.utils.ByteUtils.sizeOfVarint",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.FetchResponse.responseData,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.requests.FetchResponse.toMessage,org.apache.kafka.common.record.MemoryRecords.withRecords,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.utils.Utils.wrapNullable"
kafka,org.apache.kafka.jmh.common.FetchResponseBenchmark.testSerializeFetchResponse,84,15,",org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.protocol.RecordsWritable.writeInt,org.apache.kafka.common.protocol.ByteBufferAccessor.writeInt,org.apache.kafka.common.protocol.RecordsWritable.writeByteArray,org.apache.kafka.common.utils.Utils.writeTo,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.network.TransportLayers.hasPendingWrites,org.apache.kafka.common.record.DefaultRecordBatch.writeHeader,org.apache.kafka.common.utils.PureJavaCrc32C.update,org.apache.kafka.common.record.DefaultRecord.sizeInBytes,org.apache.kafka.common.requests.ResponseHeader.data,org.apache.kafka.common.utils.Crc32C.compute,org.apache.kafka.common.requests.ByteBufferChannel.buffer,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordAppend,org.apache.kafka.common.record.DefaultRecord.writeTo,org.apache.kafka.common.protocol.RecordsWritable.flush,org.apache.kafka.common.network.ByteBufferSend.writeTo,org.apache.kafka.common.utils.Utils.wrapNullable,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.common.record.RecordsSend.size,org.apache.kafka.common.record.DefaultRecord.sizeOfBodyInBytes,org.apache.kafka.common.record.SimpleRecord.headers,org.apache.kafka.common.utils.ByteUtils.writeVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.recordWritten,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.record.DefaultRecordBatch.computeAttributes,org.apache.kafka.common.protocol.MessageUtil.compareRawTaggedFields,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.common.protocol.RecordsWritable.writeLong,org.apache.kafka.common.record.MemoryRecordsBuilder.writeDefaultBatchHeader,org.apache.kafka.common.record.AbstractRecords.toSend,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.record.MultiRecordsSend.size,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.RecordsWritable.writeShort,org.apache.kafka.common.utils.ByteUtils.sizeOfUnsignedVarint,org.apache.kafka.common.protocol.RecordsWritable.writeRecords,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.utils.ByteBufferOutputStream.buffer,org.apache.kafka.common.record.MemoryRecordsBuilder.closeForRecordAppends,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.utils.ByteBufferOutputStream.ensureRemaining,org.apache.kafka.common.protocol.ObjectSerializationCache.getSerializedValue,org.apache.kafka.common.protocol.ByteBufferAccessor.writeUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.sizeOfVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.isClosed,org.apache.kafka.common.requests.ByteBufferChannel.write,org.apache.kafka.common.record.MemoryRecordsBuilder.appendWithOffset,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.utils.PureJavaCrc32C.getValue,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.record.DefaultRecordBatch.sizeInBytes,org.apache.kafka.common.record.RecordsSend.completed,org.apache.kafka.common.record.DefaultRecord.sizeOf,org.apache.kafka.common.network.ByteBufferSend.completed,org.apache.kafka.common.utils.Checksums.update,org.apache.kafka.common.utils.ByteUtils.writeUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.sizeOfVarint,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.utils.Crc32C.create,org.apache.kafka.common.record.MemoryRecords.sizeInBytes,org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.writeRawTags,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordBatchWrite,org.apache.kafka.common.record.MemoryRecordsBuilder.nextSequentialOffset,org.apache.kafka.common.record.MemoryRecordsBuilder.appendDefaultRecord,org.apache.kafka.common.requests.FetchResponse.toSend,org.apache.kafka.common.record.SimpleRecord.key,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.record.MemoryRecords.withRecords,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.record.MemoryRecordsBuilder.buffer,org.apache.kafka.common.record.RecordsSend.writeTo,org.apache.kafka.common.record.MultiRecordsSend.writeTo,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.utils.ByteUtils.writeVarint,org.apache.kafka.common.requests.ResponseHeader.headerVersion,org.apache.kafka.common.utils.PureJavaCrc32C.reset,org.apache.kafka.common.record.MultiRecordsSend.updateRecordConversionStats,org.apache.kafka.common.record.SimpleRecord.value,org.apache.kafka.common.protocol.RecordsWritable.writeUnsignedVarint,org.apache.kafka.common.record.AbstractRecords.estimateCompressedSizeInBytes,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.FetchResponse.toMessage,org.apache.kafka.common.utils.ByteBufferOutputStream.position,org.apache.kafka.common.record.MultiRecordsSend.completed,org.apache.kafka.common.protocol.ObjectSerializationCache.cacheSerializedValue,org.apache.kafka.common.record.SimpleRecord.timestamp,org.apache.kafka.common.record.MemoryRecordsBuilder.validateProducerState,org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.forFields,org.apache.kafka.common.record.RecordsSend.records,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.record.MemoryRecordsBuilder.close,org.apache.kafka.common.record.MemoryRecords.writeTo,org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.numFields,org.apache.kafka.common.record.DefaultRecordsSend.writeTo,org.apache.kafka.common.network.ByteBufferSend.size,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytes,org.apache.kafka.common.utils.ByteBufferOutputStream.write",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.requests.FetchResponse.toSend,org.apache.kafka.common.record.MultiRecordsSend.size,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.record.MemoryRecords.withRecords,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.record.MultiRecordsSend.writeTo,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.requests.FetchResponse.toMessage,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.requests.ByteBufferChannel.buffer,org.apache.kafka.common.utils.Utils.wrapNullable,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions"
kafka,org.apache.kafka.jmh.common.TopicBenchmark.testValidate,3,2,",org.apache.kafka.common.internals.Topic.containsValidPattern,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.common.internals.Topic.validate",",org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.common.internals.Topic.validate"
kafka,org.apache.kafka.jmh.consumer.SubscriptionStateBenchmark.testFetchablePartitions,15,7,",org.apache.kafka.common.TopicPartition.equals,org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.internals.PartitionStates.update,org.apache.kafka.clients.consumer.internals.SubscriptionState.fetchablePartitions,org.apache.kafka.clients.consumer.internals.SubscriptionState.changeSubscription,org.apache.kafka.clients.consumer.internals.SubscriptionState.completeValidation,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.internals.PartitionStates.set,org.apache.kafka.clients.consumer.internals.SubscriptionState.seekUnvalidated,org.apache.kafka.clients.consumer.internals.SubscriptionState.assignedState,org.apache.kafka.common.internals.PartitionStates.updateSize,org.apache.kafka.common.internals.PartitionStates.forEach,org.apache.kafka.common.internals.PartitionStates.stateValue,org.apache.kafka.clients.consumer.internals.SubscriptionState.assignFromUser",",org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.clients.consumer.internals.SubscriptionState.fetchablePartitions,org.apache.kafka.clients.consumer.internals.SubscriptionState.completeValidation,org.apache.kafka.clients.consumer.internals.SubscriptionState.seekUnvalidated,org.apache.kafka.common.TopicPartition.equals,org.apache.kafka.clients.consumer.internals.SubscriptionState.assignFromUser"
kafka,org.apache.kafka.jmh.consumer.SubscriptionStateBenchmark.testHasAllFetchPositions,15,7,",org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.internals.PartitionStates.update,org.apache.kafka.common.internals.PartitionStates.stateIterator,org.apache.kafka.clients.consumer.internals.SubscriptionState.changeSubscription,org.apache.kafka.clients.consumer.internals.SubscriptionState.hasAllFetchPositions,org.apache.kafka.clients.consumer.internals.SubscriptionState.completeValidation,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.internals.PartitionStates.set,org.apache.kafka.clients.consumer.internals.SubscriptionState.seekUnvalidated,org.apache.kafka.clients.consumer.internals.SubscriptionState.assignedState,org.apache.kafka.common.internals.PartitionStates.updateSize,org.apache.kafka.common.internals.PartitionStates.stateValue,org.apache.kafka.common.TopicPartition.equals,org.apache.kafka.clients.consumer.internals.SubscriptionState.assignFromUser",",org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.clients.consumer.internals.SubscriptionState.hasAllFetchPositions,org.apache.kafka.clients.consumer.internals.SubscriptionState.completeValidation,org.apache.kafka.clients.consumer.internals.SubscriptionState.seekUnvalidated,org.apache.kafka.common.TopicPartition.equals,org.apache.kafka.clients.consumer.internals.SubscriptionState.assignFromUser"
kafka,org.apache.kafka.jmh.consumer.SubscriptionStateBenchmark.testPartitionsNeedingValidation,16,7,",org.apache.kafka.clients.consumer.internals.SubscriptionState.collectPartitions,org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.TopicPartition.equals,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.internals.PartitionStates.update,org.apache.kafka.clients.consumer.internals.SubscriptionState.partitionsNeedingValidation,org.apache.kafka.clients.consumer.internals.SubscriptionState.changeSubscription,org.apache.kafka.clients.consumer.internals.SubscriptionState.completeValidation,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.internals.PartitionStates.set,org.apache.kafka.clients.consumer.internals.SubscriptionState.seekUnvalidated,org.apache.kafka.clients.consumer.internals.SubscriptionState.assignedState,org.apache.kafka.common.internals.PartitionStates.updateSize,org.apache.kafka.common.internals.PartitionStates.forEach,org.apache.kafka.common.internals.PartitionStates.stateValue,org.apache.kafka.clients.consumer.internals.SubscriptionState.assignFromUser",",org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.clients.consumer.internals.SubscriptionState.partitionsNeedingValidation,org.apache.kafka.clients.consumer.internals.SubscriptionState.completeValidation,org.apache.kafka.clients.consumer.internals.SubscriptionState.seekUnvalidated,org.apache.kafka.common.TopicPartition.equals,org.apache.kafka.clients.consumer.internals.SubscriptionState.assignFromUser"
kafka,org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.testFetcher,83,50,",org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.internals.PartitionStates.update,org.apache.kafka.common.record.FileRecords.batchIterator,org.apache.kafka.common.utils.KafkaThread.configureThread,org.apache.kafka.common.network.ListenerName.value,org.apache.kafka.common.internals.PartitionStates.updateAndMoveToEnd,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.config.AbstractConfig.getShort,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.clients.FetchSessionHandler.findMissing,org.apache.kafka.common.internals.PartitionStates.stateValue,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,org.apache.kafka.common.config.AbstractConfig.getPassword,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.common.internals.PartitionStates.partitionStateMap,org.apache.kafka.common.network.PlaintextChannelBuilder.configure,org.apache.kafka.common.record.FileRecords.openChannel,org.apache.kafka.common.utils.Utils.delete,kafka.metrics.FilteringJmxReporter.onMetricRemoved,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.createLogConfig,org.apache.kafka.common.metrics.Sensor.hasExpired,org.apache.kafka.common.requests.EpochEndOffset.leaderEpoch,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.metrics.Sensor.checkForest,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.utils.AbstractIterator.allDone,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.common.record.FileRecords.sizeInBytes,org.apache.kafka.common.config.AbstractConfig.get,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.requests.FetchMetadata.nextEpoch,org.apache.kafka.common.metrics.Sensor.add,org.apache.kafka.common.requests.FetchMetadata.isFull,org.apache.kafka.common.config.AbstractConfig.getDouble,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.common.requests.FetchResponse.error,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.clients.FetchSessionHandler.handleResponse,org.apache.kafka.common.requests.EpochEndOffset.endOffset,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.metrics.KafkaMetric.metricName,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.config.ConfigDef.convertToStringMapWithPasswordValues,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.record.FileRecords.channel,org.apache.kafka.common.utils.Utils.join,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.config.ConfigDef.parseValue,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.metrics.MetricConfig.tags,org.apache.kafka.common.network.ChannelBuilders.channelBuilderConfigs,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.metrics.Metrics.metricName,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.metrics.Metrics.addMetric,org.apache.kafka.common.network.ListenerName.hashCode,org.apache.kafka.common.config.AbstractConfig.postProcessParsedConfig,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.requests.FetchResponse.sessionId,org.apache.kafka.common.config.ConfigDef.undefinedDependentConfigs,org.apache.kafka.common.config.AbstractConfig.instantiateConfigProviders,org.apache.kafka.common.network.ChannelBuilders.create,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.network.ListenerName.configPrefix,org.apache.kafka.common.MetricName.hashCode,org.apache.kafka.common.config.ConfigDef.parseType,org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.tearDown,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.clients.FetchSessionHandler.verifyFullFetchResponsePartitions,org.apache.kafka.common.requests.FetchResponse.toMessage,org.apache.kafka.common.metrics.Metrics.getSensor,org.apache.kafka.common.config.AbstractConfig.values,org.apache.kafka.common.requests.EpochEndOffset.error,org.apache.kafka.common.metrics.Metrics.sensor,org.apache.kafka.common.config.AbstractConfig.logAll,org.apache.kafka.common.metrics.Metrics.registerMetric,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.clients.FetchSessionHandler.newBuilder,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.utils.Utils.atomicMoveWithFallback,org.apache.kafka.common.requests.FetchMetadata.newIncremental,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.config.ConfigDef.convertToString,org.apache.kafka.common.config.ConfigDef.define,org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.config.AbstractConfig.valuesWithPrefixOverride,org.apache.kafka.common.internals.PartitionStates.set,org.apache.kafka.common.record.FileLogInputStream.nextBatch,org.apache.kafka.common.config.ConfigDef.defaultValues,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.metrics.stats.Meter.stats,org.apache.kafka.common.network.ChannelBuilders.clientChannelBuilder,org.apache.kafka.common.TopicPartition.toString,org.apache.kafka.common.internals.PartitionStates.updateSize,org.apache.kafka.common.record.FileRecords.open,org.apache.kafka.common.config.AbstractConfig.extractPotentialVariables,org.apache.kafka.common.record.FileRecords.batchesFrom,org.apache.kafka.common.config.AbstractConfig.getBoolean",",org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.metrics.Metrics.metricName,org.apache.kafka.common.record.FileRecords.sizeInBytes,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.utils.KafkaThread.configureThread,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.clients.FetchSessionHandler.newBuilder,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.network.ListenerName.value,org.apache.kafka.common.internals.PartitionStates.updateAndMoveToEnd,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.metrics.Sensor.add,org.apache.kafka.common.requests.FetchMetadata.isFull,org.apache.kafka.common.config.AbstractConfig.getDouble,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.common.metrics.Metrics.addMetric,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.clients.FetchSessionHandler.handleResponse,org.apache.kafka.common.network.ListenerName.hashCode,org.apache.kafka.common.config.AbstractConfig.postProcessParsedConfig,org.apache.kafka.common.requests.EpochEndOffset.endOffset,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.config.AbstractConfig.getShort,org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.config.ConfigDef.define,org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.common.internals.PartitionStates.stateValue,org.apache.kafka.common.config.ConfigDef.convertToStringMapWithPasswordValues,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,org.apache.kafka.common.config.AbstractConfig.getPassword,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.internals.PartitionStates.partitionStateMap,org.apache.kafka.common.requests.EpochEndOffset.error,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.internals.PartitionStates.set,org.apache.kafka.common.utils.Utils.join,org.apache.kafka.common.config.ConfigDef.defaultValues,org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.createLogConfig,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.tearDown,org.apache.kafka.common.network.ChannelBuilders.clientChannelBuilder,org.apache.kafka.common.TopicPartition.toString,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.requests.EpochEndOffset.leaderEpoch,org.apache.kafka.common.record.FileRecords.open,org.apache.kafka.common.requests.FetchResponse.toMessage,org.apache.kafka.common.config.AbstractConfig.logAll,org.apache.kafka.common.metrics.Metrics.sensor,org.apache.kafka.common.record.FileRecords.batchesFrom,org.apache.kafka.common.config.AbstractConfig.getBoolean"
kafka,org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark.incrementalFetchSessionBuild,16,10,",org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.requests.FetchResponse.responseData,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.clients.FetchSessionHandler.newBuilder,org.apache.kafka.common.requests.FetchMetadata.isFull,org.apache.kafka.common.requests.FetchResponse.error,org.apache.kafka.clients.FetchSessionHandler.handleResponse,org.apache.kafka.common.requests.FetchMetadata.newIncremental,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.requests.FetchResponse.sessionId,org.apache.kafka.clients.FetchSessionHandler.findMissing,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.clients.FetchSessionHandler.verifyFullFetchResponsePartitions,org.apache.kafka.common.requests.FetchResponse.toMessage",",org.apache.kafka.common.requests.FetchMetadata.isFull,org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.clients.FetchSessionHandler.handleResponse,org.apache.kafka.clients.FetchSessionHandler.newBuilder,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.requests.FetchResponse.toMessage"
kafka,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.testMetadataRequestForAllTopics,127,18,",org.apache.kafka.common.metrics.Metrics.close,org.apache.kafka.common.protocol.types.Schema.numFields,org.apache.kafka.common.network.ListenerName.value,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.createKafkaApis,org.apache.kafka.common.protocol.types.Struct.writeTo,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.Node.port,org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint,org.apache.kafka.common.config.AbstractConfig.getShort,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.tearDown,org.apache.kafka.common.requests.UpdateMetadataRequest.partitionStates,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.common.requests.MetadataRequest.allowAutoTopicCreation,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.iterator,org.apache.kafka.common.requests.MetadataRequest.isAllTopics,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,org.apache.kafka.common.config.AbstractConfig.getPassword,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.add,org.apache.kafka.common.requests.RequestHeader.apiKey,org.apache.kafka.common.requests.RequestContext.isUnsupportedApiVersionsRequest,kafka.metrics.FilteringJmxReporter.onMetricRemoved,org.apache.kafka.common.protocol.types.Schema.fields,org.apache.kafka.common.protocol.types.Schema.handleNode,org.apache.kafka.common.protocol.ByteBufferAccessor.readArray,org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.schemaVersions,org.apache.kafka.common.protocol.types.Struct.set,org.apache.kafka.common.requests.RequestContext.parseRequest,org.apache.kafka.common.feature.Features.emptySupportedFeatures,org.apache.kafka.common.utils.AbstractIterator.allDone,org.apache.kafka.common.protocol.types.Type.isArray,org.apache.kafka.common.config.AbstractConfig.get,org.apache.kafka.common.protocol.types.TaggedFields.sizeOf,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.protocol.types.CompactArrayOf.validate,org.apache.kafka.common.protocol.types.CompactArrayOf.isNullable,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.common.config.AbstractConfig.getDouble,org.apache.kafka.common.network.NetworkSend.sizeBuffer,org.apache.kafka.common.requests.UpdateMetadataRequest.liveBrokers,org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.schemaVersions,org.apache.kafka.common.protocol.types.Schema.walk,org.apache.kafka.common.protocol.types.CompactArrayOf.arrayElementType,org.apache.kafka.common.utils.ByteUtils.sizeOfUnsignedVarint,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.clear,org.apache.kafka.common.requests.ResponseHeader.toStruct,org.apache.kafka.common.metrics.KafkaMetric.metricName,org.apache.kafka.common.protocol.types.Struct.get,org.apache.kafka.common.protocol.ByteBufferAccessor.readUnsignedVarint,org.apache.kafka.common.protocol.types.Schema.write,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.config.ConfigDef.convertToStringMapWithPasswordValues,org.apache.kafka.common.protocol.types.CompactArrayOf.sizeOf,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.reseat,org.apache.kafka.common.requests.MetadataResponse.toStruct,org.apache.kafka.common.utils.Sanitizer.sanitize,org.apache.kafka.common.utils.FlattenedIterator.makeNext,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.utils.Utils.utf8Length,org.apache.kafka.common.protocol.types.CompactArrayOf.write,org.apache.kafka.common.utils.Utils.join,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.config.ConfigDef.parseValue,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.requests.RequestUtils.serialize,org.apache.kafka.common.utils.ByteUtils.writeUnsignedVarint,org.apache.kafka.common.protocol.types.Struct.getArray,org.apache.kafka.common.protocol.types.Type.arrayElementType,org.apache.kafka.common.protocol.types.Struct.sizeOf,org.apache.kafka.common.metrics.Metrics.metricName,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.removeFromList,org.apache.kafka.common.Node.host,org.apache.kafka.common.requests.AbstractResponse.updateErrorCounts,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.requests.RequestContext.buildResponse,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.addToListTail,org.apache.kafka.common.Node.id,org.apache.kafka.common.requests.RequestHeader.toResponseHeader,org.apache.kafka.common.protocol.types.ArrayOf.arrayElementType,org.apache.kafka.common.metrics.Metrics.addMetric,org.apache.kafka.common.protocol.types.Schema.sizeOf,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.calculateCapacity,org.apache.kafka.common.config.AbstractConfig.postProcessParsedConfig,org.apache.kafka.common.network.ListenerName.hashCode,org.apache.kafka.common.Node.rack,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.requests.MetadataResponse.errorCounts,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.protocol.types.Struct.validateField,org.apache.kafka.common.config.ConfigDef.undefinedDependentConfigs,org.apache.kafka.common.config.AbstractConfig.instantiateConfigProviders,org.apache.kafka.common.protocol.types.Schema.read,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.common.requests.AbstractRequest.serialize,org.apache.kafka.common.requests.ProduceResponse.schemaVersions,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.changeCapacity,org.apache.kafka.common.internals.Topic.isInternal,org.apache.kafka.common.requests.MetadataRequest.toStruct,org.apache.kafka.common.protocol.types.TaggedFields.write,org.apache.kafka.common.MetricName.hashCode,org.apache.kafka.common.protocol.ByteBufferAccessor.readInt,org.apache.kafka.common.config.ConfigDef.parseType,org.apache.kafka.common.requests.UpdateMetadataRequest.controllerEpoch,org.apache.kafka.common.protocol.types.TaggedFields.validate,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.indexToElement,org.apache.kafka.common.requests.RequestContext.apiVersion,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.protocol.ByteBufferAccessor.readShort,org.apache.kafka.common.requests.MetadataRequest.data,org.apache.kafka.common.config.AbstractConfig.logAll,org.apache.kafka.common.protocol.types.Schema.get,org.apache.kafka.common.protocol.types.CompactArrayOf.read,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.slot,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.listIterator,org.apache.kafka.common.requests.UpdateMetadataRequest.controllerId,org.apache.kafka.common.metrics.Metrics.registerMetric,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.removeElementAtSlot,org.apache.kafka.common.requests.AbstractRequest.version,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.buildAllTopicMetadataRequest,org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection.addInternal,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.endpoints,org.apache.kafka.common.requests.UpdateMetadataRequest.normalize,org.apache.kafka.common.requests.ProduceRequest.schemaVersions,org.apache.kafka.common.protocol.types.Struct.getFieldOrDefault,org.apache.kafka.common.config.ConfigDef.convertToString,org.apache.kafka.common.requests.AbstractResponse.toSend,org.apache.kafka.common.requests.RequestHeader.parse,org.apache.kafka.common.config.ConfigDef.define,org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.requests.RequestHeader.apiVersion,org.apache.kafka.common.utils.Utils.utf8,org.apache.kafka.common.utils.ImplicitLinkedHashCollection.size,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.initializeMetadataCache,org.apache.kafka.common.config.ConfigDef.defaultValues,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.requests.AbstractRequest.parseRequest,org.apache.kafka.common.requests.RequestHeader.toStruct,org.apache.kafka.common.utils.AbstractIterator.next,org.apache.kafka.common.protocol.types.Struct.getBoolean,org.apache.kafka.common.requests.MetadataResponse.prepareResponse,org.apache.kafka.common.protocol.types.TaggedFields.read,org.apache.kafka.common.config.AbstractConfig.extractPotentialVariables,org.apache.kafka.common.protocol.types.Schema.validate,org.apache.kafka.common.config.AbstractConfig.getBoolean",",org.apache.kafka.common.metrics.Metrics.metricName,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.requests.RequestContext.buildResponse,org.apache.kafka.common.Node.id,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.buildAllTopicMetadataRequest,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.createKafkaApis,org.apache.kafka.common.metrics.Metrics.addMetric,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.network.ListenerName.hashCode,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.tearDown,org.apache.kafka.common.requests.MetadataResponse.errorCounts,org.apache.kafka.common.requests.MetadataRequest.data,org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.requests.MetadataRequest.allowAutoTopicCreation,org.apache.kafka.common.requests.MetadataRequest.isAllTopics,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.common.requests.RequestHeader.apiVersion,org.apache.kafka.common.requests.RequestHeader.apiKey,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.internals.Topic.isInternal,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.initializeMetadataCache,org.apache.kafka.common.requests.MetadataResponse.prepareResponse"
kafka,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.updateFollowerFetchStateBench,36,16,",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.record.FileRecords.batchIterator,org.apache.kafka.common.utils.KafkaThread.configureThread,org.apache.kafka.common.config.AbstractConfig.get,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.network.ListenerName.value,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.createLogConfig,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.utils.Utils.atomicMoveWithFallback,org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.config.ConfigDef.define,org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.config.ConfigDef.undefinedDependentConfigs,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.common.config.AbstractConfig.instantiateConfigProviders,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.tearDown,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.common.record.FileRecords.openChannel,org.apache.kafka.common.utils.Utils.join,kafka.metrics.FilteringJmxReporter.onMetricRemoved,org.apache.kafka.common.record.FileLogInputStream.nextBatch,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.config.ConfigDef.parseValue,org.apache.kafka.common.config.ConfigDef.parseType,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.TopicPartition.toString,org.apache.kafka.common.record.FileRecords.open,org.apache.kafka.common.config.AbstractConfig.extractPotentialVariables,org.apache.kafka.common.record.FileRecords.batchesFrom,org.apache.kafka.common.config.AbstractConfig.getBoolean",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.utils.KafkaThread.configureThread,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.createLogConfig,org.apache.kafka.common.utils.Utils.atomicMoveWithFallback,org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.tearDown,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.TopicPartition.toString,org.apache.kafka.common.record.FileRecords.open,org.apache.kafka.common.config.AbstractConfig.getBoolean"
kafka,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.updateFollowerFetchStateBenchNoChange,35,19,",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.record.FileRecords.sizeInBytes,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.record.FileRecords.batchIterator,org.apache.kafka.common.utils.KafkaThread.configureThread,org.apache.kafka.common.config.AbstractConfig.get,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.common.config.AbstractConfig.getDouble,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.createLogConfig,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.utils.Utils.atomicMoveWithFallback,org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.config.ConfigDef.define,org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.config.ConfigDef.undefinedDependentConfigs,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.common.config.AbstractConfig.instantiateConfigProviders,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.tearDown,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.common.record.FileRecords.openChannel,kafka.metrics.FilteringJmxReporter.onMetricRemoved,org.apache.kafka.common.utils.Utils.join,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.config.ConfigDef.parseValue,org.apache.kafka.common.config.ConfigDef.parseType,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.TopicPartition.toString,org.apache.kafka.common.record.FileRecords.open,org.apache.kafka.common.config.AbstractConfig.extractPotentialVariables,org.apache.kafka.common.record.FileRecords.batchesFrom,org.apache.kafka.common.config.AbstractConfig.getBoolean",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.record.FileRecords.sizeInBytes,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.utils.KafkaThread.configureThread,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.createLogConfig,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.utils.Utils.atomicMoveWithFallback,org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.tearDown,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.TopicPartition.toString,org.apache.kafka.common.record.FileRecords.open"
kafka,org.apache.kafka.jmh.producer.ProducerRecordBenchmark.constructorBenchmark,0,0,,
kafka,org.apache.kafka.jmh.record.CompressedRecordBatchValidationBenchmark.measureValidateMessagesAndAssignOffsetsCompressed,138,41,",org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.record.AbstractLegacyRecordBatch.magic,org.apache.kafka.common.record.LegacyRecord.compressionType,org.apache.kafka.common.record.DefaultRecordBatch.compressionType,org.apache.kafka.common.record.DefaultRecord.hasMagic,org.apache.kafka.common.record.DefaultRecord.readPartiallyFrom,org.apache.kafka.common.utils.Utils.writeTo,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.record.DefaultRecordBatch.setMaxTimestamp,org.apache.kafka.common.record.AbstractLegacyRecordBatch.hasProducerId,org.apache.kafka.common.record.DefaultRecordBatch.isTransactional,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.record.DefaultRecordBatch.writeHeader,org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint,org.apache.kafka.common.record.DefaultRecordBatch.maxTimestamp,org.apache.kafka.common.utils.PureJavaCrc32C.update,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.record.DefaultRecord.sizeInBytes,org.apache.kafka.common.record.MemoryRecordsBuilder.toInnerOffset,org.apache.kafka.common.record.DefaultRecordBatch.skipKeyValueIterator,org.apache.kafka.common.record.DefaultRecordBatch.setLastOffset,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatchSize,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.close,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.record.AbstractLegacyRecordBatch.key,org.apache.kafka.common.record.AbstractLegacyRecordBatch.ensureValid,org.apache.kafka.common.record.DefaultRecordBatch.baseSequence,org.apache.kafka.common.record.LegacyRecord.recordOverhead,org.apache.kafka.common.record.DefaultRecord.skipLengthDelimitedField,org.apache.kafka.common.utils.Crc32C.compute,org.apache.kafka.common.record.MemoryRecordsBuilder.writeLegacyCompressedWrapperHeader,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.write,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordAppend,org.apache.kafka.common.record.DefaultRecord.isCompressed,org.apache.kafka.common.utils.Utils.wrapNullable,org.apache.kafka.common.record.DefaultRecord.writeTo,org.apache.kafka.common.record.AbstractLegacyRecordBatch.compressionType,org.apache.kafka.common.record.DefaultRecordBatch.count,org.apache.kafka.common.utils.PrimitiveRef.ofInt,org.apache.kafka.common.record.DefaultRecord.readVarInt,org.apache.kafka.common.record.DefaultRecord.sizeOfBodyInBytes,org.apache.kafka.common.record.DefaultRecordBatch.magic,org.apache.kafka.common.record.LegacyRecord.computeChecksum,org.apache.kafka.common.record.MemoryRecordsBuilder.uncompressedBytesWritten,org.apache.kafka.common.utils.ByteUtils.writeVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.recordWritten,org.apache.kafka.common.record.DefaultRecord.recordSizeUpperBound,org.apache.kafka.common.record.LegacyRecord.attributes,org.apache.kafka.common.record.AbstractLegacyRecordBatch.producerEpoch,org.apache.kafka.common.record.DefaultRecordBatch.compressedIterator,org.apache.kafka.common.utils.ByteBufferInputStream.read,org.apache.kafka.common.utils.Checksums.updateLong,org.apache.kafka.common.record.DefaultRecordBatch.computeAttributes,org.apache.kafka.common.record.DefaultRecordBatch.producerId,org.apache.kafka.common.utils.AbstractIterator.allDone,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeBlock,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.ensureNotFinished,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.available,org.apache.kafka.common.record.MemoryRecords.builder,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.common.record.MemoryRecords.batchIterator,org.apache.kafka.common.utils.ByteUtils.readUnsignedInt,org.apache.kafka.common.record.MemoryRecordsBuilder.writeDefaultBatchHeader,org.apache.kafka.common.record.AbstractLegacyRecordBatch.streamingIterator,org.apache.kafka.common.record.LegacyRecord.write,org.apache.kafka.common.utils.Utils.readFully,org.apache.kafka.common.utils.ByteUtils.sizeOfUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.readVarint,org.apache.kafka.common.utils.ByteBufferOutputStream.buffer,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeEndMark,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatch,org.apache.kafka.common.record.MemoryRecordsBuilder.closeForRecordAppends,org.apache.kafka.common.record.LegacyRecord.timestampType,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.utils.ByteUtils.writeUnsignedInt,org.apache.kafka.common.record.DefaultRecordBatch.firstTimestamp,org.apache.kafka.common.utils.ByteBufferOutputStream.ensureRemaining,org.apache.kafka.common.record.DefaultRecord.timestamp,org.apache.kafka.common.utils.Crc32.reset,org.apache.kafka.common.record.MemoryRecordsBuilder.isClosed,org.apache.kafka.common.utils.ByteUtils.sizeOfVarlong,org.apache.kafka.common.utils.ByteUtils.readVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.appendWithOffset,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readHeader,org.apache.kafka.common.utils.Utils.utf8Length,org.apache.kafka.common.record.AbstractLegacyRecordBatch.iterator,org.apache.kafka.common.record.DefaultRecordBatch.estimateBatchSizeUpperBound,org.apache.kafka.common.record.MemoryRecordsBuilder.numRecords,org.apache.kafka.common.record.LegacyRecord.computeAttributes,org.apache.kafka.common.utils.PureJavaCrc32C.getValue,org.apache.kafka.common.record.LegacyRecord.keySize,org.apache.kafka.common.record.LegacyRecord.recordSize,org.apache.kafka.common.record.MemoryRecords.buffer,org.apache.kafka.common.record.DefaultRecord.sizeOf,org.apache.kafka.common.utils.Checksums.update,org.apache.kafka.common.utils.ByteUtils.writeUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.sizeOfVarint,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.flush,org.apache.kafka.common.utils.Crc32.getValue,org.apache.kafka.common.utils.Checksums.updateInt,org.apache.kafka.common.utils.Crc32C.create,org.apache.kafka.common.record.LegacyRecord.key,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.close,org.apache.kafka.common.utils.ByteBufferOutputStream.expandBuffer,org.apache.kafka.common.record.MemoryRecordsBuilder.info,org.apache.kafka.common.record.DefaultRecord.readVarLong,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordBatchWrite,org.apache.kafka.common.record.MemoryRecordsBuilder.nextSequentialOffset,org.apache.kafka.common.record.DefaultRecordBatch.timestampType,org.apache.kafka.common.record.MemoryRecordsBuilder.appendDefaultRecord,org.apache.kafka.common.record.LegacyRecord.isValid,org.apache.kafka.common.record.AbstractLegacyRecordBatch.value,org.apache.kafka.common.record.MemoryRecords.batches,org.apache.kafka.common.record.DefaultRecord.offset,org.apache.kafka.jmh.record.BaseRecordBatchBenchmark.createHeaders,org.apache.kafka.common.record.MemoryRecordsBuilder.buffer,org.apache.kafka.common.record.DefaultRecordBatch.attributes,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readBlock,org.apache.kafka.common.record.LegacyRecord.value,org.apache.kafka.common.record.AbstractLegacyRecordBatch.timestamp,org.apache.kafka.common.record.LegacyRecord.writeCompressedRecordHeader,org.apache.kafka.common.record.LegacyRecord.timestamp,org.apache.kafka.common.record.AbstractLegacyRecordBatch.lastOffset,org.apache.kafka.common.record.DefaultRecord.readByte,org.apache.kafka.common.utils.ByteBufferOutputStream.limit,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytesUpperBound,org.apache.kafka.common.utils.ByteUtils.writeVarint,org.apache.kafka.common.utils.PureJavaCrc32C.reset,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeHeader,org.apache.kafka.common.record.AbstractRecordBatch.hasProducerId,org.apache.kafka.common.record.DefaultRecordBatch.lastOffsetDelta,org.apache.kafka.common.record.AbstractRecords.estimateCompressedSizeInBytes,org.apache.kafka.common.record.AbstractRecordBatch.isCompressed,org.apache.kafka.common.record.DefaultRecordBatch.setPartitionLeaderEpoch,org.apache.kafka.common.utils.ByteBufferOutputStream.position,org.apache.kafka.common.record.AbstractLegacyRecordBatch.hasMagic,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.read,org.apache.kafka.jmh.record.CompressedRecordBatchValidationBenchmark.compressionType,org.apache.kafka.common.utils.Utils.sizeDelimited,org.apache.kafka.common.record.DefaultRecordBatch.baseOffset,org.apache.kafka.common.record.AbstractLegacyRecordBatch.timestampType,org.apache.kafka.common.record.AbstractLegacyRecordBatch.producerId,org.apache.kafka.common.record.LegacyRecord.buffer,org.apache.kafka.common.record.MemoryRecordsBuilder.validateProducerState,org.apache.kafka.common.record.MemoryRecordsBuilder.close,org.apache.kafka.common.record.AbstractLegacyRecordBatch.isTransactional,org.apache.kafka.common.record.AbstractRecords.recordBatchHeaderSizeInBytes,org.apache.kafka.common.utils.ByteUtils.writeUnsignedIntLE,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.record.BufferSupplier.create,org.apache.kafka.common.utils.Crc32.crc32,org.apache.kafka.common.record.AbstractLegacyRecordBatch.writeHeader,org.apache.kafka.common.record.LegacyRecord.ensureValid,org.apache.kafka.common.record.LegacyRecord.magic,org.apache.kafka.common.record.DefaultRecord.readMore,org.apache.kafka.common.record.AbstractLegacyRecordBatch.headers,org.apache.kafka.common.record.MemoryRecordsBuilder.appendLegacyRecord,org.apache.kafka.common.record.AbstractLegacyRecordBatch.sizeInBytes,org.apache.kafka.common.record.LegacyRecord.keyOffset,org.apache.kafka.common.utils.Utils.closeQuietly,org.apache.kafka.common.utils.Utils.utf8,org.apache.kafka.common.record.AbstractLegacyRecordBatch.baseSequence,org.apache.kafka.common.utils.Crc32.update,org.apache.kafka.common.record.LegacyRecord.checksum,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytes,org.apache.kafka.common.record.LegacyRecord.valueSizeOffset,org.apache.kafka.common.utils.AbstractIterator.next,org.apache.kafka.common.record.LegacyRecord.sizeInBytes,org.apache.kafka.common.utils.ByteBufferOutputStream.write",",org.apache.kafka.common.record.AbstractLegacyRecordBatch.producerEpoch,org.apache.kafka.common.utils.ByteBufferInputStream.read,org.apache.kafka.common.record.DefaultRecordBatch.setPartitionLeaderEpoch,org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.record.AbstractLegacyRecordBatch.magic,org.apache.kafka.common.record.DefaultRecordBatch.compressionType,org.apache.kafka.common.record.DefaultRecord.hasMagic,org.apache.kafka.common.record.MemoryRecordsBuilder.info,org.apache.kafka.common.record.AbstractLegacyRecordBatch.hasMagic,org.apache.kafka.common.record.DefaultRecord.readPartiallyFrom,org.apache.kafka.jmh.record.CompressedRecordBatchValidationBenchmark.compressionType,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.record.DefaultRecordBatch.setMaxTimestamp,org.apache.kafka.common.record.AbstractLegacyRecordBatch.timestampType,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.read,org.apache.kafka.common.record.DefaultRecordBatch.timestampType,org.apache.kafka.common.record.AbstractLegacyRecordBatch.producerId,org.apache.kafka.common.record.MemoryRecords.builder,org.apache.kafka.common.record.AbstractLegacyRecordBatch.hasProducerId,org.apache.kafka.common.record.DefaultRecordBatch.isTransactional,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.common.record.MemoryRecords.batchIterator,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.record.MemoryRecords.batches,org.apache.kafka.common.record.AbstractLegacyRecordBatch.streamingIterator,org.apache.kafka.common.record.DefaultRecord.offset,org.apache.kafka.common.record.AbstractLegacyRecordBatch.isTransactional,org.apache.kafka.common.record.AbstractRecords.recordBatchHeaderSizeInBytes,org.apache.kafka.jmh.record.BaseRecordBatchBenchmark.createHeaders,org.apache.kafka.common.record.DefaultRecord.sizeInBytes,org.apache.kafka.common.record.DefaultRecordBatch.skipKeyValueIterator,org.apache.kafka.common.record.DefaultRecordBatch.setLastOffset,org.apache.kafka.common.record.BufferSupplier.create,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.close,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.record.AbstractLegacyRecordBatch.timestamp,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.record.DefaultRecord.timestamp,org.apache.kafka.common.record.AbstractLegacyRecordBatch.ensureValid,org.apache.kafka.common.record.MemoryRecordsBuilder.appendWithOffset,org.apache.kafka.common.record.AbstractLegacyRecordBatch.sizeInBytes,org.apache.kafka.common.record.DefaultRecord.isCompressed,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytesUpperBound,org.apache.kafka.common.record.AbstractLegacyRecordBatch.compressionType,org.apache.kafka.common.record.AbstractRecordBatch.hasProducerId,org.apache.kafka.common.record.AbstractLegacyRecordBatch.baseSequence,org.apache.kafka.common.record.MemoryRecordsBuilder.numRecords,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytes,org.apache.kafka.common.record.MemoryRecords.buffer,org.apache.kafka.common.record.DefaultRecordBatch.magic,org.apache.kafka.common.utils.AbstractIterator.next,org.apache.kafka.common.record.MemoryRecordsBuilder.uncompressedBytesWritten,org.apache.kafka.common.record.AbstractRecordBatch.isCompressed"
kafka,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.measureIteratorForBatchWithSingleMessage,123,18,",org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.record.LegacyRecord.compressionType,org.apache.kafka.common.record.DefaultRecordBatch.compressionType,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.utils.Utils.writeTo,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.record.DefaultRecordBatch.writeHeader,org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint,org.apache.kafka.common.utils.PureJavaCrc32C.update,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.record.MemoryRecordsBuilder.toInnerOffset,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatchSize,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.close,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.record.DefaultRecordBatch.baseSequence,org.apache.kafka.common.record.LegacyRecord.recordOverhead,org.apache.kafka.common.utils.Crc32C.compute,org.apache.kafka.common.record.MemoryRecordsBuilder.writeLegacyCompressedWrapperHeader,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.write,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordAppend,org.apache.kafka.common.record.DefaultRecord.writeTo,org.apache.kafka.common.record.AbstractLegacyRecordBatch.compressionType,org.apache.kafka.common.utils.Utils.wrapNullable,org.apache.kafka.common.record.DefaultRecordBatch.count,org.apache.kafka.common.record.DefaultRecordBatch.streamingIterator,org.apache.kafka.common.record.DefaultRecord.sizeOfBodyInBytes,org.apache.kafka.common.record.DefaultRecordBatch.magic,org.apache.kafka.common.record.LegacyRecord.computeChecksum,org.apache.kafka.common.utils.ByteUtils.writeVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.recordWritten,org.apache.kafka.common.record.DefaultRecord.recordSizeUpperBound,org.apache.kafka.common.record.LegacyRecord.attributes,org.apache.kafka.common.record.DefaultRecordBatch.compressedIterator,org.apache.kafka.common.utils.ByteBufferInputStream.read,org.apache.kafka.common.utils.Checksums.updateLong,org.apache.kafka.common.record.DefaultRecordBatch.computeAttributes,org.apache.kafka.common.utils.AbstractIterator.allDone,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeBlock,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.ensureNotFinished,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.compressionType,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.available,org.apache.kafka.common.record.MemoryRecords.builder,org.apache.kafka.common.record.MemoryRecords.batchIterator,org.apache.kafka.common.record.MemoryRecordsBuilder.writeDefaultBatchHeader,org.apache.kafka.common.record.AbstractLegacyRecordBatch.streamingIterator,org.apache.kafka.common.record.LegacyRecord.write,org.apache.kafka.common.utils.Utils.readFully,org.apache.kafka.common.utils.ByteUtils.sizeOfUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.readVarint,org.apache.kafka.common.utils.ByteBufferOutputStream.buffer,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeEndMark,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatch,org.apache.kafka.common.record.MemoryRecordsBuilder.closeForRecordAppends,org.apache.kafka.common.record.LegacyRecord.timestampType,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.utils.ByteUtils.writeUnsignedInt,org.apache.kafka.common.record.DefaultRecordBatch.firstTimestamp,org.apache.kafka.common.utils.ByteBufferOutputStream.ensureRemaining,org.apache.kafka.common.utils.Crc32.reset,org.apache.kafka.common.record.MemoryRecordsBuilder.isClosed,org.apache.kafka.common.utils.ByteUtils.readVarlong,org.apache.kafka.common.utils.ByteUtils.sizeOfVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.appendWithOffset,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readHeader,org.apache.kafka.common.utils.Utils.utf8Length,org.apache.kafka.common.record.DefaultRecordBatch.uncompressedIterator,org.apache.kafka.common.record.AbstractLegacyRecordBatch.iterator,org.apache.kafka.common.record.DefaultRecordBatch.estimateBatchSizeUpperBound,org.apache.kafka.common.record.LegacyRecord.computeAttributes,org.apache.kafka.common.utils.PureJavaCrc32C.getValue,org.apache.kafka.common.record.LegacyRecord.keySize,org.apache.kafka.common.record.MemoryRecords.buffer,org.apache.kafka.common.record.LegacyRecord.recordSize,org.apache.kafka.common.record.DefaultRecord.sizeOf,org.apache.kafka.common.utils.Checksums.update,org.apache.kafka.common.utils.ByteUtils.writeUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.sizeOfVarint,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.flush,org.apache.kafka.common.utils.Crc32.getValue,org.apache.kafka.common.utils.Checksums.updateInt,org.apache.kafka.common.utils.Crc32C.create,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.close,org.apache.kafka.common.utils.ByteBufferOutputStream.expandBuffer,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordBatchWrite,org.apache.kafka.common.record.MemoryRecordsBuilder.nextSequentialOffset,org.apache.kafka.common.record.DefaultRecordBatch.timestampType,org.apache.kafka.common.record.MemoryRecordsBuilder.appendDefaultRecord,org.apache.kafka.common.record.MemoryRecords.batches,org.apache.kafka.jmh.record.BaseRecordBatchBenchmark.createHeaders,org.apache.kafka.common.record.DefaultRecord.readFrom,org.apache.kafka.common.record.MemoryRecordsBuilder.buffer,org.apache.kafka.common.record.DefaultRecordBatch.attributes,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readBlock,org.apache.kafka.common.record.LegacyRecord.value,org.apache.kafka.common.record.LegacyRecord.writeCompressedRecordHeader,org.apache.kafka.common.record.LegacyRecord.timestamp,org.apache.kafka.common.record.AbstractLegacyRecordBatch.lastOffset,org.apache.kafka.common.utils.ByteBufferOutputStream.limit,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytesUpperBound,org.apache.kafka.common.utils.ByteUtils.writeVarint,org.apache.kafka.common.utils.PureJavaCrc32C.reset,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeHeader,org.apache.kafka.common.record.AbstractRecordBatch.isCompressed,org.apache.kafka.common.utils.ByteBufferOutputStream.position,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.read,org.apache.kafka.common.record.DefaultRecordBatch.baseOffset,org.apache.kafka.common.utils.Utils.sizeDelimited,org.apache.kafka.common.record.LegacyRecord.buffer,org.apache.kafka.common.record.MemoryRecordsBuilder.validateProducerState,org.apache.kafka.common.record.MemoryRecordsBuilder.close,org.apache.kafka.common.utils.ByteUtils.writeUnsignedIntLE,org.apache.kafka.common.record.AbstractRecords.recordBatchHeaderSizeInBytes,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.record.DefaultRecord.readHeaders,org.apache.kafka.common.record.BufferSupplier.create,org.apache.kafka.common.utils.Crc32.crc32,org.apache.kafka.common.record.AbstractLegacyRecordBatch.writeHeader,org.apache.kafka.common.record.LegacyRecord.magic,org.apache.kafka.common.record.MemoryRecordsBuilder.appendLegacyRecord,org.apache.kafka.common.record.LegacyRecord.keyOffset,org.apache.kafka.common.utils.Utils.closeQuietly,org.apache.kafka.common.utils.Utils.utf8,org.apache.kafka.common.utils.Crc32.update,org.apache.kafka.common.record.LegacyRecord.valueSizeOffset,org.apache.kafka.common.utils.AbstractIterator.next,org.apache.kafka.common.utils.ByteBufferOutputStream.write",",org.apache.kafka.common.utils.ByteBufferInputStream.read,org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.read,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.compressionType,org.apache.kafka.common.record.MemoryRecords.builder,org.apache.kafka.common.record.MemoryRecords.batchIterator,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.record.MemoryRecords.batches,org.apache.kafka.common.record.AbstractLegacyRecordBatch.streamingIterator,org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint,org.apache.kafka.jmh.record.BaseRecordBatchBenchmark.createHeaders,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatch,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.record.DefaultRecord.readFrom,org.apache.kafka.common.record.BufferSupplier.create,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readBlock,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatchSize,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.close,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytesUpperBound,org.apache.kafka.common.record.DefaultRecordBatch.count,org.apache.kafka.common.record.DefaultRecordBatch.streamingIterator,org.apache.kafka.common.record.MemoryRecords.buffer,org.apache.kafka.common.utils.AbstractIterator.next"
kafka,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.measureSkipIteratorForVariableBatchSize,125,19,",org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.record.LegacyRecord.compressionType,org.apache.kafka.common.record.DefaultRecordBatch.compressionType,org.apache.kafka.common.record.DefaultRecord.readPartiallyFrom,org.apache.kafka.common.utils.Utils.writeTo,org.apache.kafka.common.record.MemoryRecords.readableRecords,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.record.DefaultRecordBatch.writeHeader,org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint,org.apache.kafka.common.utils.PureJavaCrc32C.update,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.record.MemoryRecordsBuilder.toInnerOffset,org.apache.kafka.common.record.DefaultRecordBatch.skipKeyValueIterator,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatchSize,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.close,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.record.DefaultRecordBatch.baseSequence,org.apache.kafka.common.record.LegacyRecord.recordOverhead,org.apache.kafka.common.record.DefaultRecord.skipLengthDelimitedField,org.apache.kafka.common.utils.Crc32C.compute,org.apache.kafka.common.record.MemoryRecordsBuilder.writeLegacyCompressedWrapperHeader,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.write,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordAppend,org.apache.kafka.common.record.DefaultRecord.writeTo,org.apache.kafka.common.record.AbstractLegacyRecordBatch.compressionType,org.apache.kafka.common.utils.Utils.wrapNullable,org.apache.kafka.common.record.DefaultRecordBatch.count,org.apache.kafka.common.utils.PrimitiveRef.ofInt,org.apache.kafka.common.record.DefaultRecord.readVarInt,org.apache.kafka.common.record.DefaultRecord.sizeOfBodyInBytes,org.apache.kafka.common.record.DefaultRecordBatch.magic,org.apache.kafka.common.record.LegacyRecord.computeChecksum,org.apache.kafka.common.utils.ByteUtils.writeVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.recordWritten,org.apache.kafka.common.record.LegacyRecord.attributes,org.apache.kafka.common.record.DefaultRecord.recordSizeUpperBound,org.apache.kafka.common.utils.ByteBufferInputStream.read,org.apache.kafka.common.record.DefaultRecordBatch.compressedIterator,org.apache.kafka.common.utils.Checksums.updateLong,org.apache.kafka.common.record.DefaultRecordBatch.computeAttributes,org.apache.kafka.common.utils.AbstractIterator.allDone,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeBlock,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.ensureNotFinished,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.compressionType,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.available,org.apache.kafka.common.record.MemoryRecords.builder,org.apache.kafka.common.record.MemoryRecords.batchIterator,org.apache.kafka.common.record.MemoryRecordsBuilder.writeDefaultBatchHeader,org.apache.kafka.common.record.LegacyRecord.write,org.apache.kafka.common.utils.Utils.readFully,org.apache.kafka.common.utils.ByteUtils.sizeOfUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.readVarint,org.apache.kafka.common.utils.ByteBufferOutputStream.buffer,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatch,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeEndMark,org.apache.kafka.common.record.MemoryRecordsBuilder.closeForRecordAppends,org.apache.kafka.common.record.LegacyRecord.timestampType,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.utils.ByteUtils.writeUnsignedInt,org.apache.kafka.common.record.DefaultRecordBatch.firstTimestamp,org.apache.kafka.common.utils.ByteBufferOutputStream.ensureRemaining,org.apache.kafka.common.utils.ByteUtils.sizeOfVarlong,org.apache.kafka.common.utils.Crc32.reset,org.apache.kafka.common.utils.ByteUtils.readVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.isClosed,org.apache.kafka.common.record.MemoryRecordsBuilder.appendWithOffset,org.apache.kafka.common.record.DefaultRecordBatch.uncompressedIterator,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readHeader,org.apache.kafka.common.utils.Utils.utf8Length,org.apache.kafka.common.record.AbstractLegacyRecordBatch.iterator,org.apache.kafka.common.record.DefaultRecordBatch.estimateBatchSizeUpperBound,org.apache.kafka.common.record.LegacyRecord.computeAttributes,org.apache.kafka.common.utils.PureJavaCrc32C.getValue,org.apache.kafka.common.record.LegacyRecord.keySize,org.apache.kafka.common.record.LegacyRecord.recordSize,org.apache.kafka.common.record.MemoryRecords.buffer,org.apache.kafka.common.record.DefaultRecord.sizeOf,org.apache.kafka.common.utils.Checksums.update,org.apache.kafka.common.utils.ByteUtils.writeUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.sizeOfVarint,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.flush,org.apache.kafka.common.utils.Crc32.getValue,org.apache.kafka.common.utils.Crc32C.create,org.apache.kafka.common.utils.Checksums.updateInt,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.close,org.apache.kafka.common.utils.ByteBufferOutputStream.expandBuffer,org.apache.kafka.common.record.DefaultRecord.readVarLong,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordBatchWrite,org.apache.kafka.common.record.DefaultRecordBatch.timestampType,org.apache.kafka.common.record.MemoryRecordsBuilder.nextSequentialOffset,org.apache.kafka.common.record.MemoryRecordsBuilder.appendDefaultRecord,org.apache.kafka.common.record.MemoryRecords.batches,org.apache.kafka.jmh.record.BaseRecordBatchBenchmark.createHeaders,org.apache.kafka.common.record.DefaultRecord.readFrom,org.apache.kafka.common.record.MemoryRecordsBuilder.buffer,org.apache.kafka.common.record.DefaultRecordBatch.attributes,org.apache.kafka.common.record.LegacyRecord.value,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readBlock,org.apache.kafka.common.record.LegacyRecord.writeCompressedRecordHeader,org.apache.kafka.common.record.LegacyRecord.timestamp,org.apache.kafka.common.record.AbstractLegacyRecordBatch.lastOffset,org.apache.kafka.common.record.DefaultRecord.readByte,org.apache.kafka.common.utils.ByteBufferOutputStream.limit,org.apache.kafka.common.utils.ByteUtils.writeVarint,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytesUpperBound,org.apache.kafka.common.utils.PureJavaCrc32C.reset,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeHeader,org.apache.kafka.common.record.AbstractRecordBatch.isCompressed,org.apache.kafka.common.utils.ByteBufferOutputStream.position,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.read,org.apache.kafka.common.record.DefaultRecordBatch.baseOffset,org.apache.kafka.common.utils.Utils.sizeDelimited,org.apache.kafka.common.record.LegacyRecord.buffer,org.apache.kafka.common.record.MemoryRecordsBuilder.validateProducerState,org.apache.kafka.common.record.MemoryRecordsBuilder.close,org.apache.kafka.common.utils.ByteUtils.writeUnsignedIntLE,org.apache.kafka.common.record.AbstractRecords.recordBatchHeaderSizeInBytes,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.record.DefaultRecord.readHeaders,org.apache.kafka.common.record.BufferSupplier.create,org.apache.kafka.common.utils.Crc32.crc32,org.apache.kafka.common.record.AbstractLegacyRecordBatch.writeHeader,org.apache.kafka.common.record.LegacyRecord.magic,org.apache.kafka.common.record.DefaultRecord.readMore,org.apache.kafka.common.record.MemoryRecordsBuilder.appendLegacyRecord,org.apache.kafka.common.record.LegacyRecord.keyOffset,org.apache.kafka.common.utils.Utils.closeQuietly,org.apache.kafka.common.utils.Utils.utf8,org.apache.kafka.common.utils.Crc32.update,org.apache.kafka.common.record.LegacyRecord.valueSizeOffset,org.apache.kafka.common.utils.AbstractIterator.next,org.apache.kafka.common.utils.ByteBufferOutputStream.write",",org.apache.kafka.common.utils.ByteBufferInputStream.read,org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.record.DefaultRecord.readPartiallyFrom,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.read,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.compressionType,org.apache.kafka.common.record.MemoryRecords.builder,org.apache.kafka.common.record.MemoryRecords.batchIterator,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.record.MemoryRecords.batches,org.apache.kafka.jmh.record.BaseRecordBatchBenchmark.createHeaders,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.record.DefaultRecord.readFrom,org.apache.kafka.common.record.DefaultRecordBatch.skipKeyValueIterator,org.apache.kafka.common.record.BufferSupplier.create,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readBlock,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.close,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.record.DefaultRecord.skipLengthDelimitedField,org.apache.kafka.common.record.DefaultRecord.readMore,org.apache.kafka.common.record.AbstractLegacyRecordBatch.iterator,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytesUpperBound,org.apache.kafka.common.record.MemoryRecords.buffer,org.apache.kafka.common.utils.AbstractIterator.next"
kafka,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.measureStreamingIteratorForVariableBatchSize,124,19,",org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.record.LegacyRecord.compressionType,org.apache.kafka.common.record.DefaultRecordBatch.compressionType,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.utils.Utils.writeTo,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.record.DefaultRecordBatch.writeHeader,org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint,org.apache.kafka.common.utils.PureJavaCrc32C.update,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.record.MemoryRecordsBuilder.toInnerOffset,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatchSize,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.close,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.record.DefaultRecordBatch.baseSequence,org.apache.kafka.common.record.LegacyRecord.recordOverhead,org.apache.kafka.common.utils.Crc32C.compute,org.apache.kafka.common.record.MemoryRecordsBuilder.writeLegacyCompressedWrapperHeader,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.write,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordAppend,org.apache.kafka.common.record.AbstractLegacyRecordBatch.compressionType,org.apache.kafka.common.utils.Utils.wrapNullable,org.apache.kafka.common.record.DefaultRecord.writeTo,org.apache.kafka.common.record.DefaultRecordBatch.count,org.apache.kafka.common.record.DefaultRecordBatch.streamingIterator,org.apache.kafka.common.record.DefaultRecord.sizeOfBodyInBytes,org.apache.kafka.common.record.DefaultRecordBatch.magic,org.apache.kafka.common.record.LegacyRecord.computeChecksum,org.apache.kafka.common.utils.ByteUtils.writeVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.recordWritten,org.apache.kafka.common.record.DefaultRecord.recordSizeUpperBound,org.apache.kafka.common.record.LegacyRecord.attributes,org.apache.kafka.common.record.DefaultRecordBatch.compressedIterator,org.apache.kafka.common.utils.ByteBufferInputStream.read,org.apache.kafka.common.utils.Checksums.updateLong,org.apache.kafka.common.record.DefaultRecordBatch.computeAttributes,org.apache.kafka.common.utils.AbstractIterator.allDone,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeBlock,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.ensureNotFinished,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.compressionType,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.available,org.apache.kafka.common.record.MemoryRecords.builder,org.apache.kafka.common.record.MemoryRecords.batchIterator,org.apache.kafka.common.record.MemoryRecordsBuilder.writeDefaultBatchHeader,org.apache.kafka.common.record.AbstractLegacyRecordBatch.streamingIterator,org.apache.kafka.common.record.LegacyRecord.write,org.apache.kafka.common.utils.Utils.readFully,org.apache.kafka.common.utils.ByteUtils.sizeOfUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.readVarint,org.apache.kafka.common.utils.ByteBufferOutputStream.buffer,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeEndMark,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatch,org.apache.kafka.common.record.MemoryRecordsBuilder.closeForRecordAppends,org.apache.kafka.common.record.LegacyRecord.timestampType,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.utils.ByteUtils.writeUnsignedInt,org.apache.kafka.common.record.DefaultRecordBatch.firstTimestamp,org.apache.kafka.common.utils.ByteBufferOutputStream.ensureRemaining,org.apache.kafka.common.utils.Crc32.reset,org.apache.kafka.common.record.MemoryRecordsBuilder.isClosed,org.apache.kafka.common.utils.ByteUtils.readVarlong,org.apache.kafka.common.utils.ByteUtils.sizeOfVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.appendWithOffset,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readHeader,org.apache.kafka.common.utils.Utils.utf8Length,org.apache.kafka.common.record.DefaultRecordBatch.uncompressedIterator,org.apache.kafka.common.record.AbstractLegacyRecordBatch.iterator,org.apache.kafka.common.record.DefaultRecordBatch.estimateBatchSizeUpperBound,org.apache.kafka.common.record.LegacyRecord.computeAttributes,org.apache.kafka.common.utils.PureJavaCrc32C.getValue,org.apache.kafka.common.record.LegacyRecord.keySize,org.apache.kafka.common.record.LegacyRecord.recordSize,org.apache.kafka.common.record.MemoryRecords.buffer,org.apache.kafka.common.record.DefaultRecord.sizeOf,org.apache.kafka.common.utils.Checksums.update,org.apache.kafka.common.utils.ByteUtils.writeUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.sizeOfVarint,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.flush,org.apache.kafka.common.utils.Crc32.getValue,org.apache.kafka.common.utils.Checksums.updateInt,org.apache.kafka.common.utils.Crc32C.create,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.close,org.apache.kafka.common.utils.ByteBufferOutputStream.expandBuffer,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordBatchWrite,org.apache.kafka.common.record.MemoryRecordsBuilder.nextSequentialOffset,org.apache.kafka.common.record.DefaultRecordBatch.timestampType,org.apache.kafka.common.record.MemoryRecordsBuilder.appendDefaultRecord,org.apache.kafka.common.record.MemoryRecords.batches,org.apache.kafka.jmh.record.BaseRecordBatchBenchmark.createHeaders,org.apache.kafka.common.record.DefaultRecord.readFrom,org.apache.kafka.common.record.MemoryRecordsBuilder.buffer,org.apache.kafka.common.record.DefaultRecordBatch.attributes,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readBlock,org.apache.kafka.common.record.LegacyRecord.value,org.apache.kafka.common.record.LegacyRecord.writeCompressedRecordHeader,org.apache.kafka.common.record.LegacyRecord.timestamp,org.apache.kafka.common.record.AbstractLegacyRecordBatch.lastOffset,org.apache.kafka.common.utils.ByteBufferOutputStream.limit,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytesUpperBound,org.apache.kafka.common.utils.ByteUtils.writeVarint,org.apache.kafka.common.utils.PureJavaCrc32C.reset,org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.writeHeader,org.apache.kafka.common.record.AbstractRecordBatch.isCompressed,org.apache.kafka.common.utils.ByteBufferOutputStream.position,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.read,org.apache.kafka.common.utils.Utils.sizeDelimited,org.apache.kafka.common.record.DefaultRecordBatch.baseOffset,org.apache.kafka.common.record.LegacyRecord.buffer,org.apache.kafka.common.record.MemoryRecordsBuilder.validateProducerState,org.apache.kafka.common.record.MemoryRecordsBuilder.close,org.apache.kafka.common.utils.ByteUtils.writeUnsignedIntLE,org.apache.kafka.common.record.AbstractRecords.recordBatchHeaderSizeInBytes,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.record.DefaultRecord.readHeaders,org.apache.kafka.common.record.BufferSupplier.create,org.apache.kafka.common.utils.Crc32.crc32,org.apache.kafka.common.record.AbstractLegacyRecordBatch.writeHeader,org.apache.kafka.common.record.LegacyRecord.magic,org.apache.kafka.common.record.MemoryRecordsBuilder.appendLegacyRecord,org.apache.kafka.common.record.LegacyRecord.keyOffset,org.apache.kafka.common.utils.Utils.closeQuietly,org.apache.kafka.common.utils.Utils.utf8,org.apache.kafka.common.utils.Crc32.update,org.apache.kafka.common.record.LegacyRecord.valueSizeOffset,org.apache.kafka.common.utils.AbstractIterator.next,org.apache.kafka.common.utils.ByteBufferOutputStream.write",",org.apache.kafka.common.utils.ByteBufferInputStream.read,org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.read,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.compressionType,org.apache.kafka.common.record.MemoryRecords.builder,org.apache.kafka.common.record.MemoryRecords.batchIterator,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.record.MemoryRecords.batches,org.apache.kafka.common.record.AbstractLegacyRecordBatch.streamingIterator,org.apache.kafka.jmh.record.BaseRecordBatchBenchmark.createHeaders,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.record.DefaultRecord.readFrom,org.apache.kafka.common.record.BufferSupplier.create,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.readBlock,org.apache.kafka.common.record.KafkaLZ4BlockInputStream.close,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.record.AbstractLegacyRecordBatch.iterator,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytesUpperBound,org.apache.kafka.common.record.DefaultRecordBatch.count,org.apache.kafka.common.record.DefaultRecordBatch.streamingIterator,org.apache.kafka.common.record.MemoryRecords.buffer,org.apache.kafka.common.utils.AbstractIterator.next"
kafka,org.apache.kafka.jmh.record.UncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed,107,34,",org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.record.AbstractLegacyRecordBatch.magic,org.apache.kafka.common.record.LegacyRecord.compressionType,org.apache.kafka.common.record.DefaultRecordBatch.compressionType,org.apache.kafka.common.record.DefaultRecord.hasMagic,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.utils.Utils.writeTo,org.apache.kafka.common.record.DefaultRecordBatch.setMaxTimestamp,org.apache.kafka.common.record.AbstractLegacyRecordBatch.hasProducerId,org.apache.kafka.common.record.DefaultRecordBatch.isTransactional,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.record.DefaultRecordBatch.writeHeader,org.apache.kafka.common.record.DefaultRecordBatch.iterator,org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint,org.apache.kafka.common.record.DefaultRecordBatch.maxTimestamp,org.apache.kafka.common.utils.PureJavaCrc32C.update,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.record.MemoryRecordsBuilder.toInnerOffset,org.apache.kafka.common.record.DefaultRecordBatch.setLastOffset,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatchSize,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.record.DefaultRecordBatch.baseSequence,org.apache.kafka.common.record.LegacyRecord.recordOverhead,org.apache.kafka.common.utils.Crc32C.compute,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordAppend,org.apache.kafka.common.record.AbstractLegacyRecordBatch.compressionType,org.apache.kafka.common.utils.Utils.wrapNullable,org.apache.kafka.common.record.DefaultRecord.writeTo,org.apache.kafka.jmh.record.UncompressedRecordBatchValidationBenchmark.compressionType,org.apache.kafka.common.record.DefaultRecordBatch.count,org.apache.kafka.common.record.DefaultRecord.sizeOfBodyInBytes,org.apache.kafka.common.record.DefaultRecordBatch.magic,org.apache.kafka.common.record.LegacyRecord.computeChecksum,org.apache.kafka.common.utils.ByteUtils.writeVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.recordWritten,org.apache.kafka.common.record.DefaultRecord.recordSizeUpperBound,org.apache.kafka.common.record.LegacyRecord.attributes,org.apache.kafka.common.utils.Checksums.updateLong,org.apache.kafka.common.record.DefaultRecordBatch.computeAttributes,org.apache.kafka.common.record.DefaultRecordBatch.producerId,org.apache.kafka.common.utils.AbstractIterator.allDone,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.common.record.MemoryRecords.builder,org.apache.kafka.common.record.MemoryRecords.batchIterator,org.apache.kafka.common.record.MemoryRecordsBuilder.writeDefaultBatchHeader,org.apache.kafka.common.record.LegacyRecord.write,org.apache.kafka.common.utils.ByteUtils.sizeOfUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.readVarint,org.apache.kafka.common.utils.ByteBufferOutputStream.buffer,org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatch,org.apache.kafka.common.record.MemoryRecordsBuilder.closeForRecordAppends,org.apache.kafka.common.record.LegacyRecord.timestampType,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.record.DefaultRecordBatch.firstTimestamp,org.apache.kafka.common.utils.ByteBufferOutputStream.ensureRemaining,org.apache.kafka.common.record.DefaultRecord.timestamp,org.apache.kafka.common.utils.Crc32.reset,org.apache.kafka.common.record.MemoryRecordsBuilder.isClosed,org.apache.kafka.common.utils.ByteUtils.readVarlong,org.apache.kafka.common.utils.ByteUtils.sizeOfVarlong,org.apache.kafka.common.record.MemoryRecordsBuilder.appendWithOffset,org.apache.kafka.common.record.DefaultRecordBatch.uncompressedIterator,org.apache.kafka.common.utils.Utils.utf8Length,org.apache.kafka.common.record.AbstractLegacyRecordBatch.iterator,org.apache.kafka.common.record.DefaultRecordBatch.estimateBatchSizeUpperBound,org.apache.kafka.common.record.LegacyRecord.computeAttributes,org.apache.kafka.common.utils.PureJavaCrc32C.getValue,org.apache.kafka.common.record.MemoryRecords.buffer,org.apache.kafka.common.record.LegacyRecord.recordSize,org.apache.kafka.common.record.DefaultRecord.sizeOf,org.apache.kafka.common.utils.Checksums.update,org.apache.kafka.common.utils.ByteUtils.writeUnsignedVarint,org.apache.kafka.common.utils.ByteUtils.sizeOfVarint,org.apache.kafka.common.utils.Crc32.getValue,org.apache.kafka.common.utils.Checksums.updateInt,org.apache.kafka.common.utils.Crc32C.create,org.apache.kafka.common.record.MemoryRecordsBuilder.ensureOpenForRecordBatchWrite,org.apache.kafka.common.record.MemoryRecordsBuilder.nextSequentialOffset,org.apache.kafka.common.record.DefaultRecordBatch.timestampType,org.apache.kafka.common.record.MemoryRecordsBuilder.appendDefaultRecord,org.apache.kafka.common.record.MemoryRecords.batches,org.apache.kafka.jmh.record.BaseRecordBatchBenchmark.createHeaders,org.apache.kafka.common.record.DefaultRecord.readFrom,org.apache.kafka.common.record.MemoryRecordsBuilder.buffer,org.apache.kafka.common.record.DefaultRecordBatch.attributes,org.apache.kafka.common.record.AbstractLegacyRecordBatch.timestamp,org.apache.kafka.common.record.LegacyRecord.timestamp,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytesUpperBound,org.apache.kafka.common.utils.ByteUtils.writeVarint,org.apache.kafka.common.utils.PureJavaCrc32C.reset,org.apache.kafka.common.record.AbstractRecordBatch.hasProducerId,org.apache.kafka.common.record.DefaultRecordBatch.lastOffsetDelta,org.apache.kafka.common.record.AbstractRecordBatch.isCompressed,org.apache.kafka.common.record.DefaultRecordBatch.setPartitionLeaderEpoch,org.apache.kafka.common.utils.ByteBufferOutputStream.position,org.apache.kafka.common.record.AbstractLegacyRecordBatch.hasMagic,org.apache.kafka.common.record.DefaultRecordBatch.baseOffset,org.apache.kafka.common.record.AbstractLegacyRecordBatch.timestampType,org.apache.kafka.common.record.MemoryRecordsBuilder.validateProducerState,org.apache.kafka.common.record.MemoryRecordsBuilder.close,org.apache.kafka.common.record.AbstractLegacyRecordBatch.isTransactional,org.apache.kafka.common.record.AbstractRecords.recordBatchHeaderSizeInBytes,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.record.DefaultRecord.readHeaders,org.apache.kafka.common.record.BufferSupplier.create,org.apache.kafka.common.record.AbstractLegacyRecordBatch.writeHeader,org.apache.kafka.common.record.LegacyRecord.magic,org.apache.kafka.common.record.MemoryRecordsBuilder.appendLegacyRecord,org.apache.kafka.common.utils.Utils.utf8,org.apache.kafka.common.utils.Crc32.update,org.apache.kafka.common.utils.AbstractIterator.next,org.apache.kafka.common.utils.ByteBufferOutputStream.write",",org.apache.kafka.common.record.DefaultRecordBatch.setPartitionLeaderEpoch,org.apache.kafka.common.record.MemoryRecordsBuilder.append,org.apache.kafka.common.record.AbstractLegacyRecordBatch.magic,org.apache.kafka.common.record.DefaultRecord.hasMagic,org.apache.kafka.common.record.AbstractLegacyRecordBatch.hasMagic,org.apache.kafka.common.record.DefaultRecordBatch.timestampType,org.apache.kafka.common.record.MemoryRecords.readableRecords,org.apache.kafka.common.record.MemoryRecordsBuilder.build,org.apache.kafka.common.record.DefaultRecordBatch.setMaxTimestamp,org.apache.kafka.common.record.AbstractLegacyRecordBatch.timestampType,org.apache.kafka.common.record.MemoryRecords.builder,org.apache.kafka.common.record.AbstractLegacyRecordBatch.hasProducerId,org.apache.kafka.common.record.DefaultRecordBatch.isTransactional,org.apache.kafka.common.record.MemoryRecords.batchIterator,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.record.MemoryRecords.batches,org.apache.kafka.common.record.DefaultRecordBatch.iterator,org.apache.kafka.common.record.AbstractLegacyRecordBatch.isTransactional,org.apache.kafka.jmh.record.BaseRecordBatchBenchmark.createHeaders,org.apache.kafka.common.record.LegacyRecord.timestampType,org.apache.kafka.common.record.DefaultRecord.readFrom,org.apache.kafka.common.record.BufferSupplier.create,org.apache.kafka.common.record.DefaultRecordBatch.setLastOffset,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.record.AbstractLegacyRecordBatch.timestamp,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.record.DefaultRecord.timestamp,org.apache.kafka.common.record.LegacyRecord.magic,org.apache.kafka.common.record.LegacyRecord.timestamp,org.apache.kafka.common.record.AbstractLegacyRecordBatch.iterator,org.apache.kafka.common.record.AbstractRecords.estimateSizeInBytesUpperBound,org.apache.kafka.common.record.AbstractRecordBatch.hasProducerId,org.apache.kafka.jmh.record.UncompressedRecordBatchValidationBenchmark.compressionType,org.apache.kafka.common.record.MemoryRecords.buffer,org.apache.kafka.common.record.DefaultRecordBatch.magic,org.apache.kafka.common.utils.AbstractIterator.next,org.apache.kafka.common.record.AbstractRecordBatch.isCompressed"
kafka,org.apache.kafka.jmh.server.CheckpointBench.measureCheckpointHighWatermarks,64,40,",org.apache.kafka.common.metrics.Sensor.checkForest,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.metrics.Metrics.close,org.apache.kafka.common.metrics.Metrics.metricName,org.apache.kafka.common.utils.MockTime.maybeSleep,org.apache.kafka.common.utils.AbstractIterator.allDone,org.apache.kafka.common.metrics.Metrics.registerMetric,org.apache.kafka.common.record.FileRecords.sizeInBytes,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.record.FileRecords.batchIterator,org.apache.kafka.common.utils.KafkaThread.configureThread,org.apache.kafka.common.config.AbstractConfig.get,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.config.AbstractConfig.getConfiguredInstance,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.metrics.Sensor.add,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.common.config.AbstractConfig.getDouble,org.apache.kafka.common.metrics.Metrics.addMetric,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.utils.Exit.addShutdownHook,org.apache.kafka.common.utils.Utils.atomicMoveWithFallback,org.apache.kafka.common.network.ListenerName.hashCode,org.apache.kafka.common.config.AbstractConfig.postProcessParsedConfig,org.apache.kafka.common.utils.KafkaThread.nonDaemon,org.apache.kafka.common.config.AbstractConfig.getShort,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.config.ConfigDef.convertToString,org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.config.ConfigDef.define,org.apache.kafka.common.utils.MockTime.nanoseconds,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.config.ConfigDef.undefinedDependentConfigs,org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.common.TopicPartition.equals,org.apache.kafka.common.config.AbstractConfig.instantiateConfigProviders,org.apache.kafka.common.metrics.Metrics.sensor,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,org.apache.kafka.common.config.ConfigDef.convertToStringMapWithPasswordValues,org.apache.kafka.common.config.AbstractConfig.getPassword,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.jmh.server.CheckpointBench.tearDown,org.apache.kafka.common.record.FileRecords.channel,org.apache.kafka.common.record.FileRecords.openChannel,org.apache.kafka.common.utils.Utils.delete,kafka.metrics.FilteringJmxReporter.onMetricRemoved,org.apache.kafka.common.utils.Utils.join,org.apache.kafka.common.record.FileLogInputStream.nextBatch,org.apache.kafka.common.MetricName.hashCode,org.apache.kafka.common.config.ConfigDef.defaultValues,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.config.ConfigDef.parseValue,org.apache.kafka.common.config.ConfigDef.parseType,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.metrics.Sensor.hasExpired,org.apache.kafka.common.config.AbstractConfig.logAll,org.apache.kafka.common.config.AbstractConfig.getClass,org.apache.kafka.common.TopicPartition.toString,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.record.FileRecords.open,org.apache.kafka.test.TestUtils.tempDirectory,org.apache.kafka.common.config.AbstractConfig.extractPotentialVariables,org.apache.kafka.common.metrics.Metrics.getSensor,org.apache.kafka.common.utils.MockTime.milliseconds,org.apache.kafka.common.record.FileRecords.batchesFrom,org.apache.kafka.common.config.AbstractConfig.getBoolean",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.metrics.Metrics.metricName,org.apache.kafka.common.record.FileRecords.sizeInBytes,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.utils.KafkaThread.configureThread,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.config.AbstractConfig.getConfiguredInstance,org.apache.kafka.common.metrics.Sensor.add,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.common.config.AbstractConfig.getDouble,org.apache.kafka.common.metrics.Metrics.addMetric,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.utils.Utils.atomicMoveWithFallback,org.apache.kafka.common.network.ListenerName.hashCode,org.apache.kafka.common.config.AbstractConfig.postProcessParsedConfig,org.apache.kafka.common.config.AbstractConfig.getShort,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize,org.apache.kafka.common.config.ConfigDef.define,org.apache.kafka.common.utils.MockTime.nanoseconds,org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.common.TopicPartition.equals,org.apache.kafka.common.config.ConfigDef.convertToStringMapWithPasswordValues,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,org.apache.kafka.common.config.AbstractConfig.getPassword,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.jmh.server.CheckpointBench.tearDown,org.apache.kafka.common.utils.Utils.join,org.apache.kafka.common.config.ConfigDef.defaultValues,org.apache.kafka.common.utils.MockTime.milliseconds,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.TopicPartition.toString,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.record.FileRecords.open,org.apache.kafka.test.TestUtils.tempDirectory,org.apache.kafka.common.config.AbstractConfig.logAll,org.apache.kafka.common.metrics.Metrics.sensor,org.apache.kafka.common.config.AbstractConfig.getBoolean"
kafka,org.apache.kafka.jmh.server.CheckpointBench.measureCheckpointLogStartOffsets,66,41,",org.apache.kafka.common.metrics.Metrics.close,org.apache.kafka.common.config.types.Password.toString,org.apache.kafka.common.record.FileRecords.batchIterator,org.apache.kafka.common.utils.KafkaThread.configureThread,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.utils.Exit.addShutdownHook,org.apache.kafka.common.utils.KafkaThread.nonDaemon,org.apache.kafka.common.config.AbstractConfig.getShort,org.apache.kafka.common.record.RecordBatchIterator.makeNext,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,org.apache.kafka.common.config.AbstractConfig.getPassword,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.utils.AbstractIterator.hasNext,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.jmh.server.CheckpointBench.tearDown,org.apache.kafka.common.record.FileRecords.openChannel,org.apache.kafka.common.utils.Utils.delete,kafka.metrics.FilteringJmxReporter.onMetricRemoved,org.apache.kafka.common.metrics.Sensor.hasExpired,org.apache.kafka.common.metrics.Sensor.checkForest,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.utils.AbstractIterator.allDone,org.apache.kafka.common.record.FileRecords.sizeInBytes,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.config.AbstractConfig.get,org.apache.kafka.common.metrics.Sensor.add,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.common.config.AbstractConfig.getDouble,org.apache.kafka.common.metrics.KafkaMetric.metricName,org.apache.kafka.common.utils.MockTime.nanoseconds,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.config.ConfigDef.convertToStringMapWithPasswordValues,org.apache.kafka.common.record.FileRecords.channel,org.apache.kafka.common.utils.Utils.join,org.apache.kafka.common.config.ConfigDef.parseValue,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.metrics.MetricConfig.tags,org.apache.kafka.common.metrics.Metrics.metricName,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.metrics.Metrics.addMetric,org.apache.kafka.common.network.ListenerName.hashCode,org.apache.kafka.common.config.AbstractConfig.postProcessParsedConfig,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize,org.apache.kafka.common.config.ConfigDef.undefinedDependentConfigs,org.apache.kafka.common.TopicPartition.equals,org.apache.kafka.common.config.AbstractConfig.instantiateConfigProviders,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.common.MetricName.hashCode,org.apache.kafka.common.config.ConfigDef.parseType,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.config.AbstractConfig.logAll,org.apache.kafka.common.metrics.Metrics.sensor,org.apache.kafka.test.TestUtils.tempDirectory,org.apache.kafka.common.metrics.Metrics.getSensor,org.apache.kafka.common.utils.MockTime.milliseconds,org.apache.kafka.common.utils.MockTime.maybeSleep,org.apache.kafka.common.metrics.Metrics.registerMetric,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.config.AbstractConfig.getConfiguredInstance,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.utils.Utils.atomicMoveWithFallback,org.apache.kafka.common.config.ConfigDef.convertToString,org.apache.kafka.common.config.ConfigDef.define,org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.record.FileLogInputStream.nextBatch,org.apache.kafka.common.config.ConfigDef.defaultValues,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.config.AbstractConfig.getClass,org.apache.kafka.common.TopicPartition.toString,org.apache.kafka.common.record.FileRecords.open,org.apache.kafka.common.config.AbstractConfig.extractPotentialVariables,org.apache.kafka.common.record.FileRecords.batchesFrom,org.apache.kafka.common.config.AbstractConfig.getBoolean",",org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.metrics.Metrics.metricName,org.apache.kafka.common.record.FileRecords.sizeInBytes,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.utils.KafkaThread.configureThread,org.apache.kafka.common.TopicPartition.partition,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.config.AbstractConfig.getConfiguredInstance,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.metrics.Sensor.add,org.apache.kafka.common.utils.SystemTime.nanoseconds,org.apache.kafka.common.config.AbstractConfig.getDouble,org.apache.kafka.common.metrics.Metrics.addMetric,kafka.metrics.KafkaYammerMetrics.defaultRegistry,org.apache.kafka.common.utils.Utils.atomicMoveWithFallback,org.apache.kafka.common.network.ListenerName.hashCode,org.apache.kafka.common.config.AbstractConfig.postProcessParsedConfig,org.apache.kafka.common.config.AbstractConfig.getShort,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize,org.apache.kafka.common.config.ConfigDef.define,org.apache.kafka.common.utils.MockTime.nanoseconds,org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.utils.Java.parseVersion,org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.common.TopicPartition.equals,org.apache.kafka.common.config.ConfigDef.convertToStringMapWithPasswordValues,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,org.apache.kafka.common.config.AbstractConfig.getPassword,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.common.utils.Utils.mkSet,org.apache.kafka.jmh.server.CheckpointBench.tearDown,org.apache.kafka.common.utils.Utils.join,org.apache.kafka.common.config.ConfigDef.defaultValues,org.apache.kafka.common.utils.MockTime.milliseconds,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.TopicPartition.toString,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.record.FileRecords.open,org.apache.kafka.test.TestUtils.tempDirectory,org.apache.kafka.common.config.AbstractConfig.logAll,org.apache.kafka.common.metrics.Metrics.sensor,org.apache.kafka.common.config.AbstractConfig.getBoolean"
