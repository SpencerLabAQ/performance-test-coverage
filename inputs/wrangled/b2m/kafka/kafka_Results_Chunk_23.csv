Project Name,Benchmark Name,Count,Direct Count,Methods,Direct Methods
kafka,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.testAclsIterator,0,0,,
kafka,org.apache.kafka.jmh.acl.AclAuthorizerBenchmark.testAuthorizer,0,0,,
kafka,org.apache.kafka.jmh.cache.LRUCacheBenchmark.testCachePerformance,0,0,,
kafka,org.apache.kafka.jmh.common.FetchRequestBenchmark.testFetchRequestForConsumer,0,0,,
kafka,org.apache.kafka.jmh.common.FetchRequestBenchmark.testFetchRequestForReplica,0,0,,
kafka,org.apache.kafka.jmh.common.FetchRequestBenchmark.testFetchRequestFromStruct,0,0,,
kafka,org.apache.kafka.jmh.common.FetchRequestBenchmark.testSerializeFetchRequestForConsumer,0,0,,
kafka,org.apache.kafka.jmh.common.FetchRequestBenchmark.testSerializeFetchRequestForReplica,0,0,,
kafka,org.apache.kafka.jmh.common.FetchResponseBenchmark.testConstructFetchResponse,0,0,,
kafka,org.apache.kafka.jmh.common.FetchResponseBenchmark.testSerializeFetchResponse,0,0,,
kafka,org.apache.kafka.jmh.common.TopicBenchmark.testValidate,0,0,,
kafka,org.apache.kafka.jmh.consumer.SubscriptionStateBenchmark.testFetchablePartitions,0,0,,
kafka,org.apache.kafka.jmh.consumer.SubscriptionStateBenchmark.testHasAllFetchPositions,0,0,,
kafka,org.apache.kafka.jmh.consumer.SubscriptionStateBenchmark.testPartitionsNeedingValidation,0,0,,
kafka,org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.testFetcher,65,33,"org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.requests.FetchResponse.toMessage,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.common.metrics.Metrics.addMetric,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.config.AbstractConfig.valuesWithPrefixOverride,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.network.PlaintextChannelBuilder.configure,org.apache.kafka.common.metrics.Metrics.registerMetric,org.apache.kafka.common.config.AbstractConfig.postProcessParsedConfig,org.apache.kafka.common.metrics.Sensor.hasExpired,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.network.ListenerName.configPrefix,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,org.apache.kafka.common.config.AbstractConfig.getPassword,org.apache.kafka.common.requests.FetchResponse.error,org.apache.kafka.common.metrics.MetricConfig.tags,org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.metrics.Metrics.metricName,org.apache.kafka.common.utils.LogContext.logPrefix,org.apache.kafka.clients.FetchSessionHandler.handleResponse,org.apache.kafka.common.TopicPartition.topic,org.apache.kafka.common.config.AbstractConfig.instantiateConfigProviders,org.apache.kafka.common.config.ConfigDef.parseType,org.apache.kafka.common.config.ConfigDef.define,org.apache.kafka.common.MetricName.hashCode,org.apache.kafka.common.config.AbstractConfig.getShort,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.config.AbstractConfig.extractPotentialVariables,org.apache.kafka.clients.FetchSessionHandler.findMissing,org.apache.kafka.common.utils.SystemTime.milliseconds,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.network.ChannelBuilders.create,org.apache.kafka.common.metrics.stats.Meter.stats,org.apache.kafka.common.metrics.Metrics.getSensor,org.apache.kafka.common.metrics.Metrics.sensor,org.apache.kafka.common.config.AbstractConfig.getBoolean,org.apache.kafka.common.metrics.Sensor.add,org.apache.kafka.common.config.ConfigDef.undefinedDependentConfigs,org.apache.kafka.common.config.AbstractConfig.getDouble,org.apache.kafka.common.requests.FetchMetadata.nextEpoch,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.errors.ApiException.fillInStackTrace,org.apache.kafka.common.metrics.Sensor.checkForest,org.apache.kafka.common.config.AbstractConfig.getList,org.apache.kafka.clients.FetchSessionHandler.verifyFullFetchResponsePartitions,org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.createLogConfig,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.common.network.ChannelBuilders.channelBuilderConfigs,org.apache.kafka.common.config.AbstractConfig.values,org.apache.kafka.common.requests.FetchMetadata.newIncremental,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.requests.FetchResponse.sessionId,org.apache.kafka.common.requests.FetchResponse.responseData,org.apache.kafka.common.metrics.KafkaMetric.metricName,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.network.ChannelBuilders.clientChannelBuilder,org.apache.kafka.common.metrics.Sensor.metricLock,org.apache.kafka.common.config.AbstractConfig.get,org.apache.kafka.common.config.AbstractConfig.logAll,org.apache.kafka.common.config.ConfigDef.parseValue,org.apache.kafka.common.network.ListenerName.hashCode","org.apache.kafka.common.network.ListenerName.equals,org.apache.kafka.common.requests.FetchResponse.toMessage,org.apache.kafka.common.network.ListenerName.forSecurityProtocol,org.apache.kafka.common.metrics.Metrics.addMetric,org.apache.kafka.common.network.ListenerName.normalised,org.apache.kafka.common.config.AbstractConfig.getString,org.apache.kafka.common.config.AbstractConfig.postProcessParsedConfig,org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables,org.apache.kafka.common.utils.Sanitizer.jmxSanitize,org.apache.kafka.common.config.AbstractConfig.getPassword,org.apache.kafka.common.utils.LogContext.logger,org.apache.kafka.common.metrics.Metrics.metricName,org.apache.kafka.common.utils.LogContext.logPrefix,org.apache.kafka.clients.FetchSessionHandler.handleResponse,org.apache.kafka.common.config.ConfigDef.parse,org.apache.kafka.common.protocol.types.TaggedFields.of,org.apache.kafka.common.TopicPartition.hashCode,org.apache.kafka.common.metrics.Sensor.add,org.apache.kafka.common.config.AbstractConfig.getBoolean,org.apache.kafka.common.metrics.Metrics.sensor,org.apache.kafka.common.config.AbstractConfig.getDouble,org.apache.kafka.common.config.AbstractConfig.originals,org.apache.kafka.common.protocol.types.CompactArrayOf.nullable,org.apache.kafka.common.errors.ApiException.fillInStackTrace,kafka.metrics.FilteringJmxReporter.onMetricAdded,org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.createLogConfig,org.apache.kafka.common.network.ListenerName.hashCode,org.apache.kafka.common.protocol.types.ArrayOf.nullable,org.apache.kafka.common.config.AbstractConfig.getInt,org.apache.kafka.common.config.AbstractConfig.getLong,org.apache.kafka.common.network.ChannelBuilders.clientChannelBuilder,org.apache.kafka.common.config.AbstractConfig.logAll,org.apache.kafka.common.config.AbstractConfig.getShort"
kafka,org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark.incrementalFetchSessionBuild,0,0,,
kafka,org.apache.kafka.jmh.metadata.MetadataRequestBenchmark.testMetadataRequestForAllTopics,0,0,,
kafka,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.updateFollowerFetchStateBench,0,0,,
kafka,org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.updateFollowerFetchStateBenchNoChange,0,0,,
kafka,org.apache.kafka.jmh.producer.ProducerRecordBenchmark.constructorBenchmark,0,0,,
kafka,org.apache.kafka.jmh.record.CompressedRecordBatchValidationBenchmark.measureValidateMessagesAndAssignOffsetsCompressed,0,0,,
kafka,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.measureIteratorForBatchWithSingleMessage,0,0,,
kafka,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.measureSkipIteratorForVariableBatchSize,0,0,,
kafka,org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.measureStreamingIteratorForVariableBatchSize,0,0,,
kafka,org.apache.kafka.jmh.record.UncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed,0,0,,
kafka,org.apache.kafka.jmh.server.CheckpointBench.measureCheckpointHighWatermarks,0,0,,
kafka,org.apache.kafka.jmh.server.CheckpointBench.measureCheckpointLogStartOffsets,0,0,,
