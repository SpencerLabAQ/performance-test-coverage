Project Name,Test Name,Count,Direct Count,Methods,Direct Methods
feign,feign.AsyncFeignTest.beanQueryMapEncoderWithEmptyParams,0,0,,
feign,feign.AsyncFeignTest.beanQueryMapEncoderWithNullValueIgnored,69,6,",feign.SynchronousMethodHandler.invoke,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.AsyncInvocation.isAsyncReturnType,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.assertj.RecordedRequestAssert.getQueryParams,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.querymap.BeanQueryMapEncoder.encode,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.MethodMetadata.urlIndex,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.querymap.BeanQueryMapEncoder.getMetadata,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.beanQueryMapEncoderWithPrivateGetterIgnored,0,0,,
feign,feign.AsyncFeignTest.bodyTypeCorrespondsWithParameterType,0,0,,
feign,feign.AsyncFeignTest.canOverrideErrorDecoder,0,0,,
feign,feign.AsyncFeignTest.configKeyFormatsAsExpected,0,0,,
feign,feign.AsyncFeignTest.configKeyUsesChildType,1,1,",feign.Feign.configKey",",feign.Feign.configKey"
feign,feign.AsyncFeignTest.customExpander,87,9,",feign.template.Expression.matches,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.feignTarget,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.customExpanderListParam,0,0,,
feign,feign.AsyncFeignTest.customExpanderNullParam,0,0,,
feign,feign.AsyncFeignTest.decodeLogicSupportsByteArray,0,0,,
feign,feign.AsyncFeignTest.decodingDoesNotSwallow404ErrorsInDecode404Mode,62,5,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.unwrap,feign.AsyncFeign.clearInvocationContext,feign.Feign.configKey,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.decodingExceptionGetWrappedInDecode404Mode,0,0,,
feign,feign.AsyncFeignTest.doesntRetryAfterResponseIsSent,56,5,",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.unwrap,feign.AsyncFeign.clearInvocationContext,feign.Feign.configKey,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.encodeLogicSupportsByteArray,0,0,,
feign,feign.AsyncFeignTest.encodedQueryParam,0,0,,
feign,feign.AsyncFeignTest.equalsHashCodeAndToStringWork,0,0,,
feign,feign.AsyncFeignTest.headerMap,0,0,,
feign,feign.AsyncFeignTest.headerMapWithHeaderAnnotations,0,0,,
feign,feign.AsyncFeignTest.iterableQueryParams,67,6,",feign.SynchronousMethodHandler.invoke,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.path,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.feignTarget,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.mapAndDecodeExecutesMapFunction,0,0,,
feign,feign.AsyncFeignTest.multipleInterceptor,62,8,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.RecordedRequestAssert.hasHeaders,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.okIfDecodeRootCauseHasNoMessage,0,0,,
feign,feign.AsyncFeignTest.okIfEncodeRootCauseHasNoMessage,0,0,,
feign,feign.AsyncFeignTest.overrideTypeSpecificDecoder,59,5,",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.unwrap,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.postBodyParam,67,9,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.HeaderTemplate.getName,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getName,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.RecordedRequestAssert.hasHeaders,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.postDeflateEncodedBodyParam,71,7,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.assertj.RecordedRequestAssert.hasNoHeaderNamed,feign.Util.toByteArray,feign.AsyncFeign.stageDecode,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.assertj.RecordedRequestAssert.hasDeflatedBody,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.copy,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasNoHeaderNamed,feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.assertj.RecordedRequestAssert.hasDeflatedBody,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.postFormParams,0,0,,
feign,feign.AsyncFeignTest.postGZIPEncodedBodyParam,0,0,,
feign,feign.AsyncFeignTest.postTemplateParamsResolve,0,0,,
feign,feign.AsyncFeignTest.queryMap,75,7,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.MethodInfo.isAsyncReturnType,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.queryMapIterableValuesExpanded,0,0,,
feign,feign.AsyncFeignTest.queryMapPojoWithEmptyParams,63,6,",feign.SynchronousMethodHandler.invoke,feign.querymap.FieldQueryMapEncoder.encode,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.queryMapPojoWithFullParams,0,0,,
feign,feign.AsyncFeignTest.queryMapPojoWithPartialParams,0,0,,
feign,feign.AsyncFeignTest.queryMapValueStartingWithBrace,72,8,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.AsyncInvocation.responseFuture,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable,feign.template.UriUtils.pctEncode",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.queryMapWithQueryParams,72,6,",feign.template.Expression.matches,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.append,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expression.getName,feign.template.Expressions.create,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.RequestTemplate.methodMetadata,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.warnings,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.queryMap_with_child_pojo,0,0,,
feign,feign.AsyncFeignTest.responseCoercesToStringBody,61,5,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.decodeOrDefault,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Util.decodeOrDefault,feign.AsyncFeignTest.unwrap,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.responseMapperIsAppliedBeforeDelegate,0,0,,
feign,feign.AsyncFeignTest.singleInterceptor,0,0,,
feign,feign.AsyncFeignTest.testExtendedCFReturnType,17,2,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.ReflectiveAsyncFeign.getFullMethodName,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.configKey,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.builder,feign.template.Template.encodeLiteral",",feign.AsyncFeign.asyncBuilder,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.testLowerWildReturnType,20,2,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.ReflectiveAsyncFeign.getFullMethodName,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.builder,feign.Types.resolve,feign.template.Template.encodeLiteral",",feign.AsyncFeign.asyncBuilder,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.testNonInterface,7,2,",feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.AsyncFeign.asyncBuilder,feign.AsyncFeign.newInstance",",feign.AsyncFeign.asyncBuilder,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.testUpperWildReturnType,22,2,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.newInstance,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.ReflectiveAsyncFeign.getFullMethodName,feign.template.UriTemplate.create,feign.Feign.configKey,feign.template.Template.parseFragment,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.builder,feign.Types.resolve,feign.template.Template.encodeLiteral",",feign.AsyncFeign.asyncBuilder,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.testrWildReturnType,24,2,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.ReflectiveAsyncFeign.getFullMethodName,feign.MethodMetadata.template,feign.template.UriTemplate.create,feign.Feign.configKey,feign.template.Template.parseFragment,feign.DeclarativeContract.registerClassAnnotation,feign.Util.checkState,feign.DeclarativeContract.registerParameterAnnotation,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.builder,feign.Types.resolve,feign.template.Template.encodeLiteral",",feign.AsyncFeign.asyncBuilder,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.throwsFeignExceptionIncludingBody,64,7,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.FeignException.contentUTF8,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.unwrap,feign.AsyncFeign.clearInvocationContext,feign.Feign.configKey,feign.Util.emptyToNull,feign.FeignException.contentUTF8,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.throwsFeignExceptionWithoutBody,61,5,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.AsyncFeignTest.whenReturnTypeIsResponseNoErrorHandling,63,6,",feign.SynchronousMethodHandler.invoke,feign.Util.isBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.AsyncInvocation.responseFuture,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.copy,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeignTest.unwrap,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.Request.create,feign.AsyncFeign.newInstance,feign.Response.caseInsensitiveCopyOf"
feign,feign.BaseApiTest.resolvesBodyParameter,38,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.Types.indexOf,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.Types.getGenericSupertype,feign.SynchronousMethodHandler.targetRequest,feign.Types.declaringClassOf,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.Request.body,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.Types.equals,feign.Types.resolveTypeVariable,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.indexToExpanderClass,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.BaseApiTest.resolvesParameterizedResult,34,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.Types.indexOf,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.Types.getGenericSupertype,feign.SynchronousMethodHandler.targetRequest,feign.Types.declaringClassOf,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.Types.equals,feign.Types.resolveTypeVariable,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.getVariables",",feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.CapabilityTest.enrichClient,0,0,,
feign,feign.ContractWithRuntimeInjectionTest.baseCaseExpanderNewInstance,44,3,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.Types.getRawType,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.DeclarativeContract.registerMethodAnnotation,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.ContractWithRuntimeInjectionTest.contractWithRuntimeInjection,57,5,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.assertj.MockWebServerAssertions.assertThat,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.Response.builder,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.MethodMetadata.indexToExpander,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.Expressions.create,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.RequestTemplate.resolve,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.DefaultContractTest.autoDiscoverParamNames,28,3,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.isAlreadyProcessed,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasQueries,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.bodyParamIsGeneric,9,1,",feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.toString,feign.Feign.configKey,feign.DeclarativeContract.processAnnotationsOnParameter,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.decodeSlash,feign.Types.resolve,feign.MethodMetadata.warnings",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.bodyParamWithPathParam,17,2,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.MethodMetadata.bodyIndex,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.MethodMetadata.formParams,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.MethodMetadata.bodyIndex,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.bodyParamsAndformParam,17,1,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Util.checkState,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.bodyWithTemplate,19,2,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasBodyTemplate,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.assertj.FeignAssertions.assertThat,feign.DefaultContractTest.parseAndValidateMetadata,feign.assertj.RequestTemplateAssert.hasBodyTemplate"
feign,feign.DefaultContractTest.bodyWithoutParameters,12,2,",feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.toString,feign.Feign.configKey,feign.RequestTemplate.headers,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.body,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.decodeSlash,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.RequestTemplate.uri,feign.Types.resolve,feign.MethodMetadata.warnings",",feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.customExpander,20,1,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.Util.isBlank,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.customMethodWithoutPath,13,2,",feign.assertj.RequestTemplateAssert.hasMethod,feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.UriUtils.encodeChunk,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.processAnnotationOnClass,feign.template.Template.toString,feign.RequestTemplate.uri,feign.template.Template.encodeLiteral,feign.template.UriUtils.encode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.assertj.RequestTemplateAssert.hasMethod,feign.DefaultContractTest.parseAndValidateMetadata,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.DefaultContractTest.defaultMethodsOnInterfaceIgnored,13,1,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.DefaultContractTest.errorMessageOnMixedContracts,22,1,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.MethodMetadata.addWarning,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.Feign.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.DefaultContractTest.formParamAndBodyParams,15,1,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.formParamParseIntoFormParams,17,1,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.hasRequestVariable,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.formParamsDoesNotSetBodyType,17,1,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.BodyTemplate.create,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.formParamsParseIntoIndexToName,12,1,",feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.template.BodyTemplate.create,feign.MethodMetadata.warnings,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.headerMapSubclass,16,1,",feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.encodeLiteral,feign.template.Template.parseFragment,feign.Feign.configKey,feign.DeclarativeContract.processAnnotationsOnParameter,feign.DeclarativeContract.processAnnotationOnClass,feign.template.Template.toString,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.Types.resolve,feign.RequestTemplate.uri,feign.MethodMetadata.warnings,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.headerParamsParseIntoIndexToName,25,3,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Feign.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.headerParamsParseIntoIndexToNameNotAtStart,17,2,",feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.assertj.RequestTemplateAssert.hasHeaders,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.headersContainsWhitespaces,16,3,",feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral",",feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.headersOnMethodAddsContentTypeHeader,10,3,",feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.toString,feign.RequestTemplate.body,feign.Feign.configKey,feign.RequestTemplate.headers,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.RequestTemplate.method,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.decodeSlash,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create",",feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.headersOnTypeAddsContentTypeHeader,20,3,",feign.template.Template.toString,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.template.UriUtils.isAlpha,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.UriUtils.isUnreserved,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral",",feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.httpMethods,18,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.assertj.RequestTemplateAssert.hasMethod,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.method,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.assertj.RequestTemplateAssert.hasMethod,feign.assertj.FeignAssertions.assertThat,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.missingMethod,4,1,",feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.configKey,feign.DeclarativeContract.processAnnotationOnClass",",feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.DefaultContractTest.onlyOneHeaderMapAnnotationPermitted,14,1,",feign.DefaultContractTest.parseAndValidateMetadata,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.encodeLiteral,feign.template.Template.parseFragment,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriTemplate.create,feign.MethodMetadata.configKey,feign.Types.resolve,feign.RequestTemplate.uri,feign.MethodMetadata.warnings,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.onlyOneQueryMapAnnotationPermitted,9,1,",feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.toString,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.processAnnotationsOnParameter,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.decodeSlash,feign.Types.resolve,feign.MethodMetadata.warnings",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.onlySingleLevelInheritanceSupported,2,1,",feign.Util.checkState,feign.DeclarativeContract.parseAndValidateMetadata",",feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.DefaultContractTest.overrideBaseApiUnsupported,24,1,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.Feign.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.DefaultContractTest.paramIsASubstringOfAQuery,26,2,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAlpha,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.RequestTemplate.queries,feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.DefaultContractTest.parameterizedApiUnsupported,2,1,",feign.Util.checkState,feign.DeclarativeContract.parseAndValidateMetadata",",feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.DefaultContractTest.parameterizedBaseApi,32,5,",feign.Types.checkNotPrimitive,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.MethodMetadata.bodyType,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.assertj.FeignAssertions.assertThat,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Types.equal,feign.Types.indexOf,feign.template.UriUtils.encodeInternal,feign.Types.getGenericSupertype,feign.Types.declaringClassOf,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Types.equals,feign.Types.resolveTypeVariable,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DeclarativeContract.parseAndValidateMetadata,feign.assertj.RequestTemplateAssert.hasHeaders,feign.Types.equals,feign.assertj.FeignAssertions.assertThat,feign.MethodMetadata.returnType"
feign,feign.DefaultContractTest.parameterizedHeaderExpandApi,27,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.addWarning,feign.MethodMetadata.isAlreadyProcessed,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.template.UriTemplate.create,feign.Util.checkState,feign.template.UriUtils.isDigit,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DeclarativeContract.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders"
feign,feign.DefaultContractTest.parameterizedHeaderExpandApiBaseClass,0,0,,
feign,feign.DefaultContractTest.parameterizedHeaderNotStartingWithCurlyBraceExpandApi,19,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.Template.parseTemplate,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.Feign.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DeclarativeContract.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders"
feign,feign.DefaultContractTest.pathAndQueryParams,29,3,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.assertj.FeignAssertions.assertThat,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.Util.checkState,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.Expression.getName,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasQueries,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.queryMap,16,1,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.queryMapEncodedDefault,14,1,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.template.UriUtils.isReserved,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.queryMapEncodedFalse,7,1,",feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.toString,feign.Feign.configKey,feign.DeclarativeContract.processAnnotationsOnParameter,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.decodeSlash,feign.Types.resolve,feign.MethodMetadata.warnings",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.queryMapEncodedTrue,13,1,",feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.encodeLiteral,feign.template.Template.parseFragment,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Feign.configKey,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.method,feign.template.UriTemplate.create,feign.template.Template.toString,feign.RequestTemplate.decodeSlash,feign.Types.resolve,feign.RequestTemplate.uri,feign.MethodMetadata.warnings,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.queryMapKeysMustBeStrings,0,0,,
feign,feign.DefaultContractTest.queryMapMapSubclass,12,1,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.queryMapPojoObject,9,1,",feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.parseFragment,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Feign.configKey,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriTemplate.create,feign.template.Template.toString,feign.MethodMetadata.addWarning,feign.RequestTemplate.decodeSlash,feign.RequestTemplate.uri,feign.MethodMetadata.warnings,feign.template.Template.parseTemplate",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.queryMapPojoObjectEncoded,12,1,",feign.template.UriUtils.encodeChunk,feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.encodeLiteral,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.DeclarativeContract.processAnnotationOnClass,feign.template.Template.toString,feign.Feign.configKey,feign.RequestTemplate.decodeSlash,feign.RequestTemplate.uri,feign.MethodMetadata.warnings,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.queryMapPojoObjectNotEncoded,0,0,,
feign,feign.DefaultContractTest.queryParamsInPathExtract,32,5,",feign.assertj.RequestTemplateAssert.hasPath,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.template.UriUtils.isAlpha,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.UriUtils.isUnreserved,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues",",feign.assertj.RequestTemplateAssert.hasPath,feign.DefaultContractTest.parseAndValidateMetadata,feign.assertj.RequestTemplateAssert.hasUrl,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasQueries"
feign,feign.DefaultContractTest.simpleParameterizedBaseApi,27,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAlpha,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Types.indexOf,feign.template.UriUtils.encodeInternal,feign.Types.getGenericSupertype,feign.Types.declaringClassOf,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Feign.configKey,feign.RequestTemplate.method,feign.Types.resolveTypeVariable,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DeclarativeContract.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders"
feign,feign.DefaultContractTest.slashAreEncodedWhenNeeded,22,2,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.template.Expression.getValue,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.RequestTemplate.decodeSlash,feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.staticMethodsOnInterfaceIgnored,15,1,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.MethodMetadata.isAlreadyProcessed,feign.MethodMetadata.returnType,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DeclarativeContract.parseAndValidateMetadata"
feign,feign.DefaultContractTest.tooManyBodies,8,1,",feign.DefaultContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.toString,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.processAnnotationOnClass,feign.DeclarativeContract.processAnnotationsOnParameter,feign.MethodMetadata.bodyType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.decodeSlash,feign.Types.resolve,feign.MethodMetadata.warnings",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultContractTest.withPathAndURIParam,17,1,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultContractTest.parseAndValidateMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.template.Expressions.stripBraces,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DefaultContractTest.parseAndValidateMetadata"
feign,feign.DefaultQueryMapEncoderTest.testEncodesObject_nonVisibleFields,2,1,",feign.querymap.FieldQueryMapEncoder.getMetadata,feign.querymap.FieldQueryMapEncoder.encode",",feign.querymap.FieldQueryMapEncoder.encode"
feign,feign.DefaultQueryMapEncoderTest.testEncodesObject_nonVisibleFields_emptyObject,2,1,",feign.querymap.FieldQueryMapEncoder.encode,feign.querymap.FieldQueryMapEncoder.getMetadata",",feign.querymap.FieldQueryMapEncoder.encode"
feign,feign.DefaultQueryMapEncoderTest.testEncodesObject_visibleFields,2,1,",feign.querymap.FieldQueryMapEncoder.getMetadata,feign.querymap.FieldQueryMapEncoder.encode",",feign.querymap.FieldQueryMapEncoder.encode"
feign,feign.DefaultQueryMapEncoderTest.testEncodesObject_visibleFields_emptyObject,2,1,",feign.querymap.FieldQueryMapEncoder.encode,feign.querymap.FieldQueryMapEncoder.getMetadata",",feign.querymap.FieldQueryMapEncoder.encode"
feign,feign.EmptyTargetTest.mustApplyToAbsoluteUrl,3,1,",feign.RequestTemplate.url,feign.template.Template.toString,feign.RequestTemplate.uri,feign.RequestTemplate.path",",feign.RequestTemplate.url,feign.RequestTemplate.uri"
feign,feign.EmptyTargetTest.toString_withName,0,0,,
feign,feign.EmptyTargetTest.toString_withoutName,0,0,,
feign,feign.EmptyTargetTest.whenNameNotSupplied,0,0,,
feign,feign.FeignBuilderTest.testBasicDefaultMethod,25,3,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultMethodHandler.invoke,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Feign.builder,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.DefaultMethodHandler.invoke"
feign,feign.FeignBuilderTest.testDecode204,47,3,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.FeignException.clientErrorStatus,feign.template.UriUtils.isAbsolute,feign.FeignException.errorStatus,feign.Util.emptyValueOf,feign.Types.getRawType,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.DeclarativeContract.registerMethodAnnotation,feign.Response.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.feignTarget,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.getVariables,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.Response.builder",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.FeignBuilderTest.testDecode404,42,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.FeignException.clientErrorStatus,feign.FeignException.errorStatus,feign.template.UriUtils.isAbsolute,feign.Util.emptyValueOf,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.Response.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.Response.headers,feign.AsyncResponseHandler.handleResponse,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.UriUtils.pctEncode,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.FeignBuilderTest.testDefaultCallingProxiedMethod,24,5,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultMethodHandler.invoke,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.Util.toString,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.assertj.MockWebServerAssertions.assertThat,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.MethodMetadata.indexToExpander,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.Feign.builder,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.Util.toString,feign.DefaultMethodHandler.invoke"
feign,feign.FeignBuilderTest.testDefaults,42,4,",feign.template.Template.toString,feign.RequestTemplate.body,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.template.HeaderTemplate.from,feign.Feign.builder,feign.MethodMetadata.formParams,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.assertj.MockWebServerAssertions.assertThat,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.Util.toString"
feign,feign.FeignBuilderTest.testDoNotCloseAfterDecode,35,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.Response.close,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.MethodMetadata.returnType,feign.RequestTemplate.request,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.Util.ensureClosed,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.Util.toString"
feign,feign.FeignBuilderTest.testDoNotCloseAfterDecodeDecoderFailure,39,3,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.FeignException.errorReading,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.FeignBuilderTest.testHttpNotFoundError,33,3,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.FeignException.clientErrorStatus,feign.FeignException.errorStatus,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.Response.headers,feign.AsyncResponseHandler.handleResponse,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.FeignException.checkRequestNotNull,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.FeignBuilderTest.testNoFollowRedirect,30,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.DefaultMethodHandler.invoke,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.Util.checkState,feign.template.Expressions.stripBraces,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.MethodMetadata.indexToExpander,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.Feign.builder,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DefaultMethodHandler.invoke,feign.Feign.builder,feign.ReflectiveFeign.newInstance"
feign,feign.FeignBuilderTest.testOverrideDecoder,35,3,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.Util.checkState,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.FeignBuilderTest.testOverrideEncoder,43,4,",feign.template.Template.toString,feign.RequestTemplate.body,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.assertj.RecordedRequestAssert.hasBody,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.Response.builder,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.SynchronousMethodHandler.findOptions,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.template.HeaderTemplate.from,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignBuilderTest.testOverrideQueryMapEncoder,48,5,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.assertj.MockWebServerAssertions.assertThat,feign.template.UriTemplate.create,feign.assertj.RecordedRequestAssert.getQueryParams,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignBuilderTest.testProvideInvocationHandlerFactory,42,7,",feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.body,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.urlIndex,feign.Util.copy,feign.assertj.RecordedRequestAssert.hasBody,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.methodMetadata,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.Response.toBuilder,feign.RequestTemplate.path,feign.MethodMetadata.queryMapIndex,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.template.UriUtils.encodeInternal,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.SynchronousMethodHandler.findOptions,feign.MethodMetadata.indexToExpander,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.assertj.MockWebServerAssertions.assertThat,feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.Util.toString"
feign,feign.FeignBuilderTest.testProvideRequestInterceptors,46,5,",feign.template.Template.toString,feign.RequestTemplate.body,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.template.Literal.create,feign.template.HeaderTemplate.from,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasHeaders,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.Util.toString"
feign,feign.FeignBuilderTest.testSlashIsEncodedInPathParams,37,4,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.methodMetadata,feign.Types.getRawType,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.pctEncode,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignBuilderTest.testUrlPathConcatNoInitialSlashOnPath,45,4,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.urlIndex,feign.Util.copy,feign.RequestTemplate.queries,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.addWarning,feign.Types.getRawType,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.template.UriUtils.isAlpha,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.RequestTemplate.feignTarget,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.MethodMetadata.indexToExpander,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignBuilderTest.testUrlPathConcatNoInitialSlashOnPathNoTrailingSlashOnUrl,0,0,,
feign,feign.FeignBuilderTest.testUrlPathConcatNoPathOnRequestLine,42,4,",feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.urlIndex,feign.Util.copy,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.Response.body,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.assertj.MockWebServerAssertions.assertThat,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.headers,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignBuilderTest.testUrlPathConcatUrlTrailingSlash,41,5,",feign.template.Template.toString,feign.RequestTemplate.body,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.isEncoded,feign.Util.copy,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.RequestTemplate.methodMetadata,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.queryMapIndex,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Feign.configKey,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignExceptionTest.canCreateWithRequestAndResponse,2,2,",feign.FeignException.errorReading,feign.FeignException.responseBody",",feign.FeignException.errorReading,feign.FeignException.responseBody"
feign,feign.FeignExceptionTest.canCreateWithRequestOnly,3,3,",feign.FeignException.errorExecuting,feign.FeignException.content,feign.Request.create,feign.FeignException.responseBody",",feign.FeignException.errorExecuting,feign.FeignException.content,feign.Request.create,feign.FeignException.responseBody"
feign,feign.FeignExceptionTest.nullRequestShouldThrowNPE,2,1,",feign.Util.checkNotNull,feign.FeignException.checkRequestNotNull",",feign.FeignException.checkRequestNotNull"
feign,feign.FeignExceptionTest.nullRequestShouldThrowNPEwBytes,0,0,,
feign,feign.FeignExceptionTest.nullRequestShouldThrowNPEwThrowable,2,1,",feign.Util.checkNotNull,feign.FeignException.checkRequestNotNull",",feign.FeignException.checkRequestNotNull"
feign,feign.FeignExceptionTest.nullRequestShouldThrowNPEwThrowableAndBytes,0,0,,
feign,feign.FeignTest.arrayQueryMapParams,48,5,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.assertj.MockWebServerAssertions.assertThat,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.DeclarativeContract.registerParameterAnnotation,feign.Util.ensureClosed,feign.RequestTemplate.method,feign.RequestTemplate.header,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.assertj.RecordedRequestAssert.hasPath,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.template.Literal.create,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignTest.beanQueryMapEncoderWithEmptyParams,69,8,",feign.SynchronousMethodHandler.invoke,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.assertj.RecordedRequestAssert.getQueryParams,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.querymap.BeanQueryMapEncoder.encode,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.querymap.BeanQueryMapEncoder.getMetadata,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.beanQueryMapEncoderWithNullValueIgnored,49,3,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.method,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.querymap.BeanQueryMapEncoder.encode,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.querymap.BeanQueryMapEncoder.getMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.HeaderTemplate.create,feign.RequestTemplate.queryLine,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasQueryParams,feign.DeclarativeContract.registerClassAnnotation,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignTest.beanQueryMapEncoderWithPrivateGetterIgnored,81,9,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.PropertyPojo.setName,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.assertj.RecordedRequestAssert.getQueryParams,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.querymap.BeanQueryMapEncoder.encode,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.querymap.BeanQueryMapEncoder.getMetadata,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.Util.emptyToNull,feign.PropertyPojo.setName,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.bodyTypeCorrespondsWithParameterType,70,7,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.Request.httpMethod,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.canOverrideErrorDecoder,71,7,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.RequestTemplate.methodMetadata,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.unwrap,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.configKeyFormatsAsExpected,2,1,",feign.Types.resolve,feign.Feign.configKey",",feign.Feign.configKey"
feign,feign.FeignTest.configKeyUsesChildType,1,1,",feign.Feign.configKey",",feign.Feign.configKey"
feign,feign.FeignTest.customExpander,62,3,",feign.template.Expression.matches,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.template.QueryTemplate.queryString,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.query,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.feignTarget,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.FeignTest.customExpanderListParam,0,0,,
feign,feign.FeignTest.customExpanderNullParam,0,0,,
feign,feign.FeignTest.decodeLogicSupportsByteArray,42,7,",feign.template.Template.toString,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.Util.copy,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.AsyncFeignTest.unwrap,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.AsyncResponseHandler.isVoidType,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.Response.builder",",feign.AsyncFeignTest.unwrap,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.decodingDoesNotSwallow404ErrorsInDecode404Mode,38,2,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.methodMetadata,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.FeignTest.decodingExceptionGetWrappedInDecode404Mode,70,7,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.FeignException.checkRequestNotNull,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.AsyncResponseHandler.decode,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.unwrap,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.setInvocationContext,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.doesntRetryAfterResponseIsSent,54,3,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.template.Expression.getValue,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.MethodMetadata.returnType,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.template.BodyTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.RequestTemplate.method,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.FeignException.errorReading,feign.FeignException.checkRequestNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.template.Literal.create,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.DeclarativeContract.registerMethodAnnotation,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.FeignTest.encodeLogicSupportsByteArray,49,9,",feign.template.Template.toString,feign.RequestTemplate.body,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.RequestTemplate.queries,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.Response.caseInsensitiveCopyOf,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.path,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.assertj.MockWebServerAssertions.assertThat,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.method,feign.template.UriTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.Util.checkState,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.Util.checkArgument,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.processAnnotationsOnParameter,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.target,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.Response.builder",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.encodedQueryParam,73,8,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Response.status,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Response.body,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable,feign.template.UriUtils.pctEncode",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.Util.emptyToNull,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.setInvocationContext,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.ensureRetryerClonesItself,55,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Response.toBuilder,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.DeclarativeContract.registerMethodAnnotation,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.template.BodyTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.Response.builder,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.AsyncResponseHandler.isVoidType,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.FeignTest.equalsHashCodeAndToStringWork,61,5,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.MethodMetadata.bodyIndex,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.bodyType,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.MethodMetadata.queryMapEncoded,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.template.Expression.getValue,feign.template.UriUtils.isAlpha,feign.MethodMetadata.isAlreadyProcessed,feign.MethodMetadata.returnType,feign.Util.isBlank,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.RequestTemplate.method,feign.template.UriUtils.isDigit,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.MethodMetadata.indexToExpander,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.MethodMetadata.formParams,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.AsyncFeign.newInstance,feign.Util.checkNotNull"
feign,feign.FeignTest.headerMap,83,10,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.Util.isBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expression.getName,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.AsyncInvocation.context,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.collectionFormat,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.AsyncResponseHandler.isVoidType,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.setResponseFuture,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.template.HeaderTemplate.append,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasHeaders,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.setInvocationContext,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.FeignTest.headerMapWithHeaderAnnotations,0,0,,
feign,feign.FeignTest.iterableQueryParams,49,4,",feign.assertj.MockWebServerAssertions.assertThat,feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.RequestTemplate.splitQueryParameter,feign.template.Expression.getValue,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.RequestTemplate.url,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.expand,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.toString,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.template.UriTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.template.Template.expand,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.MockWebServerAssertions.assertThat,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.FeignTest.mapAndDecodeExecutesMapFunction,74,8,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.codec.StringDecoder.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.AsyncFeignTest.upperCaseResponseMapper,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.Util.toString,feign.AsyncResponseHandler.decode,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.FeignTest.upperCaseResponseMapper,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.Response.body,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.FeignTest.upperCaseResponseMapper,feign.AsyncFeignTest.unwrap,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.Util.checkNotNull,feign.AsyncFeignTest.upperCaseResponseMapper"
feign,feign.FeignTest.multipleInterceptor,46,4,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.Response.body,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.assertj.RecordedRequestAssert.hasHeaders,feign.template.Expressions.stripBraces,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.template.BodyTemplate.create,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.MethodMetadata.indexToExpander,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.template.Literal.create,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasHeaders,feign.assertj.MockWebServerAssertions.assertThat,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignTest.okIfDecodeRootCauseHasNoMessage,89,8,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.MethodInfo.configKey,feign.AsyncInvocation.underlyingType,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.FeignException.checkRequestNotNull,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.AsyncInvocation.context,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.RequestTemplate.collectionFormat,feign.AsyncResponseHandler.decode,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.MethodInfo.isAsyncReturnType,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.setResponseFuture,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.Request.httpMethod,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.AsyncFeign.elapsedTime,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.AsyncInvocation.configKey,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.unwrap,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.okIfEncodeRootCauseHasNoMessage,53,7,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.clearInvocationContext,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.RequestTemplate.methodMetadata,feign.ReflectiveFeign.newInstance,feign.template.UriUtils.isAlpha,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.template.BodyTemplate.create,feign.template.Expressions.stripBraces,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.indexToExpander,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.RequestTemplate.hasRequestVariable,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.DeclarativeContract.registerMethodAnnotation,feign.Util.checkNotNull"
feign,feign.FeignTest.overrideTypeSpecificDecoder,47,4,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.AsyncResponseHandler.decode,feign.Util.checkState,feign.Response.caseInsensitiveCopyOf,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.template.BodyTemplate.create,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.RequestTemplate.headers,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.Expressions.stripBraces,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.RequestTemplate.target,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.FeignTest.postBodyParam,51,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.Response.body,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.assertj.RecordedRequestAssert.hasHeaders,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.BodyTemplate.create,feign.MethodMetadata.template,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.template.UriUtils.isDigit,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.template.Literal.create,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.assertj.RecordedRequestAssert.hasHeaders,feign.ReflectiveFeign.newInstance"
feign,feign.FeignTest.postDeflateEncodedBodyParam,48,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.isEncoded,feign.Util.copy,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.assertj.RecordedRequestAssert.hasNoHeaderNamed,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.BodyTemplate.create,feign.template.Expressions.stripBraces,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.assertj.RecordedRequestAssert.hasDeflatedBody,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasNoHeaderNamed,feign.ReflectiveFeign.newInstance,feign.assertj.RecordedRequestAssert.hasDeflatedBody,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignTest.postFormParams,81,9,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.collectionFormat,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.MethodMetadata.urlIndex,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.postGZIPEncodedBodyParam,71,9,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.path,feign.template.HeaderTemplate.expand,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expression.getName,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.getValues,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.assertj.RecordedRequestAssert.hasNoHeaderNamed,feign.Util.toByteArray,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.setResponseFuture,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.copy,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RecordedRequestAssert.hasGzippedBody,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasNoHeaderNamed,feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.assertj.RecordedRequestAssert.hasGzippedBody,feign.AsyncFeign.newInstance,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.FeignTest.postTemplateParamsResolve,81,8,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.collectionFormat,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.BodyTemplate.expand,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.feignTarget,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.Util.emptyToNull,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.setInvocationContext,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.FeignTest.queryMap,57,3,",feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.template.Expressions.create,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.FeignTest.queryMapIterableValuesExpanded,0,0,,
feign,feign.FeignTest.queryMapPojoWithEmptyParams,39,3,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.querymap.FieldQueryMapEncoder.encode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.assertj.MockWebServerAssertions.assertThat,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Feign.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.RequestTemplate.resolve,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.assertj.MockWebServerAssertions.assertThat,feign.ReflectiveFeign.newInstance"
feign,feign.FeignTest.queryMapPojoWithFullParams,72,7,",feign.SynchronousMethodHandler.invoke,feign.querymap.FieldQueryMapEncoder.encode,feign.template.Literal.getValue,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.assertj.RecordedRequestAssert.getQueryParams,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.MethodMetadata.indexToExpander,feign.template.Expressions.create,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.queryMapPojoWithPartialParams,75,8,",feign.Request.url,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.querymap.FieldQueryMapEncoder.encode,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.QueryTemplate.queryString,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.MethodInfo.isAsyncReturnType,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.FeignTest.queryMapValueStartingWithBrace,54,3,",feign.assertj.MockWebServerAssertions.assertThat,feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.queryMapEncoded,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.MethodMetadata.returnType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.BodyTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.template.UriUtils.isDigit,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.template.UriUtils.pctEncode,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.assertj.MockWebServerAssertions.assertThat,feign.ReflectiveFeign.newInstance"
feign,feign.FeignTest.queryMapWithQueryParams,56,5,",feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.Template.resolveExpression,feign.MethodMetadata.queryMapEncoded,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.template.Expression.getValue,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.MethodMetadata.returnType,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.QueryTemplate.append,feign.template.Expressions.stripBraces,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.assertj.RecordedRequestAssert.hasPath,feign.MethodMetadata.template,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.RequestTemplate.resolve,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.RequestTemplate.hasRequestVariable,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Util.emptyToNull,feign.DeclarativeContract.registerClassAnnotation,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignTest.queryMap_with_child_pojo,77,9,",feign.SynchronousMethodHandler.invoke,feign.querymap.FieldQueryMapEncoder.encode,feign.ParentPojo.setParentProtectedProperty,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.assertj.RecordedRequestAssert.getQueryParams,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.ChildPojo.setChildPrivateProperty,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.AsyncResponseHandler.isVoidType,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.MethodMetadata.urlIndex,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.ChildPojo.setChildPrivateProperty,feign.AsyncFeignTest.checkCFCompletedSoon,feign.ParentPojo.setParentProtectedProperty,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.registerParameterAnnotation,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.responseCoercesToStringBody,49,4,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.MethodMetadata.bodyType,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.decodeOrDefault,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.Util.checkState,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.template.UriUtils.isDigit,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.Response.builder,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.RequestTemplate.resolve,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Util.decodeOrDefault,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.FeignTest.responseMapperIsAppliedBeforeDelegate,5,5,",feign.FeignTest.responseWithText,feign.Util.ensureClosed,feign.Request.create,feign.Util.toString,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.codec.StringDecoder.decode,feign.AsyncFeignTest.upperCaseResponseMapper,feign.AsyncFeignTest.responseWithText,feign.Response.builder",",feign.FeignTest.responseWithText,feign.Util.toString,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.codec.StringDecoder.decode,feign.AsyncFeignTest.upperCaseResponseMapper,feign.AsyncFeignTest.responseWithText"
feign,feign.FeignTest.retriesLostConnectionBeforeRead,44,2,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.method,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.resolve,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.FeignTest.retryableExceptionInDecoder,50,3,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.RetryableException.retryAfter,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.Util.checkState,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.Response.builder,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.FeignException.checkRequestNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.DeclarativeContract.registerClassAnnotation,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.Util.checkNotNull"
feign,feign.FeignTest.singleInterceptor,71,8,",feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.codec.StringDecoder.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.Util.toString,feign.AsyncResponseHandler.decode,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.AsyncFeignTest.unwrap,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncFeignTest.checkCFCompletedSoon,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeignTest.checkCFCompletedSoon,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasHeaders,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncFeign.setInvocationContext,feign.ReflectiveFeign.newInstance,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignTest.throwsFeignExceptionIncludingBody,45,3,",feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.template.BodyTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.DeclarativeContract.registerParameterAnnotation,feign.Util.ensureClosed,feign.Util.checkState,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.FeignException.errorReading,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.FeignTest.throwsFeignExceptionWithoutBody,50,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.template.UriTemplate.create,feign.template.BodyTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.template.Expressions.stripBraces,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.Expression.getName,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.FeignException.errorReading,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getName,feign.RequestTemplate.hasRequestVariable,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.FeignTest.throwsOriginalExceptionAfterFailedRetries,45,3,",feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Request.body,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.header,feign.template.Expressions.stripBraces,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.FeignTest.throwsRetryableExceptionIfNoUnderlyingCause,44,3,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.Response.builder,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.Expression.getName,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.FeignException.checkRequestNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.FeignTest.whenReturnTypeIsResponseNoErrorHandling,49,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.addWarning,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.BodyTemplate.create,feign.template.Expressions.stripBraces,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.template.UriUtils.isDigit,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.method,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.Request.create,feign.SynchronousMethodHandler.invoke,feign.Response.caseInsensitiveCopyOf"
feign,feign.FeignUnderAsyncTest.beanQueryMapEncoderWithEmptyParams,57,4,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.assertj.RecordedRequestAssert.getQueryParams,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.querymap.BeanQueryMapEncoder.encode,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.querymap.BeanQueryMapEncoder.getMetadata,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Util.emptyToNull,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.beanQueryMapEncoderWithNullValueIgnored,62,6,",feign.SynchronousMethodHandler.invoke,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.AsyncInvocation.isAsyncReturnType,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.assertj.RecordedRequestAssert.getQueryParams,feign.template.QueryTemplate.queryString,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.header,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.querymap.BeanQueryMapEncoder.encode,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.querymap.BeanQueryMapEncoder.getMetadata,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.beanQueryMapEncoderWithPrivateGetterIgnored,67,5,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.assertj.RecordedRequestAssert.getQueryParams,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.header,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.querymap.BeanQueryMapEncoder.encode,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.querymap.BeanQueryMapEncoder.getMetadata,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.configKey,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.bodyTypeCorrespondsWithParameterType,62,4,",feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.setResponseFuture,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.canOverrideErrorDecoder,57,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.methodMetadata,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.Template.expand,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.path,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.Expression.getName,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.configKey,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.configKeyFormatsAsExpected,0,0,,
feign,feign.FeignUnderAsyncTest.configKeyUsesChildType,1,1,",feign.Feign.configKey",",feign.Feign.configKey"
feign,feign.FeignUnderAsyncTest.customExpander,72,6,",feign.SynchronousMethodHandler.invoke,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.header,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.MethodInfo.isAsyncReturnType,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.Util.checkNotNull"
feign,feign.FeignUnderAsyncTest.customExpanderListParam,0,0,,
feign,feign.FeignUnderAsyncTest.customExpanderNullParam,62,6,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.MethodMetadata.indexToExpanderClass,feign.RequestTemplate.header,feign.template.QueryTemplate.queryString,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.setResponseFuture,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.Util.checkNotNull"
feign,feign.FeignUnderAsyncTest.decodeLogicSupportsByteArray,35,4,",feign.template.Template.toString,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncInvocation.isAsyncReturnType,feign.AsyncFeign.stageDecode,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Util.checkState,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.template.Template.expand",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.decodingDoesNotSwallow404ErrorsInDecode404Mode,55,3,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.RequestTemplate.splitQueryParameter,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.addWarning,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.RequestTemplate.path,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.MethodMetadata.configKey,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.template.Literal.create,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.decodingExceptionGetWrappedInDecode404Mode,57,4,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.RequestTemplate.methodMetadata,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.splitQueryParameter,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.MethodMetadata.returnType,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.path,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.RequestTemplate.method,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.Literal.create,feign.RequestTemplate.target,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.doesntRetryAfterResponseIsSent,54,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.AsyncFeign.clearInvocationContext,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.AsyncFeign.newInstance,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncInvocation.isAsyncReturnType,feign.AsyncFeign.stageDecode,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.path,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.template.Literal.create,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.RequestTemplate.hasRequestVariable,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.encodeLogicSupportsByteArray,37,5,",feign.template.Template.toString,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.MethodMetadata.indexToName,feign.AsyncFeign.stageDecode,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.path,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral",",feign.assertj.MockWebServerAssertions.assertThat,feign.AsyncFeign.asyncBuilder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.encodedQueryParam,65,4,",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.header,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable,feign.template.UriUtils.pctEncode",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.equalsHashCodeAndToStringWork,54,2,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.MethodMetadata.targetType,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.indexToName,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.template.Expression.getValue,feign.MethodMetadata.addWarning,feign.Types.getRawType,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.methodMetadata,feign.Util.isBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.collectionFormat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.headers,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.Literal.create,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.MethodMetadata.formParams,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.AsyncFeign.asyncBuilder,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.headerMap,59,6,",feign.SynchronousMethodHandler.invoke,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasHeaders,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.headerMapWithHeaderAnnotations,65,7,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.MethodInfo.isAsyncReturnType,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.template.HeaderTemplate.append,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasHeaders,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.iterableQueryParams,64,4,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.mapAndDecodeExecutesMapFunction,59,4,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.Template.expand,feign.Response.caseInsensitiveCopyOf,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.path,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.BodyTemplate.create,feign.RequestTemplate.method,feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.FeignUnderAsyncTest.upperCaseResponseMapper,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.FeignUnderAsyncTest.upperCaseResponseMapper,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.multipleInterceptor,62,5,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasHeaders,feign.assertj.MockWebServerAssertions.assertThat,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.okIfDecodeRootCauseHasNoMessage,63,4,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.okIfEncodeRootCauseHasNoMessage,48,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.urlIndex,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.template.Expression.getValue,feign.MethodMetadata.addWarning,feign.Types.getRawType,feign.ReflectiveFeign.newInstance,feign.template.UriUtils.isAlpha,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.Util.checkState,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.configKey,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.overrideTypeSpecificDecoder,54,4,",feign.template.QueryTemplate.getName,feign.AsyncInvocation.responseFuture,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.path,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.AsyncFeign.setInvocationContext,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.configKey,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.postBodyParam,57,6,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.isEncoded,feign.AsyncFeign.stageExecution,feign.AsyncFeign.clearInvocationContext,feign.assertj.RecordedRequestAssert.hasHeaders,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.Util.isDefault,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.RequestTemplate.path,feign.template.QueryTemplate.getVariables,feign.assertj.MockWebServerAssertions.assertThat,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.BodyTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.url,feign.DeclarativeContract.registerClassAnnotation,feign.Util.checkState,feign.RequestTemplate.method,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasHeaders,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.asyncBuilder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.postDeflateEncodedBodyParam,64,7,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.assertj.RecordedRequestAssert.hasNoHeaderNamed,feign.Util.toByteArray,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.assertj.RecordedRequestAssert.hasDeflatedBody,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.setResponseFuture,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.copy,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasNoHeaderNamed,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.assertj.RecordedRequestAssert.hasDeflatedBody,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.postFormParams,63,5,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.postGZIPEncodedBodyParam,61,8,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expression.getName,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.assertj.RecordedRequestAssert.hasNoHeaderNamed,feign.Util.toByteArray,feign.AsyncFeign.stageDecode,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.copy,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RecordedRequestAssert.hasGzippedBody,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasNoHeaderNamed,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.assertj.RecordedRequestAssert.hasGzippedBody,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.postTemplateParamsResolve,63,6,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.template.BodyTemplate.expand,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getName,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.queryMap,85,8,",feign.SynchronousMethodHandler.invoke,feign.querymap.FieldQueryMapEncoder.encode,feign.template.Literal.getValue,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.assertj.RecordedRequestAssert.getQueryParams,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.AsyncInvocation.context,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.MethodMetadata.urlIndex,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable,feign.template.UriUtils.pctEncode",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.queryMapIterableValuesExpanded,57,6,",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.template.QueryTemplate.queryString,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.Util.checkNotNull"
feign,feign.FeignUnderAsyncTest.queryMapPojoWithEmptyParams,0,0,,
feign,feign.FeignUnderAsyncTest.queryMapPojoWithFullParams,61,4,",feign.SynchronousMethodHandler.invoke,feign.querymap.FieldQueryMapEncoder.encode,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.assertj.RecordedRequestAssert.getQueryParams,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.template.Expressions.create,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.collectionFormat,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.configKey,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.queryMapPojoWithPartialParams,64,5,",feign.SynchronousMethodHandler.invoke,feign.querymap.FieldQueryMapEncoder.encode,feign.AsyncInvocation.isAsyncReturnType,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.QueryTemplate.queryString,feign.template.UriUtils.isGenericDelimiter,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.template.Expression.getName,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.queryMapValueStartingWithBrace,0,0,,
feign,feign.FeignUnderAsyncTest.queryMapWithQueryParams,65,5,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.append,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.header,feign.template.Expression.getName,feign.template.Expressions.create,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.setResponseFuture,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.queryMap_with_child_pojo,0,0,,
feign,feign.FeignUnderAsyncTest.responseCoercesToStringBody,52,5,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.decodeOrDefault,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.setResponseFuture,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Util.decodeOrDefault,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.responseMapperIsAppliedBeforeDelegate,5,4,",feign.FeignUnderAsyncTest.responseWithText,feign.Util.ensureClosed,feign.Request.create,feign.Util.toString,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.codec.StringDecoder.decode",",feign.FeignUnderAsyncTest.responseWithText,feign.Util.toString,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.codec.StringDecoder.decode"
feign,feign.FeignUnderAsyncTest.retriesLostConnectionBeforeRead,61,6,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.AsyncFeign.clearInvocationContext,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.path,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.Response.builder,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.singleInterceptor,57,5,",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.AsyncInvocation.context,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasHeaders,feign.Feign.configKey,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.throwsFeignExceptionIncludingBody,61,4,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.FeignException.contentUTF8,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.AsyncInvocation.context,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.FeignException.contentUTF8,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.throwsFeignExceptionWithoutBody,55,4,",feign.SynchronousMethodHandler.invoke,feign.AsyncInvocation.isAsyncReturnType,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.Literal.create,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.getValue,feign.RequestTemplate.methodMetadata,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.FeignUnderAsyncTest.whenReturnTypeIsResponseNoErrorHandling,63,6,",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.startNanos,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.copy,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.Response.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncInvocation.configKey,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.Response.headers,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.Request.create,feign.AsyncFeign.newInstance,feign.Response.caseInsensitiveCopyOf"
feign,feign.LoggerTest$FormatCharacterTest.formatCharacterEmits,62,3,",feign.Logger.logRequest,feign.template.Expression.matches,feign.template.Template.toString,feign.Logger.logIOException,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.getRequestVariables,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queries,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.Request.httpMethod,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.SynchronousMethodHandler.elapsedTime,feign.DeclarativeContract.registerMethodAnnotation,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.template.UriTemplate.create,feign.Logger.methodTag,feign.template.Expressions.stripBraces,feign.RequestTemplate.method,feign.DeclarativeContract.registerParameterAnnotation,feign.Request.body,feign.FeignException.errorExecuting,feign.RequestTemplate.header,feign.Util.checkState,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.BodyTemplate.expand,feign.FeignException.checkRequestNotNull,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.valuesOrEmpty,feign.Request.length,feign.RequestTemplate.target,feign.template.Literal.create,feign.template.HeaderTemplate.from,feign.Feign.builder,feign.template.HeaderTemplate.getValues,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.MethodMetadata.headerMapIndex,feign.template.Template.getVariables",",feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.LoggerTest$LogLevelEmitsTest.levelEmits,71,3,",feign.Logger.logRequest,feign.template.Template.toString,feign.RequestTemplate.body,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.getRequestVariables,feign.Util.copy,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.Response.body,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.decodeOrDefault,feign.Util.toByteArray,feign.RequestTemplate.headers,feign.template.UriUtils.isAbsolute,feign.Logger.logAndRebufferResponse,feign.ReflectiveFeign.newInstance,feign.Request.body,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.Request.httpMethod,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.Response.toBuilder,feign.RequestTemplate.path,feign.Response.caseInsensitiveCopyOf,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Logger.methodTag,feign.Util.checkState,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.DeclarativeContract.registerClassAnnotation,feign.Util.ensureClosed,feign.template.BodyTemplate.create,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.BodyTemplate.expand,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.valuesOrEmpty,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.getVariables",",feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.LoggerTest$ReadTimeoutEmitsTest.levelEmitsOnReadTimeout,57,3,",feign.Logger.logRequest,feign.template.Expression.matches,feign.RequestTemplate.getRequestVariables,feign.Logger.logIOException,feign.template.Template.toString,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.RequestTemplate.queries,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.Request.httpMethod,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.SynchronousMethodHandler.elapsedTime,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.template.BodyTemplate.create,feign.Logger.methodTag,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.configKey,feign.FeignException.errorExecuting,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.MethodMetadata.indexToExpander,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.BodyTemplate.expand,feign.FeignException.checkRequestNotNull,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.Util.valuesOrEmpty,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.template.Literal.create,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.LoggerTest$ReasonPhraseOptional.reasonPhraseOptional,48,4,",feign.Logger.logRequest,feign.template.Template.toString,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Logger.logAndRebufferResponse,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Util.toString,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.BodyTemplate.expand,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.template.HeaderTemplate.getValues,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.Template.expand",",feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.LoggerTest$RetryEmitsTest.retryEmits,56,3,",feign.Logger.logRequest,feign.template.Expression.matches,feign.Logger.logIOException,feign.RequestTemplate.body,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.Template.resolveExpression,feign.template.UriTemplate.create,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.SynchronousMethodHandler.elapsedTime,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.Logger.methodTag,feign.RequestTemplate.method,feign.DeclarativeContract.registerClassAnnotation,feign.template.BodyTemplate.create,feign.Logger.logRetry,feign.RequestTemplate.headers,feign.FeignException.errorExecuting,feign.RequestTemplate.header,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.template.BodyTemplate.expand,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.bodyTemplate,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.LoggerTest$UnknownHostEmitsTest.unknownHostEmits,57,3,",feign.Logger.logRequest,feign.Logger.logIOException,feign.template.Template.toString,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.template.UriUtils.isEncoded,feign.RequestTemplate.getRequestVariables,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.SynchronousMethodHandler.elapsedTime,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.Logger.methodTag,feign.RequestTemplate.method,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.FeignException.errorExecuting,feign.RequestTemplate.header,feign.RequestTemplate.feignTarget,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.Expressions.create,feign.template.BodyTemplate.expand,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.valuesOrEmpty,feign.RequestTemplate.target,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.MethodMetadataPresenceTest.client,41,5,",feign.template.Template.toString,feign.RequestTemplate.body,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Util.toString,feign.Response.caseInsensitiveCopyOf,feign.Response.toBuilder,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.Request.body,feign.RequestTemplate.headers,feign.assertj.MockWebServerAssertions.assertThat,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.feignTarget,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.Util.toString"
feign,feign.MethodMetadataPresenceTest.decoder,45,6,",feign.template.Template.toString,feign.RequestTemplate.body,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.MethodMetadata.bodyType,feign.assertj.RecordedRequestAssert.hasBody,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.Request.body,feign.AsyncResponseHandler.handleResponse,feign.Util.checkState,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DefaultMethodHandler.bindTo,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.Util.toString,feign.Util.checkNotNull"
feign,feign.MethodMetadataPresenceTest.encoder,40,5,",feign.template.Template.toString,feign.RequestTemplate.body,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.assertj.RecordedRequestAssert.hasBody,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.Util.toString"
feign,feign.MultipleLoggerTest.testAppendSeveralFilesToOneJavaLogger,1,1,",feign.MultipleLoggerTest.getInnerLogger",",feign.MultipleLoggerTest.getInnerLogger"
feign,feign.MultipleLoggerTest.testJavaLoggerInstantationWithClazz,1,1,",feign.MultipleLoggerTest.getInnerLogger",",feign.MultipleLoggerTest.getInnerLogger"
feign,feign.MultipleLoggerTest.testJavaLoggerInstantationWithLoggerName,1,1,",feign.MultipleLoggerTest.getInnerLogger",",feign.MultipleLoggerTest.getInnerLogger"
feign,feign.OptionsTest.normalResponseTest,41,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.Response.toBuilder,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.OptionsTest.socketTimeoutTest,39,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.DeclarativeContract.registerMethodAnnotation,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Request.body,feign.template.UriTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.FeignException.errorReading,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.RequestTemplateTest.allQueriesUnresolvable,22,6,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Literal.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.query,feign.assertj.RequestTemplateAssert.hasUrl,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.assertj.RequestTemplateAssert.hasQueries,feign.RequestTemplate.uri,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.canInsertAbsoluteHref,12,3,",feign.template.UriUtils.encodeChunk,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.target,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.Template.encodeLiteral,feign.template.UriUtils.encode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.assertj.RequestTemplateAssert.hasUrl,feign.RequestTemplate.target,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri"
feign,feign.RequestTemplateTest.encodeSlashTest,18,4,",feign.template.Template.toString,feign.RequestTemplate.queries,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.getValue,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.RequestTemplate.decodeSlash,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.assertj.RequestTemplateAssert.hasUrl,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.RequestTemplate.decodeSlash,feign.RequestTemplate.uri,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.encodedQuery,19,4,",feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.QueryTemplate.append,feign.template.QueryTemplate.queryString,feign.template.UriUtils.isGenericDelimiter,feign.template.UriUtils.encodeChunk,feign.template.UriUtils.pctEncode,feign.template.UriUtils.isUnreserved,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.query,feign.RequestTemplate.queries,feign.assertj.RequestTemplateAssert.hasQueries,feign.RequestTemplate.queryLine"
feign,feign.RequestTemplateTest.encodedQueryClearedOnNull,9,3,",feign.RequestTemplate.query,feign.RequestTemplate.appendQuery,feign.template.Template.parseFragment,feign.RequestTemplate.queries,feign.assertj.FeignAssertions.assertThat,feign.template.QueryTemplate.create,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.Template.encodeLiteral,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.query,feign.assertj.RequestTemplateAssert.hasQueries"
feign,feign.RequestTemplateTest.encodedQueryWithUnsafeCharactersMixedWithUnencoded,0,0,,
feign,feign.RequestTemplateTest.encodedReservedEncodeSlash,25,4,",feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.from,feign.RequestTemplate.uri,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriUtils.pctEncode,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.url,feign.RequestTemplate.resolve,feign.RequestTemplate.decodeSlash,feign.RequestTemplate.uri"
feign,feign.RequestTemplateTest.encodedReservedPreserveSlash,25,3,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.RequestTemplate.from,feign.RequestTemplate.uri,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.QueryTemplate.queryString,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriUtils.pctEncode,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.resolve,feign.RequestTemplate.url,feign.RequestTemplate.uri"
feign,feign.RequestTemplateTest.expandMissingParamProceeds,19,2,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplateTest.expand,feign.RequestTemplate.from,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand",",feign.RequestTemplateTest.expand,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.expandMultipleParams,18,2,",feign.template.Expression.matches,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplateTest.expand,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.from,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Literal.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.UriUtils.pctEncode",",feign.RequestTemplateTest.mapOf,feign.RequestTemplateTest.expand"
feign,feign.RequestTemplateTest.expandParamKeyHyphen,15,2,",feign.template.Template.toString,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplateTest.expand,feign.RequestTemplate.from,feign.RequestTemplate.uri,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.RequestTemplateTest.mapOf,feign.RequestTemplateTest.expand"
feign,feign.RequestTemplateTest.expandUrlEncoded,22,3,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queries,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.RequestTemplateTest.expand,feign.template.UriUtils.isReserved,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.from,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.UriUtils.isGenericDelimiter,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.UriUtils.pctEncode",",feign.template.UriUtils.encode,feign.RequestTemplateTest.mapOf,feign.RequestTemplateTest.expand"
feign,feign.RequestTemplateTest.fragmentShouldNotBeEncodedInTarget,13,3,",feign.template.Template.toString,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.QueryTemplate.queryString,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.RequestTemplate.target,feign.template.Template.encodeLiteral,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.url,feign.RequestTemplate.target,feign.RequestTemplate.queries,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.fragmentShouldNotBeEncodedInUri,17,3,",feign.template.Template.toString,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.queryString,feign.template.UriUtils.encodeChunk,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.queries,feign.RequestTemplate.url,feign.RequestTemplate.uri"
feign,feign.RequestTemplateTest.insertHasQueryParams,16,4,",feign.assertj.RequestTemplateAssert.hasPath,feign.template.Template.toString,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.UriUtils.encodeChunk,feign.RequestTemplate.target,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.query,feign.assertj.RequestTemplateAssert.hasPath,feign.RequestTemplate.target,feign.assertj.RequestTemplateAssert.hasQueries,feign.RequestTemplate.uri"
feign,feign.RequestTemplateTest.resolveTemplateWithBaseAndParameterizedIterableQuery,24,5,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.QueryTemplate.expand,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.queryString,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.query,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.assertj.RequestTemplateAssert.hasQueries,feign.RequestTemplate.uri,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.resolveTemplateWithBaseAndParameterizedQuery,25,5,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.QueryTemplate.expand,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.template.QueryTemplate.queryString,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.query,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.assertj.RequestTemplateAssert.hasQueries,feign.RequestTemplate.uri,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.resolveTemplateWithBinaryBody,21,5,",feign.template.Template.toString,feign.RequestTemplate.body,feign.RequestTemplate.queries,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.RequestTemplate.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.UriUtils.pctEncode",",feign.assertj.RequestTemplateAssert.hasUrl,feign.RequestTemplate.body,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.RequestTemplate.uri,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.resolveTemplateWithBodyTemplateDoesNotDoubleDecode,14,3,",feign.RequestTemplate.body,feign.RequestTemplate.queries,feign.template.Template.resolveExpression,feign.template.Template.parseTemplate,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.template.Template.parseFragment,feign.template.BodyTemplate.create,feign.RequestTemplate.header,feign.RequestTemplateTest.mapOf,feign.template.Expressions.create,feign.template.BodyTemplate.expand,feign.RequestTemplate.resolve,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.expand",",feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.bodyTemplate,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.resolveTemplateWithBodyTemplateSetsBodyAndContentLength,19,5,",feign.RequestTemplate.body,feign.assertj.RequestTemplateAssert.hasHeaders,feign.RequestTemplate.queries,feign.template.Template.resolveExpression,feign.template.Template.parseTemplate,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.BodyTemplate.create,feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.RequestTemplate.header,feign.RequestTemplateTest.mapOf,feign.template.Expressions.create,feign.template.BodyTemplate.expand,feign.RequestTemplate.resolve,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.expand",",feign.assertj.RequestTemplateAssert.hasHeaders,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.bodyTemplate,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.resolveTemplateWithHeaderEmptyResult,13,2,",feign.template.Expressions.create,feign.template.Literal.getValue,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.from,feign.assertj.RequestTemplateAssert.hasNoHeader,feign.RequestTemplate.resolve,feign.template.Template.resolveExpression,feign.RequestTemplate.header,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.template.Template.expand,feign.template.HeaderTemplate.expand,feign.template.Template.parseTemplate",",feign.assertj.RequestTemplateAssert.hasNoHeader,feign.RequestTemplate.resolve,feign.RequestTemplate.header"
feign,feign.RequestTemplateTest.resolveTemplateWithHeaderIncludingSpecialCharacters,15,4,",feign.template.Expressions.create,feign.template.Template.parseTemplate,feign.template.Template.parseFragment,feign.template.Template.toString,feign.RequestTemplate.headers,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.HeaderTemplate.from,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.template.Template.resolveExpression,feign.RequestTemplate.appendHeader,feign.RequestTemplate.from,feign.template.HeaderTemplate.create,feign.template.Template.expand,feign.template.HeaderTemplate.expand,feign.RequestTemplateTest.mapOf",",feign.assertj.RequestTemplateAssert.hasHeaders,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.resolveTemplateWithHeaderSubstitutions,15,3,",feign.template.Template.toString,feign.assertj.RequestTemplateAssert.hasHeaders,feign.RequestTemplate.queries,feign.template.Template.resolveExpression,feign.template.Template.parseTemplate,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.HeaderTemplate.expand,feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.RequestTemplate.header,feign.template.Expressions.create,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.RequestTemplate.resolve,feign.template.HeaderTemplate.create,feign.template.Template.expand",",feign.assertj.RequestTemplateAssert.hasHeaders,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve"
feign,feign.RequestTemplateTest.resolveTemplateWithHeaderSubstitutionsNotAtStart,15,3,",feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.Template.toString,feign.RequestTemplate.headers,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.HeaderTemplate.from,feign.RequestTemplate.header,feign.RequestTemplate.queries,feign.RequestTemplate.resolve,feign.template.Template.resolveExpression,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.RequestTemplate.from,feign.template.Template.expand,feign.template.HeaderTemplate.expand,feign.template.Template.parseTemplate",",feign.RequestTemplate.header,feign.RequestTemplate.resolve,feign.assertj.RequestTemplateAssert.hasHeaders"
feign,feign.RequestTemplateTest.resolveTemplateWithHeaderWithEscapedCurlyBrace,14,5,",feign.template.Template.toString,feign.assertj.RequestTemplateAssert.hasHeaders,feign.RequestTemplate.queries,feign.template.Template.parseTemplate,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.HeaderTemplate.expand,feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.RequestTemplate.header,feign.RequestTemplateTest.mapOf,feign.template.Expressions.create,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.template.HeaderTemplate.create,feign.template.Template.expand",",feign.assertj.RequestTemplateAssert.hasHeaders,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.resolveTemplateWithMixedCollectionFormatsByQuery,27,5,",feign.template.Template.toString,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.template.Expression.getValue,feign.RequestTemplate.from,feign.RequestTemplate.uri,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.queryString,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.query,feign.RequestTemplate.url,feign.RequestTemplate.resolve,feign.RequestTemplate.uri,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.resolveTemplateWithMixedRequestLineParams,23,5,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.QueryTemplate.expand,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.query,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.assertj.RequestTemplateAssert.hasQueries,feign.RequestTemplate.uri,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.resolveTemplateWithParameterizedPathSkipsEncodingSlash,16,3,",feign.template.Expression.matches,feign.template.Template.toString,feign.RequestTemplate.queries,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.UriUtils.pctEncode",",feign.assertj.RequestTemplateAssert.hasUrl,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.RequestTemplate.uri"
feign,feign.RequestTemplateTest.resolveTemplateWithRelativeUriWithQuery,12,4,",feign.template.Template.toString,feign.template.QueryTemplate.create,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.Util.isBlank,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.target,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.assertj.RequestTemplateAssert.hasUrl,feign.RequestTemplate.target,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri"
feign,feign.RequestTemplateTest.shouldNotInsertHeadersImmutableMap,4,2,",feign.RequestTemplate.headers,feign.RequestTemplate.header,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create",",feign.RequestTemplate.headers,feign.RequestTemplate.header"
feign,feign.RequestTemplateTest.shouldRetrieveHeadersWithoutNull,6,2,",feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.RequestTemplate.header,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.template.Template.parseTemplate",",feign.RequestTemplate.header,feign.RequestTemplate.headers"
feign,feign.RequestTemplateTest.skipUnresolvedQueries,24,5,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.from,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.QueryTemplate.expand,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.QueryTemplate.queryString,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.query,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.resolve,feign.assertj.RequestTemplateAssert.hasQueries,feign.RequestTemplate.uri,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.slashShouldNotBeAppendedForMatrixParams,8,1,",feign.template.UriUtils.encodeChunk,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.RequestTemplate.uri,feign.template.Template.encodeLiteral,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.RequestTemplate.uri"
feign,feign.RequestTemplateTest.spaceEncodingInUrlParam,25,4,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.template.QueryTemplate.queryString,feign.RequestTemplateTest.mapOf,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriUtils.pctEncode,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.RequestTemplate.resolve,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.RequestTemplateTest.mapOf"
feign,feign.RequestTemplateTest.uriStuffedIntoMethod,1,1,",feign.RequestTemplate.method",",feign.RequestTemplate.method"
feign,feign.RequestTemplateTest.useCaseInsensitiveHeaderFieldNames,6,2,",feign.RequestTemplate.headers,feign.template.HeaderTemplate.getValues,feign.template.HeaderTemplate.append,feign.RequestTemplate.header,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create",",feign.RequestTemplate.header,feign.RequestTemplate.headers"
feign,feign.ResponseTest.canAccessHeadersCaseInsensitively,3,2,",feign.Util.checkNotNull,feign.Request.create,feign.Response.caseInsensitiveCopyOf",",feign.Request.create,feign.Response.caseInsensitiveCopyOf"
feign,feign.ResponseTest.headerValuesWithSameNameOnlyVaryingInCaseAreMerged,2,2,",feign.Request.create,feign.Response.caseInsensitiveCopyOf",",feign.Request.create,feign.Response.caseInsensitiveCopyOf"
feign,feign.ResponseTest.headersAreOptional,1,1,",feign.Request.create",",feign.Request.create"
feign,feign.ResponseTest.reasonPhraseIsOptional,3,2,",feign.Response.toString,feign.Util.decodeOrDefault,feign.Request.create",",feign.Response.toString,feign.Request.create"
feign,feign.ResponseTest.statusCodesOfAnyValueAreAllowed,2,2,",feign.Request.create,feign.Response.builder",",feign.Request.create,feign.Response.builder"
feign,feign.ResponseTest.support1xxStatusCodes,2,1,",feign.Util.checkNotNull,feign.Request.create",",feign.Request.create"
feign,feign.RetryerTest.considersRetryAfterButNotMoreThanMaxPeriod,1,1,",feign.RetryableException.retryAfter,feign.FeignException.checkRequestNotNull",",feign.RetryableException.retryAfter,feign.FeignException.checkRequestNotNull"
feign,feign.RetryerTest.defaultRetryerFailsOnInterruptedException,1,1,",feign.RetryableException.retryAfter",",feign.RetryableException.retryAfter"
feign,feign.RetryerTest.neverRetryAlwaysPropagates,0,0,,
feign,feign.RetryerTest.only5TriesAllowedAndExponentialBackoff,1,1,",feign.FeignException.checkRequestNotNull",",feign.FeignException.checkRequestNotNull"
feign,feign.TargetTest.baseCaseQueryParamsArePercentEncoded,43,4,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.RequestTemplate.splitQueryParameter,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncResponseHandler.handleResponse,feign.MethodMetadata.configKey,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.pctEncode,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.TargetTest.emptyTarget,34,4,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.Feign.configKey,feign.assertj.MockWebServerAssertions.assertThat,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.MethodMetadata.template,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.TargetTest.hardCodedTargetWithURI,29,5,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.assertj.MockWebServerAssertions.assertThat,feign.DeclarativeContract.registerClassAnnotation,feign.assertj.RecordedRequestAssert.getQueryParams,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.TargetTest.targetCanCreateCustomRequest,48,3,",feign.assertj.MockWebServerAssertions.assertThat,feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.template.QueryTemplate.queryString,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.assertj.RecordedRequestAssert.hasPath,feign.template.Expressions.create,feign.template.UriUtils.pctEncode,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.UtilTest.checkArgumentInputFalseNotNullNullOutputIllegalArgumentException,1,1,",feign.Util.checkArgument",",feign.Util.checkArgument"
feign,feign.UtilTest.checkNotNullInputNullNotNullNullOutputNullPointerException,1,1,",feign.Util.checkNotNull",",feign.Util.checkNotNull"
feign,feign.UtilTest.checkNotNullInputZeroNotNull0OutputZero,0,0,,
feign,feign.UtilTest.checkStateInputFalseNotNullNullOutputIllegalStateException,1,1,",feign.Util.checkState",",feign.Util.checkState"
feign,feign.UtilTest.emptyToNullInputNotNullOutputNotNull,0,0,,
feign,feign.UtilTest.emptyToNullInputNullOutputNull,0,0,,
feign,feign.UtilTest.emptyValueOf,1,1,",feign.Util.emptyValueOf",",feign.Util.emptyValueOf"
feign,feign.UtilTest.emptyValueOf_considersRawType,0,0,,
feign,feign.UtilTest.emptyValueOf_nullForUndefined,1,1,",feign.Util.emptyValueOf",",feign.Util.emptyValueOf"
feign,feign.UtilTest.isBlankInputNotNullOutputFalse,0,0,,
feign,feign.UtilTest.isBlankInputNullOutputTrue,0,0,,
feign,feign.UtilTest.isNotBlankInputNotNullOutputFalse,0,0,,
feign,feign.UtilTest.isNotBlankInputNotNullOutputTrue,0,0,,
feign,feign.UtilTest.lastTypeFromAnonymous,4,1,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.Types.resolve,feign.Types.getGenericSupertype",",feign.Util.resolveLastTypeParameter"
feign,feign.UtilTest.lastTypeFromInstance,4,1,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.Types.resolve,feign.Types.getGenericSupertype",",feign.Util.resolveLastTypeParameter"
feign,feign.UtilTest.removesEmptyStrings,1,1,",feign.Util.removeValues",",feign.Util.removeValues"
feign,feign.UtilTest.removesEvenNumbers,1,1,",feign.Util.removeValues",",feign.Util.removeValues"
feign,feign.UtilTest.resolveLastTypeParameterWhenNotSubtype,2,1,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter",",feign.Util.resolveLastTypeParameter"
feign,feign.UtilTest.resolveLastTypeParameterWhenParameterizedSubtype,3,1,",feign.Types.getSupertype,feign.Types.resolve,feign.Util.resolveLastTypeParameter",",feign.Util.resolveLastTypeParameter"
feign,feign.UtilTest.resolveLastTypeParameterWhenWildcard,3,1,",feign.Types.getSupertype,feign.Types.resolve,feign.Util.resolveLastTypeParameter",",feign.Util.resolveLastTypeParameter"
feign,feign.UtilTest.unboundWildcardIsObject,3,1,",feign.Types.getSupertype,feign.Types.resolve,feign.Util.resolveLastTypeParameter",",feign.Util.resolveLastTypeParameter"
feign,feign.apttestgenerator.GenerateTestStubAPTTest.test,2,1,",feign.apttestgenerator.GenerateTestStubAPT.process,feign.apttestgenerator.GenerateTestStubAPT.readPackage",",feign.apttestgenerator.GenerateTestStubAPT.process"
feign,feign.auth.BasicAuthRequestInterceptorTest.addsAuthorizationHeader,7,3,",feign.auth.Base64.encode,feign.RequestTemplate.headers,feign.assertj.RequestTemplateAssert.hasHeaders,feign.auth.BasicAuthRequestInterceptor.base64Encode,feign.Util.isNotBlank,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.auth.BasicAuthRequestInterceptor.apply",",feign.assertj.RequestTemplateAssert.hasHeaders,feign.auth.BasicAuthRequestInterceptor.base64Encode,feign.assertj.FeignAssertions.assertThat,feign.auth.BasicAuthRequestInterceptor.apply"
feign,feign.auth.BasicAuthRequestInterceptorTest.addsAuthorizationHeader_longUserAndPassword,7,3,",feign.auth.Base64.encode,feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.assertj.RequestTemplateAssert.hasHeaders,feign.auth.BasicAuthRequestInterceptor.base64Encode,feign.RequestTemplate.header,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.auth.BasicAuthRequestInterceptor.apply,feign.template.Template.parseTemplate",",feign.auth.BasicAuthRequestInterceptor.apply,feign.assertj.RequestTemplateAssert.hasHeaders,feign.auth.BasicAuthRequestInterceptor.base64Encode"
feign,feign.client.DefaultClientTest.canCreateWithExplicitCredentials,0,0,,
feign,feign.client.DefaultClientTest.canCreateWithImplicitOrNoCredentials,3,3,",feign.client.TrustingSSLSocketFactory.get,feign.Types.checkNotPrimitive,feign.Util.isNotBlank",",feign.client.TrustingSSLSocketFactory.get,feign.Types.checkNotPrimitive,feign.Util.isNotBlank"
feign,feign.client.DefaultClientTest.canOverrideHostnameVerifier,75,4,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.MethodMetadata.queryMapIndex,feign.template.HeaderTemplate.expand,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.client.TrustingSSLSocketFactory.setEnabledCipherSuites,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.client.TrustingSSLSocketFactory.createSocket,feign.RequestTemplate.resolve,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.client.TrustingSSLSocketFactory.get,feign.Util.copy,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.client.TrustingSSLSocketFactory.loadKeyStore,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.client.TrustingSSLSocketFactory.get,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.client.DefaultClientTest.canOverrideSSLSocketFactory,79,4,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.client.DefaultClientTest.newBuilder,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.client.TrustingSSLSocketFactory.setEnabledCipherSuites,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.client.TrustingSSLSocketFactory.createSocket,feign.RequestTemplate.resolve,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.client.TrustingSSLSocketFactory.get,feign.Util.copy,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.client.TrustingSSLSocketFactory.loadKeyStore,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.Response.body,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.client.TrustingSSLSocketFactory.get,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.client.DefaultClientTest.newBuilder"
feign,feign.client.DefaultClientTest.noResponseBodyForPatch,62,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.client.TrustingSSLSocketFactory.get,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.client.DefaultClientTest.newBuilder,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.Util.isBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.Util.isNotBlank,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Request.httpMethod,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.RequestTemplate.method,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerParameterAnnotation,feign.FeignException.errorExecuting,feign.RequestTemplate.header,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.MethodMetadata.formParams,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.client.DefaultClientTest.newBuilder"
feign,feign.client.DefaultClientTest.noResponseBodyForPost,0,0,,
feign,feign.client.DefaultClientTest.noResponseBodyForPut,0,0,,
feign,feign.client.DefaultClientTest.parsesErrorResponse,0,0,,
feign,feign.client.DefaultClientTest.parsesErrorResponseBody,0,0,,
feign,feign.client.DefaultClientTest.parsesRequestAndResponse,0,0,,
feign,feign.client.DefaultClientTest.parsesResponseMissingLength,0,0,,
feign,feign.client.DefaultClientTest.parsesUnauthorizedResponseBody,0,0,,
feign,feign.client.DefaultClientTest.postWithSpacesInPath,0,0,,
feign,feign.client.DefaultClientTest.reasonPhraseIsOptional,0,0,,
feign,feign.client.DefaultClientTest.retriesFailedHandshake,82,3,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.client.DefaultClientTest.newBuilder,feign.template.Literal.getValue,feign.Util.isBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.MethodMetadata.indexToExpander,feign.FeignException.checkRequestNotNull,feign.template.Expressions.create,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.RequestTemplate.collectionFormat,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.client.TrustingSSLSocketFactory.setEnabledCipherSuites,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.client.TrustingSSLSocketFactory.createSocket,feign.RequestTemplate.resolve,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.FeignException.errorExecuting,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.SynchronousMethodHandler.invoke,feign.client.DefaultClientTest.newBuilder,feign.ReflectiveFeign.newInstance"
feign,feign.client.DefaultClientTest.safeRebuffering,0,0,,
feign,feign.client.DefaultClientTest.safeRebuffering_noContent,0,0,,
feign,feign.client.DefaultClientTest.testAlternativeCollectionFormat,0,0,,
feign,feign.client.DefaultClientTest.testContentTypeDefaultsToRequestCharset,0,0,,
feign,feign.client.DefaultClientTest.testContentTypeWithCharset,0,0,,
feign,feign.client.DefaultClientTest.testContentTypeWithoutCharset,0,0,,
feign,feign.client.DefaultClientTest.testDefaultCollectionFormat,0,0,,
feign,feign.client.DefaultClientTest.testHeadersWithNotEmptyParams,0,0,,
feign,feign.client.DefaultClientTest.testHeadersWithNullParams,0,0,,
feign,feign.client.DefaultClientTest.testPatch,74,4,",feign.RequestTemplate.body,feign.Request.url,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.client.DefaultClientTest.newBuilder,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.MethodMetadata.indexToExpanderClass,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.FeignException.checkRequestNotNull,feign.template.Expressions.create,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.FeignException.errorExecuting,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.client.DefaultClientTest.newBuilder"
feign,feign.client.DefaultClientTest.testResponseLength,0,0,,
feign,feign.client.DefaultClientTest.testVeryLongResponseNullLength,0,0,,
feign,feign.codec.DefaultDecoderTest.testDecodesNullBodyToNull,3,1,",feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.codec.DefaultDecoderTest.nullBodyResponse",",feign.codec.DefaultDecoderTest.nullBodyResponse"
feign,feign.codec.DefaultDecoderTest.testDecodesToByteArray,4,2,",feign.codec.DefaultDecoderTest.knownResponse,feign.Util.toByteArray,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Util.checkNotNull",",feign.codec.DefaultDecoderTest.knownResponse,feign.Util.toByteArray"
feign,feign.codec.DefaultDecoderTest.testDecodesToString,4,2,",feign.codec.DefaultDecoderTest.knownResponse,feign.Request.create,feign.Util.toString,feign.Response.caseInsensitiveCopyOf,feign.codec.StringDecoder.decode",",feign.codec.StringDecoder.decode,feign.codec.DefaultDecoderTest.knownResponse"
feign,feign.codec.DefaultDecoderTest.testRefusesToDecodeOtherTypes,5,2,",feign.codec.DefaultDecoderTest.knownResponse,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Util.checkNotNull,feign.codec.StringDecoder.decode",",feign.codec.StringDecoder.decode,feign.codec.DefaultDecoderTest.knownResponse"
feign,feign.codec.DefaultEncoderTest.testEncodesByteArray,6,1,",feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.RequestTemplate.header,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.template.Template.parseTemplate",",feign.RequestTemplate.body"
feign,feign.codec.DefaultEncoderTest.testEncodesStrings,6,1,",feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.RequestTemplate.header,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.template.Template.parseTemplate",",feign.RequestTemplate.body"
feign,feign.codec.DefaultEncoderTest.testRefusesToEncodeOtherTypes,0,0,,
feign,feign.codec.DefaultErrorDecoderHttpErrorTest.testExceptionIsHttpSpecific,12,4,",feign.FeignException.checkRequestNotNull,feign.FeignException.clientErrorStatus,feign.Util.toByteArray,feign.Util.checkState,feign.Response.status,feign.FeignException.errorStatus,feign.Util.copy,feign.Request.url,feign.Util.ensureClosed,feign.FeignException.isClientError,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Response.body,feign.FeignException.serverErrorStatus,feign.FeignException.status,feign.Response.builder",",feign.FeignException.errorStatus,feign.Util.checkState,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.FeignException.status,feign.Response.builder"
feign,feign.codec.DefaultErrorDecoderTest.retryAfterHeaderThrowsRetryableException,5,3,",feign.FeignException.checkRequestNotNull,feign.FeignException.errorStatus,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Util.checkNotNull,feign.FeignException.serverErrorStatus",",feign.FeignException.checkRequestNotNull,feign.FeignException.errorStatus,feign.Request.create,feign.Response.caseInsensitiveCopyOf"
feign,feign.codec.DefaultErrorDecoderTest.testFeignExceptionIncludesStatus,3,2,",feign.FeignException.clientErrorStatus,feign.FeignException.errorStatus,feign.Request.create,feign.Response.builder",",feign.FeignException.errorStatus,feign.Request.create,feign.Response.builder"
feign,feign.codec.DefaultErrorDecoderTest.throwsFeignException,7,3,",feign.Util.toByteArray,feign.codec.DefaultErrorDecoderTest.repeatString,feign.FeignException.errorStatus,feign.FeignException.contentUTF8,feign.Util.copy,feign.Response.reason,feign.Request.create,feign.FeignException.serverErrorStatus,feign.Response.builder",",feign.codec.DefaultErrorDecoderTest.repeatString,feign.FeignException.errorStatus,feign.FeignException.contentUTF8,feign.Request.create,feign.Response.builder"
feign,feign.codec.DefaultErrorDecoderTest.throwsFeignExceptionIncludingBody,0,0,,
feign,feign.codec.DefaultErrorDecoderTest.throwsFeignExceptionIncludingLongBody,0,0,,
feign,feign.codec.RetryAfterDecoderTest.malformDateFailsGracefully,0,0,,
feign,feign.codec.RetryAfterDecoderTest.relativeSecondsParseDecimalIntegers,0,0,,
feign,feign.codec.RetryAfterDecoderTest.relativeSecondsParses,0,0,,
feign,feign.codec.RetryAfterDecoderTest.rfc822Parses,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.noResponseBodyForPatch,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.noResponseBodyForPost,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.noResponseBodyForPut,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.parsesErrorResponse,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.parsesErrorResponseBody,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.parsesRequestAndResponse,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.parsesResponseMissingLength,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.parsesUnauthorizedResponseBody,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.postWithSpacesInPath,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.reasonPhraseIsOptional,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.safeRebuffering,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.safeRebuffering_noContent,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.testAlternativeCollectionFormat,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.testContentTypeDefaultsToRequestCharset,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.testContentTypeWithCharset,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.testContentTypeWithoutCharset,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.testDefaultCollectionFormat,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.testHeadersWithNotEmptyParams,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.testHeadersWithNullParams,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.testPatch,1,1,",feign.googlehttpclient.GoogleHttpClientTest.testPatch",",feign.googlehttpclient.GoogleHttpClientTest.testPatch"
feign,feign.googlehttpclient.GoogleHttpClientTest.testResponseLength,0,0,,
feign,feign.googlehttpclient.GoogleHttpClientTest.testVeryLongResponseNullLength,0,0,,
feign,feign.gson.GsonCodecTest.customDecoder,8,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.Util.ensureClosed,feign.gson.GsonDecoder.decode,feign.Request.create,feign.Types.resolve,feign.gson.GsonFactory.create,feign.Types.getGenericSupertype",",feign.gson.GsonDecoder.decode,feign.Request.create,feign.gson.GsonFactory.create"
feign,feign.gson.GsonCodecTest.customEncoder,13,4,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.gson.GsonEncoder.encode,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.gson.GsonFactory.create,feign.Types.getGenericSupertype,feign.template.Template.parseTemplate",",feign.gson.GsonEncoder.encode,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.gson.GsonFactory.create"
feign,feign.gson.GsonCodecTest.decodes,6,4,",feign.gson.DoubleToIntMapTypeAdapter.read,feign.Util.ensureClosed,feign.gson.GsonDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.gson.GsonFactory.create",",feign.gson.GsonDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.gson.GsonFactory.create"
feign,feign.gson.GsonCodecTest.decodesMapObjectNumericalValuesAsInteger,0,0,,
feign,feign.gson.GsonCodecTest.emptyBodyDecodesToNull,3,3,",feign.gson.GsonDecoder.decode,feign.Request.create,feign.gson.GsonFactory.create",",feign.gson.GsonDecoder.decode,feign.Request.create,feign.gson.GsonFactory.create"
feign,feign.gson.GsonCodecTest.encodesFormParams,11,4,",feign.gson.GsonEncoder.encode,feign.RequestTemplate.body,feign.template.Template.parseFragment,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.gson.GsonFactory.create,feign.template.Template.parseTemplate",",feign.gson.GsonEncoder.encode,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.gson.GsonFactory.create"
feign,feign.gson.GsonCodecTest.encodesMapObjectNumericalValuesAsInteger,12,4,",feign.gson.GsonEncoder.encode,feign.RequestTemplate.body,feign.template.Template.parseFragment,feign.template.Literal.create,feign.Util.isNotBlank,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.gson.GsonFactory.create,feign.template.Template.parseTemplate",",feign.gson.GsonEncoder.encode,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.gson.GsonFactory.create"
feign,feign.gson.GsonCodecTest.notFoundDecodesToNull,2,2,",feign.Request.create,feign.gson.GsonFactory.create",",feign.Request.create,feign.gson.GsonFactory.create"
feign,feign.gson.GsonCodecTest.nullBodyDecodesToNull,6,6,",feign.Types.checkNotPrimitive,feign.gson.GsonDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.gson.GsonFactory.create,feign.Response.builder",",feign.Types.checkNotPrimitive,feign.gson.GsonDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.gson.GsonFactory.create,feign.Response.builder"
feign,feign.hc5.ApacheHttp5ClientTest.noResponseBodyForPatch,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.noResponseBodyForPost,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.noResponseBodyForPut,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.parsesErrorResponse,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.parsesErrorResponseBody,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.parsesRequestAndResponse,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.parsesResponseMissingLength,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.parsesUnauthorizedResponseBody,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.postWithSpacesInPath,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.queryParamsAreRespectedWhenBodyIsEmpty,65,5,",feign.Request.isBinary,feign.template.Template.toString,feign.RequestTemplate.body,feign.hc5.ApacheHttp5Client.toClassicHttpRequest,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.ApacheHttp5Client.toFeignBody,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.ReflectiveFeign.newInstance,feign.Response.toBuilder,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.hc5.ApacheHttp5Client.execute,feign.Util.toString,feign.RequestTemplate.appendHeader,feign.DeclarativeContract.registerMethodAnnotation,feign.AsyncResponseHandler.decode,feign.template.QueryTemplate.expand,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriTemplate.append,feign.template.HeaderTemplate.expand,feign.hc5.ApacheHttp5Client.getContentType,feign.SynchronousMethodHandler.targetRequest,feign.hc5.ApacheHttp5Client.toFeignResponse,feign.codec.StringDecoder.decode,feign.RequestTemplate.query,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Response.caseInsensitiveCopyOf,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.headers,feign.Util.checkState,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.jaxrs.JAXRSContract.registerParamAnnotations,feign.hc5.ApacheHttp5Client.configureTimeouts,feign.MethodMetadata.warnings,feign.jaxrs.JAXRSContract.addTemplatedParam,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.MethodMetadata.formParams,feign.RequestTemplate.resolve,feign.Request.create,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.Response.builder",",feign.Util.emptyToNull,feign.DeclarativeContract.registerClassAnnotation,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.jaxrs.JAXRSContract.registerParamAnnotations,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.hc5.ApacheHttp5ClientTest.reasonPhraseIsOptional,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.safeRebuffering,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.safeRebuffering_noContent,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.testAlternativeCollectionFormat,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.testContentTypeDefaultsToRequestCharset,1,1,",feign.hc5.ApacheHttp5ClientTest.testContentTypeDefaultsToRequestCharset",",feign.hc5.ApacheHttp5ClientTest.testContentTypeDefaultsToRequestCharset"
feign,feign.hc5.ApacheHttp5ClientTest.testContentTypeWithCharset,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.testContentTypeWithoutCharset,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.testDefaultCollectionFormat,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.testHeadersWithNotEmptyParams,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.testHeadersWithNullParams,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.testPatch,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.testResponseLength,0,0,,
feign,feign.hc5.ApacheHttp5ClientTest.testVeryLongResponseNullLength,1,1,",feign.hc5.ApacheHttp5ClientTest.testVeryLongResponseNullLength",",feign.hc5.ApacheHttp5ClientTest.testVeryLongResponseNullLength"
feign,feign.hc5.AsyncApacheHttp5ClientTest.beanQueryMapEncoderWithEmptyParams,74,8,",feign.SynchronousMethodHandler.invoke,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.assertj.RecordedRequestAssert.getQueryParams,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.querymap.BeanQueryMapEncoder.encode,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.querymap.BeanQueryMapEncoder.getMetadata,feign.RequestTemplate.hasRequestVariable",",feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.Feign.configKey,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.beanQueryMapEncoderWithNullValueIgnored,79,9,",feign.SynchronousMethodHandler.invoke,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.assertj.RecordedRequestAssert.getQueryParams,feign.MethodMetadata.indexToExpanderClass,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.querymap.BeanQueryMapEncoder.encode,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.MethodMetadata.urlIndex,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.querymap.BeanQueryMapEncoder.getMetadata,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.Feign.configKey,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.beanQueryMapEncoderWithPrivateGetterIgnored,83,10,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.PropertyPojo.setName,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Expressions.stripBraces,feign.assertj.RecordedRequestAssert.getQueryParams,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expression.getName,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.PropertyPojo.getName,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.collectionFormat,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.querymap.BeanQueryMapEncoder.encode,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.HeaderTemplate.create,feign.querymap.BeanQueryMapEncoder.getMetadata,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Feign.configKey,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.clearInvocationContext,feign.PropertyPojo.setName,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.bodyTypeCorrespondsWithParameterType,75,6,",feign.SynchronousMethodHandler.invoke,feign.Util.isBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.MethodMetadata.indexToExpanderClass,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expression.getName,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Feign.configKey,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.canOverrideErrorDecoder,66,7,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.hc5.AsyncApacheHttp5ClientTest.configKeyFormatsAsExpected,1,1,",feign.Feign.configKey",",feign.Feign.configKey"
feign,feign.hc5.AsyncApacheHttp5ClientTest.configKeyUsesChildType,1,1,",feign.Feign.configKey",",feign.Feign.configKey"
feign,feign.hc5.AsyncApacheHttp5ClientTest.customExpander,102,10,",feign.template.Expression.matches,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expression.getName,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.customExpanderListParam,79,7,",feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.warnings,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.customExpanderNullParam,0,0,,
feign,feign.hc5.AsyncApacheHttp5ClientTest.decodeLogicSupportsByteArray,44,6,",feign.template.Template.toString,feign.AsyncInvocation.context,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.Literal.getValue,feign.AsyncInvocation.isAsyncReturnType,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.Template.expand,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.DeclarativeContract.registerParameterAnnotation,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.MethodInfo.isAsyncReturnType,feign.RequestTemplate.target,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.hc5.AsyncApacheHttp5ClientTest.decodingDoesNotSwallow404ErrorsInDecode404Mode,82,7,",feign.SynchronousMethodHandler.invoke,feign.AsyncInvocation.isAsyncReturnType,feign.Util.isBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expression.getName,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.MethodMetadata.urlIndex,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.hc5.AsyncApacheHttp5ClientTest.decodingExceptionGetWrappedInDecode404Mode,86,6,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.Util.isBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expression.getName,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.MethodMetadata.urlIndex,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.hc5.AsyncApacheHttp5ClientTest.doesntRetryAfterResponseIsSent,64,5,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.hc5.AsyncApacheHttp5Client.execute,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.template.Expression.getValue,feign.Util.isNotBlank,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.Template.expand,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.DeclarativeContract.processAnnotationsOnParameter,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.getVariables",",feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.hc5.AsyncApacheHttp5ClientTest.encodeLogicSupportsByteArray,61,7,",feign.template.Template.toString,feign.RequestTemplate.body,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.addWarning,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.MethodMetadata.returnType,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.Template.expand,feign.RequestTemplate.path,feign.ReflectiveAsyncFeign.wrap,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.MethodMetadata.template,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap",",feign.assertj.MockWebServerAssertions.assertThat,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.encodedQueryParam,83,8,",feign.SynchronousMethodHandler.invoke,feign.AsyncInvocation.isAsyncReturnType,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.MethodMetadata.indexToExpanderClass,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.setResponseFuture,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable,feign.template.UriUtils.pctEncode",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.equalsHashCodeAndToStringWork,64,2,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.MethodMetadata.targetType,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.template.Literal.getValue,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.addWarning,feign.template.UriUtils.isAlpha,feign.Util.isNotBlank,feign.ReflectiveFeign.newInstance,feign.Types.getRawType,feign.MethodMetadata.returnType,feign.Util.isBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.Expressions.stripBraces,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isDigit,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.MethodMetadata.formParams,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.AsyncFeign.asyncBuilder,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.headerMap,67,7,",feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expression.getName,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasHeaders,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Feign.configKey,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.headerMapWithHeaderAnnotations,89,10,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.indexToExpander,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.AsyncInvocation.setResponseFuture,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.template.HeaderTemplate.append,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasHeaders,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.Util.checkNotNull"
feign,feign.hc5.AsyncApacheHttp5ClientTest.iterableQueryParams,74,7,",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.mapAndDecodeExecutesMapFunction,75,6,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.hc5.AsyncApacheHttp5ClientTest.upperCaseResponseMapper,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.RequestTemplate.collectionFormat,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.hc5.AsyncApacheHttp5ClientTest.upperCaseResponseMapper,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.hc5.AsyncApacheHttp5ClientTest.multipleInterceptor,65,7,",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasHeaders,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.okIfDecodeRootCauseHasNoMessage,86,7,",feign.Types.checkNotPrimitive,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.Util.checkState,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.hc5.AsyncApacheHttp5ClientTest.okIfEncodeRootCauseHasNoMessage,54,5,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.MethodMetadata.bodyIndex,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.headers,feign.Util.checkState,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.configKey,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.overrideTypeSpecificDecoder,60,6,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.hc5.AsyncApacheHttp5Client.execute,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.template.BodyTemplate.create,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.DeclarativeContract.processAnnotationsOnParameter,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.getVariables",",feign.Feign.configKey,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.hc5.AsyncApacheHttp5ClientTest.postBodyParam,73,9,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.template.QueryTemplate.create,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.Util.checkArgument,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.hc5.AsyncApacheHttp5Client.getContentType,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasHeaders,feign.assertj.MockWebServerAssertions.assertThat,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.postFormParams,83,10,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.RequestTemplate.collectionFormat,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.hc5.AsyncApacheHttp5Client.getContentType,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.postTemplateParamsResolve,82,7,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.Util.isBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.path,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.template.QueryTemplate.create,feign.assertj.RecordedRequestAssert.hasBody,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.BodyTemplate.expand,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.hc5.AsyncApacheHttp5Client.getContentType,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.MockWebServerAssertions.assertThat,feign.Feign.configKey,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.queryMap,114,13,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.querymap.FieldQueryMapEncoder.encode,feign.ParentPojo.setParentProtectedProperty,feign.template.Literal.getValue,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.AsyncInvocation.isAsyncReturnType,feign.template.UriUtils.isAlpha,feign.Util.isBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.append,feign.template.Expressions.stripBraces,feign.assertj.RecordedRequestAssert.getQueryParams,feign.MethodMetadata.indexToExpanderClass,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.template.Expression.getName,feign.MethodMetadata.indexToExpander,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.RequestTemplate.getRequestVariables,feign.AsyncInvocation.context,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.RequestTemplate.collectionFormat,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.ChildPojo.setChildPrivateProperty,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.MethodMetadata.urlIndex,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.encodeLiteral,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.MethodMetadata.queryMapEncoded,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable,feign.template.UriUtils.pctEncode",",feign.ChildPojo.setChildPrivateProperty,feign.assertj.RecordedRequestAssert.hasPath,feign.ParentPojo.setParentProtectedProperty,feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasQueryParams,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.Feign.configKey,feign.Util.emptyToNull,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.queryMapIterableValuesExpanded,0,0,,
feign,feign.hc5.AsyncApacheHttp5ClientTest.queryMapPojoWithEmptyParams,70,5,",feign.SynchronousMethodHandler.invoke,feign.querymap.FieldQueryMapEncoder.encode,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.queryMapPojoWithFullParams,0,0,,
feign,feign.hc5.AsyncApacheHttp5ClientTest.queryMapPojoWithPartialParams,0,0,,
feign,feign.hc5.AsyncApacheHttp5ClientTest.queryMapValueStartingWithBrace,0,0,,
feign,feign.hc5.AsyncApacheHttp5ClientTest.queryMapWithQueryParams,0,0,,
feign,feign.hc5.AsyncApacheHttp5ClientTest.queryMap_with_child_pojo,0,0,,
feign,feign.hc5.AsyncApacheHttp5ClientTest.responseCoercesToStringBody,64,7,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.AsyncFeign.clearInvocationContext,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.hc5.AsyncApacheHttp5Client.execute,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.decodeOrDefault,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.RequestTemplate.path,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.template.BodyTemplate.create,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.getVariables",",feign.Util.decodeOrDefault,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.hc5.AsyncApacheHttp5ClientTest.responseMapperIsAppliedBeforeDelegate,6,4,",feign.hc5.AsyncApacheHttp5ClientTest.upperCaseResponseMapper,feign.Util.ensureClosed,feign.hc5.AsyncApacheHttp5ClientTest.responseWithText,feign.Request.create,feign.Util.toString,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.codec.StringDecoder.decode",",feign.hc5.AsyncApacheHttp5ClientTest.upperCaseResponseMapper,feign.hc5.AsyncApacheHttp5ClientTest.responseWithText,feign.Util.toString,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.codec.StringDecoder.decode"
feign,feign.hc5.AsyncApacheHttp5ClientTest.singleInterceptor,75,7,",feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.template.Expressions.stripBraces,feign.MethodMetadata.indexToExpanderClass,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.Expressions.create,feign.hc5.AsyncApacheHttp5Client.configureTimeouts,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.AsyncFeign.setInvocationContext,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.collectionFormat,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.SynchronousMethodHandler.targetRequest,feign.assertj.RecordedRequestAssert.hasHeaders,feign.MethodMetadata.template,feign.Feign.configKey,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.hc5.AsyncApacheHttp5Client.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.hc5.AsyncApacheHttp5Client.toClassicHttpRequest,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasHeaders,feign.hc5.AsyncApacheHttp5ClientTest.checkCFCompletedSoon,feign.AsyncFeign.clearInvocationContext,feign.hc5.AsyncApacheHttp5Client.createStartedClient,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.throwsFeignExceptionIncludingBody,67,7,",feign.template.QueryTemplate.getName,feign.template.Template.toString,feign.RequestTemplate.body,feign.RequestTemplate.getRequestVariables,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.RequestTemplate.path,feign.ReflectiveAsyncFeign.wrap,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.FeignException.contentUTF8,feign.Util.checkState,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.indexToExpanderClass,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.AsyncFeign.setInvocationContext,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.getVariables",",feign.Feign.configKey,feign.FeignException.contentUTF8,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.hc5.AsyncApacheHttp5ClientTest.throwsFeignExceptionWithoutBody,66,5,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.AsyncFeign.stageExecution,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.AsyncFeign.newInstance,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.AsyncFeign.stageDecode,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.template.Template.expand,feign.ReflectiveAsyncFeign.wrap,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.path,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.template.BodyTemplate.create,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.AsyncFeign.setInvocationContext,feign.Feign.builder,feign.template.Literal.create,feign.RequestTemplate.resolve,feign.Types.resolve,feign.RequestTemplate.bodyTemplate,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.Feign.configKey,feign.AsyncFeign.setInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.AsyncFeign.newInstance"
feign,feign.hc5.AsyncApacheHttp5ClientTest.whenReturnTypeIsResponseNoErrorHandling,76,7,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.AsyncFeign.asyncBuilder,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.AsyncFeign.newInstance,feign.SynchronousMethodHandler.executeAndDecode,feign.AsyncFeign.stageDecode,feign.RequestTemplate.splitQueryParameter,feign.RequestTemplate.collectionFormat,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.bodyTemplate,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.stageExecution,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.ReflectiveAsyncFeign.wrap,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.template.BodyTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.QueryTemplate.getName,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hc5.AsyncApacheHttp5ClientTest.unwrap,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.queryMapEncoded,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Feign.configKey,feign.AsyncFeign.clearInvocationContext,feign.AsyncFeign.asyncBuilder,feign.SynchronousMethodHandler.invoke,feign.Request.create,feign.AsyncFeign.newInstance,feign.Response.caseInsensitiveCopyOf,feign.hc5.AsyncApacheHttp5ClientTest.unwrap"
feign,feign.http2client.test.Http2ClientTest.feign.http2client.test.Http2ClientTest,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.noResponseBodyForPatch,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.noResponseBodyForPost,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.noResponseBodyForPut,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.parsesErrorResponse,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.parsesErrorResponseBody,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.parsesRequestAndResponse,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.parsesResponseMissingLength,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.parsesUnauthorizedResponseBody,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.postWithSpacesInPath,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.queryParamsAreRespectedWhenBodyIsEmpty,84,6,",feign.Types.checkNotPrimitive,feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.httpclient.ApacheHttpClient.execute,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.codec.StringDecoder.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.httpclient.ApacheHttpClient.getContentType,feign.httpclient.ApacheHttpClient.toFeignBody,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.jaxrs.JAXRSContract.registerParamAnnotations,feign.template.Expressions.create,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.splitQueryParameter,feign.Util.toString,feign.AsyncResponseHandler.decode,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.httpclient.ApacheHttpClient.toFeignResponse,feign.jaxrs.JAXRSContract.addTemplatedParam,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.Util.checkArgument,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.AsyncResponseHandler.isVoidType,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.httpclient.ApacheHttpClient.toHttpUriRequest,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.template.UriTemplate.append,feign.Response.caseInsensitiveCopyOf,feign.DeclarativeContract.registerParameterAnnotation,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create",",feign.Util.emptyToNull,feign.DeclarativeContract.registerClassAnnotation,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.jaxrs.JAXRSContract.registerParamAnnotations,feign.SynchronousMethodHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.httpclient.ApacheHttpClientTest.reasonPhraseIsOptional,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.safeRebuffering,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.safeRebuffering_noContent,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.testAlternativeCollectionFormat,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.testContentTypeDefaultsToRequestCharset,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.testContentTypeWithCharset,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.testContentTypeWithoutCharset,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.testDefaultCollectionFormat,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.testHeadersWithNotEmptyParams,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.testHeadersWithNullParams,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.testPatch,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.testResponseLength,0,0,,
feign,feign.httpclient.ApacheHttpClientTest.testVeryLongResponseNullLength,0,0,,
feign,feign.hystrix.FallbackFactoryTest.defaultFallbackFactory_delegates,28,4,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.isDefault,feign.template.UriUtils.encode,feign.hystrix.HystrixInvocationHandler.isReturnsCompletableFuture,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.Template.encodeLiteral",",feign.hystrix.HystrixInvocationHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Util.checkNotNull,feign.hystrix.HystrixFeign.builder"
feign,feign.hystrix.FallbackFactoryTest.defaultFallbackFactory_doesntLogByDefault,24,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.methodMetadata,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.parseFragment,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriTemplate.create,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.hystrix.HystrixInvocationHandler.toSetters,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.hystrix.HystrixInvocationHandler.invoke,feign.ReflectiveFeign.newInstance,feign.hystrix.HystrixFeign.builder"
feign,feign.hystrix.FallbackFactoryTest.defaultFallbackFactory_logsAtFineLevel,25,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.parseFragment,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriTemplate.create,feign.Util.checkState,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.hystrix.HystrixInvocationHandler.isReturnsCompletable,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.template.Template.encodeLiteral",",feign.hystrix.HystrixInvocationHandler.invoke,feign.ReflectiveFeign.newInstance,feign.hystrix.HystrixFeign.builder"
feign,feign.hystrix.FallbackFactoryTest.fallbackFactory_example_ctor,28,4,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriTemplate.create,feign.Util.checkState,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.hystrix.HystrixInvocationHandler.toSetters,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.hystrix.HystrixInvocationHandler.invoke,feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.hystrix.HystrixFeign.builder"
feign,feign.hystrix.FallbackFactoryTest.fallbackFactory_example_lambda,26,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.template.UriTemplate.create,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.hystrix.HystrixInvocationHandler.invoke,feign.ReflectiveFeign.newInstance,feign.hystrix.HystrixFeign.builder"
feign,feign.hystrix.FallbackFactoryTest.fallbackFactory_example_retro,25,4,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.encodeLiteral,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.hystrix.HystrixInvocationHandler.isReturnsSingle,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.hystrix.HystrixInvocationHandler.isReturnsCompletable",",feign.hystrix.HystrixInvocationHandler.invoke,feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.hystrix.HystrixFeign.builder"
feign,feign.hystrix.HystrixBuilderTest.completableFutureEmptyBody,45,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.hystrix.HystrixCapabilityTest.target,feign.RequestTemplate.collectionFormat,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.template.UriTemplate.create,feign.RequestTemplate.method,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.Util.checkState,feign.MethodMetadata.configKey,feign.template.UriUtils.isDigit,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.hystrix.HystrixInvocationHandler.isReturnsSingle,feign.template.Literal.create,feign.template.UriUtils.isUnreserved,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.completableFutureFailWithoutFallback,48,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.MethodMetadata.targetType,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.hystrix.HystrixInvocationHandler.isReturnsCompletableFuture,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.Util.isNotBlank,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.DeclarativeContract.registerParameterAnnotation,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DefaultMethodHandler.bindTo,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.hystrix.HystrixInvocationHandler.isReturnsObservable,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.completableFutureFallback,49,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.hystrix.HystrixCapabilityTest.target,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.hystrix.HystrixInvocationHandler.isReturnsSingle,feign.template.UriUtils.isUnreserved,feign.hystrix.HystrixInvocationHandler.isReturnsCompletable,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.completableFutureWithBody,49,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.targetType,feign.template.UriUtils.encode,feign.hystrix.HystrixInvocationHandler.isReturnsCompletableFuture,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixCapability.fallback,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.RequestTemplate.collectionFormat,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.parseFragment,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.RequestTemplate.method,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.hystrix.HystrixInvocationHandler.isReturnsSingle,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.hystrix.HystrixInvocationHandler.isReturnsObservable,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.defaultMethodReturningHystrixCommand,42,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.collectionFormat,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.RequestTemplate.method,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.MethodMetadata.formParams,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.equalsHashCodeAndToStringWork,62,3,",feign.Types.getSupertype,feign.hystrix.HystrixInvocationHandler.hashCode,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.MethodMetadata.bodyIndex,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.MethodMetadata.targetType,feign.hystrix.HystrixInvocationHandler.equals,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.hystrix.HystrixCapabilityTest.target,feign.RequestTemplate.collectionFormat,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.hystrix.HystrixInvocationHandler.toString,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.Types.getGenericSupertype,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.method,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.MethodMetadata.indexToExpander,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.MethodMetadata.formParams,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.errorInFallbackHasExpectedBehavior,40,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.targetType,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.template.Expression.getValue,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.Util.checkState,feign.template.Expressions.stripBraces,feign.DeclarativeContract.registerClassAnnotation,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.hystrix.HystrixInvocationHandler.isReturnsObservable,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.hystrix.HystrixBuilderTest.target,feign.template.Template.getVariables",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.fallbacksApplyOnError,43,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.isDefault,feign.template.UriUtils.encode,feign.hystrix.HystrixInvocationHandler.isReturnsCompletableFuture,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.template.Expression.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriTemplate.create,feign.Util.checkState,feign.template.Expressions.stripBraces,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.method,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.Expression.getName,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.hystrix.HystrixInvocationHandler.isReturnsCompletable,feign.hystrix.HystrixInvocationHandler.isReturnsSingle,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.hystrix.HystrixBuilderTest.target,feign.template.Template.getVariables",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.hystrixCommand,59,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.MethodMetadata.targetType,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixCapability.fallback,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.hystrix.HystrixCapabilityTest.target,feign.RequestTemplate.collectionFormat,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.template.UriUtils.isAlpha,feign.Util.isNotBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.gson.GsonFactory.create,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.method,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.indexToExpanderClass,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.hystrixCommandFallback,43,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.collectionFormat,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.hystrixCommandInt,0,0,,
feign,feign.hystrix.HystrixBuilderTest.hystrixCommandIntFallback,0,0,,
feign,feign.hystrix.HystrixBuilderTest.hystrixCommandList,50,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.isDefault,feign.MethodMetadata.targetType,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.collectionFormat,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.hystrixCommandListFallback,0,0,,
feign,feign.hystrix.HystrixBuilderTest.hystrixRuntimeExceptionPropagatesOnException,38,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.template.Expression.getValue,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.Util.checkState,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.hystrix.HystrixInvocationHandler.isReturnsSingle,feign.template.UriUtils.isUnreserved,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.hystrix.HystrixInvocationHandler.isReturnsObservable,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.hystrix.HystrixBuilderTest.target,feign.template.Template.getVariables",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.plainList,53,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixCapability.fallback,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.methodMetadata,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.Types.getGenericSupertype,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.hystrix.HystrixInvocationHandler.isReturnsSingle,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.plainListFallback,46,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.hystrix.HystrixCapabilityTest.target,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.RequestTemplate.methodMetadata,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.Types.getGenericSupertype,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.hystrix.HystrixInvocationHandler.isReturnsCompletable,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.plainString,55,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.template.UriUtils.encode,feign.hystrix.HystrixInvocationHandler.isReturnsCompletableFuture,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.hystrix.HystrixCapabilityTest.target,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.gson.GsonFactory.create,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.hystrix.HystrixInvocationHandler.isReturnsObservable,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.plainStringFallback,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxCompletableEmptyBody,46,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixCapability.fallback,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.hystrix.HystrixCapabilityTest.target,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.Util.checkState,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.UriUtils.isUnreserved,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.rxCompletableFailWithoutFallback,51,2,",feign.Types.getSupertype,feign.Types.checkNotPrimitive,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.template.UriUtils.isAlpha,feign.RequestTemplate.methodMetadata,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.addWarning,feign.Util.isNotBlank,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.Types.getGenericSupertype,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.hystrix.HystrixInvocationHandler.isReturnsCompletable,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.rxCompletableFallback,48,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.isDefault,feign.MethodMetadata.targetType,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixCapability.fallback,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.hystrix.HystrixCapabilityTest.target,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.DeclarativeContract.registerParameterAnnotation,feign.Util.checkState,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.hystrix.HystrixInvocationHandler.isReturnsCompletable,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.rxCompletableWithBody,46,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.MethodMetadata.targetType,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.hystrix.HystrixCapabilityTest.target,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.addWarning,feign.Util.isNotBlank,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.gson.GsonFactory.create,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.DefaultMethodHandler.bindTo,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.MethodMetadata.formParams,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.hystrix.HystrixInvocationHandler.isReturnsObservable,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.rxObservable,67,5,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.hystrix.HystrixBuilderTest.targetWithoutFallback,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.MethodMetadata.targetType,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixCapability.fallback,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.hystrix.HystrixCapabilityTest.target,feign.RequestTemplate.collectionFormat,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.template.UriUtils.isAlpha,feign.Util.isNotBlank,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.gson.GsonFactory.create,feign.Types.getGenericSupertype,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.method,feign.RequestTemplate.header,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DefaultMethodHandler.bindTo,feign.MethodMetadata.indexToExpander,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixCapabilityTest.targetWithoutFallback,feign.MethodMetadata.formParams,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixBuilderTest.targetWithoutFallback,feign.hystrix.HystrixCapabilityTest.targetWithoutFallback,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.rxObservableFallback,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxObservableInt,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxObservableIntFallback,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxObservableList,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxObservableListFall,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxObservableListFall_noFallback,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxSingle,67,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.hystrix.HystrixCapability.enrich,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.hystrix.HystrixCapability.fallback,feign.template.Literal.getValue,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.hystrix.HystrixCapabilityTest.target,feign.RequestTemplate.collectionFormat,feign.Types.getRawType,feign.MethodMetadata.addWarning,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.returnType,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.gson.GsonFactory.create,feign.Types.getGenericSupertype,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.RequestTemplate.method,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.template.UriUtils.isDigit,feign.RequestTemplate.header,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.indexToExpanderClass,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DefaultMethodHandler.bindTo,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.MethodMetadata.indexToExpander,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.hystrix.HystrixInvocationHandler.isReturnsSingle,feign.Feign.builder,feign.MethodMetadata.formParams,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.hystrix.HystrixInvocationHandler.isReturnsObservable,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.hystrix.HystrixBuilderTest.target",",feign.hystrix.HystrixCapabilityTest.target,feign.hystrix.HystrixInvocationHandler.invoke,feign.hystrix.HystrixBuilderTest.target"
feign,feign.hystrix.HystrixBuilderTest.rxSingleFallback,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxSingleInt,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxSingleIntFallback,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxSingleList,0,0,,
feign,feign.hystrix.HystrixBuilderTest.rxSingleListFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.completableFutureEmptyBody,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.completableFutureFailWithoutFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.completableFutureFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.completableFutureWithBody,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.defaultMethodReturningHystrixCommand,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.equalsHashCodeAndToStringWork,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.errorInFallbackHasExpectedBehavior,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.fallbacksApplyOnError,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.hystrixCommand,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.hystrixCommandFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.hystrixCommandInt,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.hystrixCommandIntFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.hystrixCommandList,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.hystrixCommandListFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.hystrixRuntimeExceptionPropagatesOnException,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.plainList,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.plainListFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.plainString,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.plainStringFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxCompletableEmptyBody,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxCompletableFailWithoutFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxCompletableFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxCompletableWithBody,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxObservable,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxObservableFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxObservableInt,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxObservableIntFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxObservableList,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxObservableListFall,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxObservableListFall_noFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxSingle,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxSingleFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxSingleInt,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxSingleIntFallback,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxSingleList,0,0,,
feign,feign.hystrix.HystrixCapabilityTest.rxSingleListFallback,0,0,,
feign,feign.hystrix.SetterFactoryTest.customSetter,21,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.hystrix.HystrixDelegatingContract.parseAndValidateMetadata,feign.template.UriUtils.isAbsolute,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.hystrix.HystrixFeign.builder,feign.hystrix.HystrixInvocationHandler.invoke,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.hystrix.HystrixInvocationHandler.toFallbackMethod,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.hystrix.HystrixInvocationHandler.toSetters,feign.hystrix.HystrixInvocationHandler.isReturnsHystrixCommand,feign.template.Template.encodeLiteral",",feign.hystrix.HystrixInvocationHandler.invoke,feign.ReflectiveFeign.newInstance,feign.hystrix.HystrixFeign.builder"
feign,feign.jackson.JacksonCodecTest.customDecoder,1,1,",feign.jackson.JacksonDecoder.decode",",feign.jackson.JacksonDecoder.decode"
feign,feign.jackson.JacksonCodecTest.customEncoder,8,2,",feign.jackson.JacksonEncoder.encode,feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.RequestTemplate.header,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.template.Template.parseTemplate",",feign.jackson.JacksonEncoder.encode,feign.assertj.RequestTemplateAssert.hasBody"
feign,feign.jackson.JacksonCodecTest.decodes,2,2,",feign.jackson.JacksonDecoder.decode,feign.Response.caseInsensitiveCopyOf",",feign.jackson.JacksonDecoder.decode,feign.Response.caseInsensitiveCopyOf"
feign,feign.jackson.JacksonCodecTest.decodesIterator,5,4,",feign.jackson.JacksonCodecTest.asList,feign.jackson.JacksonIteratorDecoder.actualIteratorTypeArgument,feign.jackson.JacksonIteratorDecoder.decode,feign.jackson.JacksonIteratorDecoder.create,feign.Request.create",",feign.jackson.JacksonCodecTest.asList,feign.jackson.JacksonIteratorDecoder.decode,feign.jackson.JacksonIteratorDecoder.create,feign.Request.create"
feign,feign.jackson.JacksonCodecTest.emptyBodyDecodesToNull,2,2,",feign.Request.create,feign.jackson.JacksonDecoder.decode",",feign.Request.create,feign.jackson.JacksonDecoder.decode"
feign,feign.jackson.JacksonCodecTest.emptyBodyDecodesToNullIterator,3,3,",feign.jackson.JacksonIteratorDecoder.decode,feign.jackson.JacksonIteratorDecoder.create,feign.Request.create",",feign.jackson.JacksonIteratorDecoder.decode,feign.jackson.JacksonIteratorDecoder.create,feign.Request.create"
feign,feign.jackson.JacksonCodecTest.encodesFormParams,7,1,",feign.jackson.JacksonEncoder.encode,feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.RequestTemplate.header,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.template.Template.parseTemplate",",feign.jackson.JacksonEncoder.encode"
feign,feign.jackson.JacksonCodecTest.encodesMapObjectNumericalValuesAsInteger,11,3,",feign.jackson.JacksonEncoder.encode,feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.template.Literal.create,feign.Util.isNotBlank,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.template.Template.parseTemplate",",feign.jackson.JacksonEncoder.encode,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody"
feign,feign.jackson.JacksonCodecTest.notFoundDecodesToNull,1,1,",feign.Request.create",",feign.Request.create"
feign,feign.jackson.JacksonCodecTest.notFoundDecodesToNullIterator,3,3,",feign.jackson.JacksonIteratorDecoder.create,feign.Request.create,feign.Response.builder",",feign.jackson.JacksonIteratorDecoder.create,feign.Request.create,feign.Response.builder"
feign,feign.jackson.JacksonCodecTest.nullBodyDecodesToNull,4,4,",feign.jackson.JacksonDecoder.decode,feign.jackson.JacksonIteratorDecoder.create,feign.Request.create,feign.Response.caseInsensitiveCopyOf",",feign.jackson.JacksonDecoder.decode,feign.jackson.JacksonIteratorDecoder.create,feign.Request.create,feign.Response.caseInsensitiveCopyOf"
feign,feign.jackson.JacksonCodecTest.nullBodyDecodesToNullIterator,0,0,,
feign,feign.jackson.JacksonIteratorTest.emptyBodyDecodesToEmptyIterator,6,1,",feign.jackson.JacksonIteratorTest.iterator,feign.Types.checkNotPrimitive,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Util.checkNotNull,feign.Response.builder",",feign.jackson.JacksonIteratorTest.iterator"
feign,feign.jackson.JacksonIteratorTest.expectExceptionOnNoElements,3,2,",feign.Util.ensureClosed,feign.jackson.JacksonIteratorTest.iterator,feign.Response.caseInsensitiveCopyOf",",feign.jackson.JacksonIteratorTest.iterator,feign.Util.ensureClosed"
feign,feign.jackson.JacksonIteratorTest.hasNextIsNotMandatory,2,1,",feign.jackson.JacksonIteratorTest.iterator,feign.Request.create",",feign.jackson.JacksonIteratorTest.iterator"
feign,feign.jackson.JacksonIteratorTest.malformedObjectThrowsDecodeException,1,1,",feign.jackson.JacksonIteratorTest.iterator",",feign.jackson.JacksonIteratorTest.iterator"
feign,feign.jackson.JacksonIteratorTest.responseIsClosedAfterIteration,3,2,",feign.jackson.JacksonIteratorTest.iterator,feign.Util.ensureClosed,feign.Response.close",",feign.jackson.JacksonIteratorTest.iterator,feign.Util.ensureClosed"
feign,feign.jackson.JacksonIteratorTest.responseIsClosedOnParseError,2,2,",feign.jackson.JacksonIteratorTest.iterator,feign.Response.caseInsensitiveCopyOf",",feign.jackson.JacksonIteratorTest.iterator,feign.Response.caseInsensitiveCopyOf"
feign,feign.jackson.JacksonIteratorTest.shouldDecodeObjects,1,1,",feign.jackson.JacksonIteratorTest.iterator",",feign.jackson.JacksonIteratorTest.iterator"
feign,feign.jackson.JacksonIteratorTest.shouldDecodePrimitiveArrays,2,1,",feign.jackson.JacksonIteratorTest.iterator,feign.Response.caseInsensitiveCopyOf",",feign.jackson.JacksonIteratorTest.iterator"
feign,feign.jackson.JacksonIteratorTest.shouldNotSkipElementsOnHasNext,1,1,",feign.jackson.JacksonIteratorTest.iterator",",feign.jackson.JacksonIteratorTest.iterator"
feign,feign.jackson.JacksonIteratorTest.unmodifiable,3,2,",feign.jackson.JacksonIteratorTest.iterator,feign.Util.ensureClosed,feign.Response.close",",feign.jackson.JacksonIteratorTest.iterator,feign.Util.ensureClosed"
feign,feign.jackson.jaxb.JacksonJaxbCodecTest.decodeTest,5,5,",feign.Types.checkNotPrimitive,feign.jackson.jaxb.JacksonJaxbJsonDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Response.builder",",feign.Types.checkNotPrimitive,feign.jackson.jaxb.JacksonJaxbJsonDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Response.builder"
feign,feign.jackson.jaxb.JacksonJaxbCodecTest.encodeTest,11,3,",feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.jackson.jaxb.JacksonJaxbJsonEncoder.encode,feign.template.Literal.create,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.RequestTemplate.bodyTemplate,feign.template.Template.parseTemplate",",feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.jackson.jaxb.JacksonJaxbJsonEncoder.encode"
feign,feign.jackson.jaxb.JacksonJaxbCodecTest.notFoundDecodesToNull,0,0,,
feign,feign.jaxb.JAXBCodecTest.decodeAnnotatedParameterizedTypes,13,2,",feign.jaxb.JAXBContextFactory.createMarshaller,feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.createUnmarshaller,feign.jaxb.JAXBEncoder.encode,feign.RequestTemplate.header,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.Response.body,feign.jaxb.JAXBDecoder.decode,feign.jaxb.JAXBContextFactory.setMarshallerProperties,feign.template.Template.parseTemplate",",feign.jaxb.JAXBDecoder.decode,feign.jaxb.JAXBEncoder.encode"
feign,feign.jaxb.JAXBCodecTest.decodesXml,4,2,",feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.createUnmarshaller,feign.Request.create,feign.jaxb.JAXBDecoder.decode",",feign.jaxb.JAXBDecoder.decode,feign.Request.create"
feign,feign.jaxb.JAXBCodecTest.doesntDecodeParameterizedTypes,7,4,",feign.FeignException.checkRequestNotNull,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.createUnmarshaller,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.jaxb.JAXBDecoder.decode,feign.Response.builder",",feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.jaxb.JAXBDecoder.decode,feign.Response.builder"
feign,feign.jaxb.JAXBCodecTest.doesntEncodeParameterizedTypes,1,1,",feign.jaxb.JAXBEncoder.encode",",feign.jaxb.JAXBEncoder.encode"
feign,feign.jaxb.JAXBCodecTest.encodesXml,15,4,",feign.jaxb.JAXBContextFactory.createMarshaller,feign.Types.checkNotPrimitive,feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBEncoder.encode,feign.template.Literal.create,feign.Util.isNotBlank,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.jaxb.JAXBContextFactory.setMarshallerProperties,feign.template.Template.parseTemplate",",feign.Types.checkNotPrimitive,feign.jaxb.JAXBEncoder.encode,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody"
feign,feign.jaxb.JAXBCodecTest.encodesXmlWithCustomJAXBEncoding,0,0,,
feign,feign.jaxb.JAXBCodecTest.encodesXmlWithCustomJAXBFormattedOutput,0,0,,
feign,feign.jaxb.JAXBCodecTest.encodesXmlWithCustomJAXBNoNamespaceSchemaLocation,0,0,,
feign,feign.jaxb.JAXBCodecTest.encodesXmlWithCustomJAXBSchemaLocation,0,0,,
feign,feign.jaxb.JAXBCodecTest.notFoundDecodesToNull,1,1,",feign.Util.checkState",",feign.Util.checkState"
feign,feign.jaxb.JAXBContextFactoryTest.buildsMarshallerWithFormattedOutputProperty,3,1,",feign.jaxb.JAXBContextFactory.createMarshaller,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.setMarshallerProperties",",feign.jaxb.JAXBContextFactory.createMarshaller"
feign,feign.jaxb.JAXBContextFactoryTest.buildsMarshallerWithFragmentProperty,3,1,",feign.jaxb.JAXBContextFactory.createMarshaller,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.setMarshallerProperties",",feign.jaxb.JAXBContextFactory.createMarshaller"
feign,feign.jaxb.JAXBContextFactoryTest.buildsMarshallerWithJAXBEncodingProperty,3,1,",feign.jaxb.JAXBContextFactory.createMarshaller,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.setMarshallerProperties",",feign.jaxb.JAXBContextFactory.createMarshaller"
feign,feign.jaxb.JAXBContextFactoryTest.buildsMarshallerWithNoNamespaceSchemaLocationProperty,3,1,",feign.jaxb.JAXBContextFactory.createMarshaller,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.setMarshallerProperties",",feign.jaxb.JAXBContextFactory.createMarshaller"
feign,feign.jaxb.JAXBContextFactoryTest.buildsMarshallerWithSchemaLocationProperty,3,1,",feign.jaxb.JAXBContextFactory.createMarshaller,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.setMarshallerProperties",",feign.jaxb.JAXBContextFactory.createMarshaller"
feign,feign.jaxb.JAXBContextFactoryTest.testPreloadCache,2,1,",feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.preloadContextCache",",feign.jaxb.JAXBContextFactory.preloadContextCache"
feign,feign.jaxrs.JAXRSContractTest.bodyParamIsGeneric,8,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.configKey,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnClass,feign.DeclarativeContract.processAnnotationsOnParameter,feign.MethodMetadata.isAlreadyProcessed,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.Types.resolve,feign.MethodMetadata.warnings",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.classPathWithTrailingSlashParsesCorrectly,22,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.Template.encodeSlash,feign.template.UriTemplate.append,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.classWithRootPathParsesCorrectly,17,2,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriTemplate.append,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.consumesAddsContentTypeHeader,18,3,",feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.Template.parseTemplate,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.jaxrs.JAXRSContract.handleConsumesAnnotation,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.Util.removeValues,feign.RequestTemplate.header,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.jaxrs.JAXRSContract.handleProducesAnnotation,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.HeaderTemplate.create,feign.Types.resolve,feign.template.Template.encodeLiteral",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders"
feign,feign.jaxrs.JAXRSContractTest.consumesEmpty,13,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.method,feign.template.Template.parseFragment,feign.Util.checkState,feign.DeclarativeContract.processAnnotationOnClass,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Util.removeValues,feign.jaxrs.JAXRSContract.handleProducesAnnotation,feign.RequestTemplate.header,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.HeaderTemplate.create,feign.RequestTemplate.appendHeader,feign.jaxrs.JAXRSContract.handleConsumesAnnotation,feign.template.Template.parseTemplate",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.consumesMultipleAddsContentTypeHeader,16,3,",feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.parseFragment,feign.Feign.configKey,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.removeValues,feign.assertj.RequestTemplateAssert.hasHeaders,feign.jaxrs.JAXRSContract.handleProducesAnnotation,feign.RequestTemplate.headers,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.HeaderTemplate.create,feign.RequestTemplate.appendHeader,feign.MethodMetadata.warnings,feign.jaxrs.JAXRSContract.handleConsumesAnnotation,feign.template.Template.parseTemplate",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders"
feign,feign.jaxrs.JAXRSContractTest.consumesNada,14,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.parseFragment,feign.Util.checkState,feign.DeclarativeContract.processAnnotationOnClass,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.template.Literal.create,feign.Util.removeValues,feign.jaxrs.JAXRSContract.handleProducesAnnotation,feign.RequestTemplate.header,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.HeaderTemplate.create,feign.RequestTemplate.appendHeader,feign.jaxrs.JAXRSContract.handleConsumesAnnotation,feign.template.Template.parseTemplate",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.customMethodWithoutPath,10,3,",feign.assertj.RequestTemplateAssert.hasMethod,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.Feign.configKey,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.addWarning,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.warnings,feign.RequestTemplate.path",",feign.assertj.RequestTemplateAssert.hasMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.emptyFormParam,8,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.processAnnotationOnClass,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.method,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.warnings",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.emptyHeaderParam,7,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.checkState,feign.DeclarativeContract.processAnnotationOnClass,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Feign.configKey,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.warnings",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.emptyPathOnMethod,13,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.Util.checkState,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.emptyPathOnType,8,3,",feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.Feign.configKey,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.FeignAssertions.assertThat,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.warnings,feign.MethodMetadata.isIgnored,feign.RequestTemplate.path",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.emptyPathOnTypeSpecific,21,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.assertj.FeignAssertions.assertThat,feign.MethodMetadata.returnType,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.UriTemplate.create,feign.Feign.configKey,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.emptyPathParam,19,1,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.uri,feign.template.UriTemplate.append,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Util.checkState,feign.RequestTemplate.method,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.template.Literal.create,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.emptyQueryParam,10,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.processAnnotationOnClass,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.method,feign.Types.getRawType,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.warnings",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.formParamsDoesNotSetBodyType,9,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.configKey,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnClass,feign.DeclarativeContract.processAnnotationsOnParameter,feign.MethodMetadata.isAlreadyProcessed,feign.Types.resolve,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.warnings",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.formParamsParseIntoIndexToName,13,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.Types.checkNotPrimitive,feign.Feign.configKey,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.MethodMetadata.addWarning,feign.MethodMetadata.configKey,feign.MethodMetadata.isAlreadyProcessed,feign.Types.resolve,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.warnings",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.headerParamsParseIntoIndexToName,17,3,",feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.Template.parseTemplate,feign.MethodMetadata.addWarning,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.Util.checkState,feign.RequestTemplate.header,feign.MethodMetadata.warnings,feign.jaxrs.JAXRSContract.addTemplatedParam,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.HeaderTemplate.create",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders"
feign,feign.jaxrs.JAXRSContractTest.httpMethods,11,3,",feign.assertj.RequestTemplateAssert.hasMethod,feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.configKey,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.method,feign.MethodMetadata.addWarning,feign.assertj.FeignAssertions.assertThat,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.headerMapIndex,feign.Types.resolve,feign.MethodMetadata.warnings",",feign.assertj.RequestTemplateAssert.hasMethod,feign.assertj.FeignAssertions.assertThat,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.methodPathWithoutLeadingSlashParsesCorrectly,20,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAlpha,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriTemplate.append,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.method,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.parsePathMethod,22,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAlpha,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriTemplate.append,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.method,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.pathAndQueryParams,27,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.MethodMetadata.isAlreadyProcessed,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.method,feign.MethodMetadata.warnings,feign.jaxrs.JAXRSContract.addTemplatedParam,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Util.emptyToNull,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasQueries"
feign,feign.jaxrs.JAXRSContractTest.pathParamWithSpaces,28,2,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.template.UriUtils.isAlpha,feign.RequestTemplate.uri,feign.template.Template.encodeSlash,feign.template.UriTemplate.append,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.RequestTemplate.method,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.pathsWithSomeOtherSlashesParseCorrectly,21,2,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAlpha,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriTemplate.append,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.pathsWithSomeSlashesParseCorrectly,20,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriTemplate.append,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Types.resolve,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.pathsWithoutSlashesParseCorrectly,21,2,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.UriUtils.isAlpha,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriTemplate.append,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.producesAddsAcceptHeader,16,3,",feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.Template.parseTemplate,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.jaxrs.JAXRSContract.handleConsumesAnnotation,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.Util.removeValues,feign.RequestTemplate.header,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.jaxrs.JAXRSContract.handleProducesAnnotation,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.HeaderTemplate.create,feign.Types.resolve",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders"
feign,feign.jaxrs.JAXRSContractTest.producesAndConsumesOnClassAddsHeader,18,3,",feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.Template.parseTemplate,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.jaxrs.JAXRSContract.handleConsumesAnnotation,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.Util.removeValues,feign.RequestTemplate.headers,feign.RequestTemplate.header,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.jaxrs.JAXRSContract.handleProducesAnnotation,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.HeaderTemplate.create",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasHeaders"
feign,feign.jaxrs.JAXRSContractTest.producesEmpty,16,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.processAnnotationOnClass,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Util.emptyToNull,feign.Util.removeValues,feign.jaxrs.JAXRSContract.handleProducesAnnotation,feign.RequestTemplate.method,feign.template.Literal.create,feign.RequestTemplate.header,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.HeaderTemplate.create,feign.RequestTemplate.appendHeader,feign.jaxrs.JAXRSContract.handleConsumesAnnotation,feign.template.Template.parseTemplate",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.producesMultipleAddsAcceptHeader,21,3,",feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.template.Template.parseTemplate,feign.Util.isNotBlank,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.jaxrs.JAXRSContract.handleConsumesAnnotation,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.RequestTemplate.headers,feign.Util.removeValues,feign.RequestTemplate.method,feign.RequestTemplate.header,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.template.Literal.create,feign.jaxrs.JAXRSContract.handleProducesAnnotation,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral",",feign.MethodMetadata.template,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.RequestTemplateAssert.hasHeaders,feign.assertj.FeignAssertions.assertThat"
feign,feign.jaxrs.JAXRSContractTest.producesNada,15,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.processAnnotationOnClass,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Util.removeValues,feign.jaxrs.JAXRSContract.handleProducesAnnotation,feign.RequestTemplate.header,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.RequestTemplate.appendHeader,feign.jaxrs.JAXRSContract.handleConsumesAnnotation,feign.template.Template.parseTemplate",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.producesWithHeaderParamContainAllHeaders,41,4,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.assertj.RequestTemplateAssert.hasHeaders,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.template.UriUtils.isAlpha,feign.Util.isNotBlank,feign.template.HeaderTemplate.append,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.Template.encodeLiteral,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.template.QueryTemplate.append,feign.Util.removeValues,feign.RequestTemplate.headers,feign.template.Expressions.stripBraces,feign.RequestTemplate.method,feign.RequestTemplate.header,feign.MethodMetadata.warnings,feign.jaxrs.JAXRSContract.addTemplatedParam,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.jaxrs.JAXRSContract.handleProducesAnnotation,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.RequestTemplateAssert.hasHeaders,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasQueries"
feign,feign.jaxrs.JAXRSContractTest.queryParamsInPathExtract,33,5,",feign.assertj.RequestTemplateAssert.hasPath,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RequestTemplateAssert.hasQueries,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.template.UriUtils.isAlpha,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.RequestTemplate.query,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.method,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.Types.resolve,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues",",feign.assertj.RequestTemplateAssert.hasPath,feign.MethodMetadata.template,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasQueries"
feign,feign.jaxrs.JAXRSContractTest.regexPathOnMethodOrType,27,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.MethodMetadata.indexToName,feign.template.Literal.getValue,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.assertj.FeignAssertions.assertThat,feign.RequestTemplate.uri,feign.template.UriTemplate.append,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.assertj.RequestTemplateAssert.hasUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.Util.checkState,feign.RequestTemplate.method,feign.MethodMetadata.template,feign.MethodMetadata.configKey,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Util.emptyToNull,feign.MethodMetadata.formParams,feign.Types.resolve,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasUrl"
feign,feign.jaxrs.JAXRSContractTest.tooManyBodies,11,1,",feign.DeclarativeContract.processAnnotationOnMethod,feign.Feign.configKey,feign.Util.checkState,feign.DeclarativeContract.processAnnotationOnClass,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.bodyType,feign.MethodMetadata.isAlreadyProcessed,feign.Types.resolve,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.warnings",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs.JAXRSContractTest.withPathAndURIParams,18,1,",feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.processAnnotationsOnParameter,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.Util.emptyToNull,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata"
feign,feign.jaxrs2.JAXRS2ContractTest.bodyParamIsGeneric,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.classPathWithTrailingSlashParsesCorrectly,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.classWithRootPathParsesCorrectly,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.consumesAddsContentTypeHeader,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.consumesEmpty,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.consumesMultipleAddsContentTypeHeader,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.consumesNada,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.customMethodWithoutPath,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.emptyFormParam,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.emptyHeaderParam,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.emptyPathOnMethod,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.emptyPathOnType,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.emptyPathOnTypeSpecific,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.emptyPathParam,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.emptyQueryParam,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.formParamsDoesNotSetBodyType,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.formParamsParseIntoIndexToName,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.headerParamsParseIntoIndexToName,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.httpMethods,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.injectJaxrsInternals,14,3,",feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.parseFragment,feign.Feign.configKey,feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnClass,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriTemplate.create,feign.assertj.FeignAssertions.assertThat,feign.MethodMetadata.ignoreParamater,feign.Types.resolve,feign.MethodMetadata.targetType,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.MethodMetadata.warnings,feign.RequestTemplate.uri,feign.assertj.RequestTemplateAssert.noRequestBody,feign.template.Template.parseTemplate",",feign.jaxrs.JAXRSContractTest.parseAndValidateMetadata,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.noRequestBody"
feign,feign.jaxrs2.JAXRS2ContractTest.methodPathWithoutLeadingSlashParsesCorrectly,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.parsePathMethod,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.pathAndQueryParams,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.pathParamWithSpaces,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.pathsWithSomeOtherSlashesParseCorrectly,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.pathsWithSomeSlashesParseCorrectly,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.pathsWithoutSlashesParseCorrectly,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.producesAddsAcceptHeader,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.producesAndConsumesOnClassAddsHeader,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.producesEmpty,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.producesMultipleAddsAcceptHeader,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.producesNada,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.producesWithHeaderParamContainAllHeaders,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.queryParamsInPathExtract,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.regexPathOnMethodOrType,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.tooManyBodies,0,0,,
feign,feign.jaxrs2.JAXRS2ContractTest.withPathAndURIParams,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.noResponseBodyForPatch,55,1,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.MethodMetadata.bodyIndex,feign.DeclarativeContract.processAnnotationOnClass,feign.jaxrs2.JAXRSClient.toMultivaluedMap,feign.RequestTemplate.queries,feign.jaxrs2.JAXRSClient.execute,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.jaxrs2.JAXRSClient.createRequestEntity,feign.RequestTemplate.extractQueryTemplates,feign.template.Literal.getValue,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.addWarning,feign.Types.getRawType,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.jaxrs2.JAXRSClientTest.noResponseBodyForPatch,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Request.body,feign.template.UriTemplate.create,feign.RequestTemplate.method,feign.RequestTemplate.headers,feign.Util.checkState,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.jaxrs2.JAXRSClientTest.noResponseBodyForPatch"
feign,feign.jaxrs2.JAXRSClientTest.noResponseBodyForPost,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.noResponseBodyForPut,57,1,",feign.jaxrs2.JAXRSClientTest.noResponseBodyForPut,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.jaxrs2.JAXRSClient.execute,feign.Util.isDefault,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.template.Expression.getValue,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.template.Expressions.stripBraces,feign.Util.checkState,feign.DeclarativeContract.registerParameterAnnotation,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.template.Literal.create,feign.Feign.builder,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.RequestTemplate.resolve,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.Request.create,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.jaxrs2.JAXRSClientTest.noResponseBodyForPut"
feign,feign.jaxrs2.JAXRSClientTest.parsesErrorResponse,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.parsesErrorResponseBody,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.parsesRequestAndResponse,81,5,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.jaxrs2.JAXRSClient.createRequestEntity,feign.template.Literal.getValue,feign.Util.isBlank,feign.Response.reason,feign.RequestTemplate.from,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.assertj.RecordedRequestAssert.hasBody,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.RequestTemplate.splitQueryParameter,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.jaxrs2.JAXRSClient.mediaType,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.jaxrs2.JAXRSClient.toMultivaluedMap,feign.Util.copy,feign.jaxrs2.JAXRSClient.execute,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.jaxrs2.JAXRSClient.integerHeader,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.jaxrs2.JAXRSClient.toMap,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.assertj.RecordedRequestAssert.hasPath,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs2.JAXRSClient.locale,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.assertj.RecordedRequestAssert.hasPath,feign.assertj.MockWebServerAssertions.assertThat,feign.ReflectiveFeign.newInstance,feign.Response.reason,feign.assertj.RecordedRequestAssert.hasBody,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.SynchronousMethodHandler.invoke,feign.Util.checkNotNull"
feign,feign.jaxrs2.JAXRSClientTest.parsesResponseMissingLength,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.parsesUnauthorizedResponseBody,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.postWithSpacesInPath,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.reasonPhraseIsOptional,85,4,",feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.jaxrs2.JAXRSClient.createRequestEntity,feign.template.Literal.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.RequestTemplate.splitQueryParameter,feign.RequestTemplate.collectionFormat,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.jaxrs2.JAXRSClient.mediaType,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.Util.checkArgument,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.jaxrs2.JAXRSClient.toMultivaluedMap,feign.Util.copy,feign.jaxrs2.JAXRSClient.execute,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.jaxrs2.JAXRSClient.integerHeader,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.jaxrs2.JAXRSClient.toMap,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.DeclarativeContract.registerParameterAnnotation,feign.jaxrs2.JAXRSClient.encoding,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.jaxrs2.JAXRSClient.locale,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.template.HeaderTemplate.create,feign.RequestTemplate.hasRequestVariable",",feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.SynchronousMethodHandler.invoke"
feign,feign.jaxrs2.JAXRSClientTest.safeRebuffering,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.safeRebuffering_noContent,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.testAlternativeCollectionFormat,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.testConsumesMultipleWithContentTypeHeaderAndBody,52,7,",feign.template.Template.toString,feign.RequestTemplate.body,feign.MethodMetadata.bodyIndex,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.isEncoded,feign.Util.copy,feign.jaxrs2.JAXRSClient.toMultivaluedMap,feign.RequestTemplate.queries,feign.jaxrs2.JAXRSClient.execute,feign.SynchronousMethodHandler.invoke,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.jaxrs2.JAXRSClient.integerHeader,feign.jaxrs2.JAXRSClient.createRequestEntity,feign.Util.toByteArray,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.jaxrs.JAXRSContract.handleConsumesAnnotation,feign.SynchronousMethodHandler.targetRequest,feign.template.HeaderTemplate.expand,feign.assertj.RecordedRequestAssert.hasHeaders,feign.assertj.MockWebServerAssertions.assertThat,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.RequestTemplate.headers,feign.Util.removeValues,feign.Feign.configKey,feign.template.UriTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.RequestTemplate.header,feign.jaxrs2.JAXRSClient.toMap,feign.jaxrs.JAXRSContract.registerParamAnnotations,feign.jaxrs2.JAXRSClient.mediaType,feign.MethodMetadata.warnings,feign.Request.charset,feign.jaxrs.JAXRSContract.addTemplatedParam,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.RequestTemplate.resolve,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.Template.expand",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasHeaders,feign.Util.emptyToNull,feign.DeclarativeContract.registerClassAnnotation,feign.ReflectiveFeign.newInstance,feign.jaxrs.JAXRSContract.registerParamAnnotations,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.SynchronousMethodHandler.invoke,feign.Util.toString,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.jaxrs2.JAXRSClientTest.testContentTypeDefaultsToRequestCharset,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.testContentTypeWithCharset,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.testContentTypeWithoutCharset,68,8,",feign.Types.checkNotPrimitive,feign.template.Template.toString,feign.MethodMetadata.bodyIndex,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.jaxrs2.JAXRSClient.toMultivaluedMap,feign.Util.copy,feign.RequestTemplate.queries,feign.jaxrs2.JAXRSClient.execute,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.jaxrs2.JAXRSClient.integerHeader,feign.jaxrs2.JAXRSClient.createRequestEntity,feign.MethodMetadata.indexToName,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.assertj.RecordedRequestAssert.hasMethod,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.queryMapIndex,feign.template.Template.expand,feign.Util.checkState,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.assertj.RecordedRequestAssert.hasHeaders,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.template,feign.Request.body,feign.RequestTemplate.header,feign.jaxrs2.JAXRSClient.toMap,feign.RequestTemplate.decodeSlash,feign.RequestTemplate.method,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.RequestTemplate.resolve,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.Request.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.MethodMetadata.headerMapIndex,feign.Response.builder",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasHeaders,feign.ReflectiveFeign.newInstance,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.SynchronousMethodHandler.invoke,feign.Util.toString,feign.Util.checkNotNull,feign.assertj.RecordedRequestAssert.hasMethod"
feign,feign.jaxrs2.JAXRSClientTest.testContentTypeWithoutCharset2,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.testDefaultCollectionFormat,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.testHeadersWithNotEmptyParams,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.testHeadersWithNullParams,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.testPatch,56,1,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.jaxrs2.JAXRSClient.toMultivaluedMap,feign.MethodMetadata.bodyType,feign.jaxrs2.JAXRSClient.execute,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.jaxrs2.JAXRSClient.createRequestEntity,feign.RequestTemplate.extractQueryTemplates,feign.template.Literal.getValue,feign.RequestTemplate.splitQueryParameter,feign.Types.getRawType,feign.RequestTemplate.methodMetadata,feign.template.Expression.getValue,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.jaxrs2.JAXRSClientTest.testPatch,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.MethodMetadata.configKey,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.jaxrs2.JAXRSClient.mediaType,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.jaxrs2.JAXRSClientTest.newBuilder,feign.RequestTemplate.resolve,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.jaxrs2.JAXRSClientTest.testPatch"
feign,feign.jaxrs2.JAXRSClientTest.testResponseLength,0,0,,
feign,feign.jaxrs2.JAXRSClientTest.testVeryLongResponseNullLength,0,0,,
feign,feign.metrics4.Metrics4CapabilityTest.addMetricsCapability,107,9,",feign.metrics4.Metrics4Capability.enrich,feign.Types.checkNotPrimitive,feign.RequestTemplate.body,feign.metrics4.MetricSuppliers.histograms,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.codec.StringDecoder.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.MethodMetadata.queryMapIndex,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Response.status,feign.RequestTemplate.header,feign.metrics4.CountingInputStream.read,feign.Util.emptyToNull,feign.metrics4.FeignMetricName.metricName,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.metrics4.MeteredBody.asInputStream,feign.mock.MockClient.executeAny,feign.metrics4.MeteredBody.count,feign.mock.MockClient.add,feign.MethodMetadata.bodyType,feign.RequestTemplate.queries,feign.mock.RequestKey.equalsExtended,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.collectionFormat,feign.MethodMetadata.returnType,feign.Util.toString,feign.AsyncResponseHandler.decode,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.HeaderTemplate.getName,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.Util.checkArgument,feign.DeclarativeContract.parseAndValidateMetadata,feign.mock.RequestKey.builder,feign.AsyncResponseHandler.isVoidType,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.mock.MockClient.execute,feign.Response.builder,feign.mock.MockClient.getResponseBuilder,feign.metrics4.FeignMetricName.extractHost,feign.mock.RequestKey.buildUrl,feign.Util.isDefault,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.metrics4.MetricSuppliers.timers,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.Response.request,feign.RequestTemplate.url,feign.RequestTemplate.headers,feign.metrics4.MeteredBody.asReader,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.mock.MockClient.ok,feign.mock.MockTarget.url,feign.DeclarativeContract.processAnnotationsOnParameter,feign.mock.RequestHeaders.of,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.MethodMetadata.addWarning,feign.metrics4.MeteredClient.execute,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.metrics4.MeteredInvocationHandleFactory.create,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.mock.RequestKey.hashCode,feign.RequestTemplate.feignTarget,feign.RequestTemplate.decodeSlash,feign.Request.charset,feign.DeclarativeContract.processAnnotationOnMethod,feign.metrics4.MeteredEncoder.encode,feign.mock.MockTarget.apply,feign.metrics4.MeteredDecoder.decode,feign.MethodMetadata.formParams,feign.Request.create,feign.template.HeaderTemplate.create",",feign.mock.MockClient.ok,feign.metrics4.Metrics4Capability.enrich,feign.mock.MockTarget.url,feign.metrics4.FeignMetricName.metricName,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.Util.checkNotNull,feign.metrics4.MetricSuppliers.timers"
feign,feign.metrics5.Metrics5CapabilityTest.addMetricsCapability,96,8,",feign.Types.checkNotPrimitive,feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.metrics5.MeteredClient.execute,feign.Util.isBlank,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.codec.StringDecoder.decode,feign.mock.RequestKey.equals,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.metrics5.CountingInputStream.read,feign.metrics5.MeteredDecoder.decode,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.metrics5.MeteredBody.asInputStream,feign.metrics5.MeteredBody.count,feign.Types.resolve,feign.mock.MockClient.executeAny,feign.mock.MockClient.add,feign.RequestTemplate.queries,feign.mock.RequestKey.equalsExtended,feign.SynchronousMethodHandler.executeAndDecode,feign.MethodMetadata.returnType,feign.Util.toString,feign.AsyncResponseHandler.decode,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.HeaderTemplate.getName,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.mock.RequestKey.builder,feign.AsyncResponseHandler.isVoidType,feign.template.UriUtils.isUnreserved,feign.metrics5.MetricSuppliers.timers,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.mock.MockClient.execute,feign.Response.builder,feign.mock.MockClient.getResponseBuilder,feign.mock.RequestKey.buildUrl,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.metrics5.Metrics5Capability.enrich,feign.template.UriUtils.isAbsolute,feign.metrics5.MeteredBody.asReader,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.url,feign.RequestTemplate.headers,feign.metrics5.FeignMetricName.metricName,feign.Util.ensureClosed,feign.metrics5.MetricSuppliers.histograms,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.metrics5.MeteredEncoder.encode,feign.mock.MockClient.ok,feign.mock.MockTarget.url,feign.DeclarativeContract.processAnnotationsOnParameter,feign.mock.RequestHeaders.of,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.MethodMetadata.addWarning,feign.metrics5.FeignMetricName.extractHost,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.DeclarativeContract.registerParameterAnnotation,feign.mock.RequestKey.hashCode,feign.RequestTemplate.decodeSlash,feign.Request.charset,feign.DeclarativeContract.processAnnotationOnMethod,feign.mock.MockTarget.apply,feign.Request.create,feign.metrics5.MeteredInvocationHandleFactory.create,feign.template.HeaderTemplate.create",",feign.mock.MockClient.ok,feign.mock.MockTarget.url,feign.metrics5.Metrics5Capability.enrich,feign.metrics5.MetricSuppliers.timers,feign.metrics5.FeignMetricName.metricName,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.micrometer.MicrometerCapabilityTest.addMetricsCapability,60,5,",feign.micrometer.FeignMetricName.tag,feign.template.Template.toString,feign.RequestTemplate.body,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.micrometer.MeteredInvocationHandleFactory.create,feign.mock.RequestKey.buildUrl,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.methodMetadata,feign.micrometer.MeteredBody.asReader,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.micrometer.CountingInputStream.read,feign.micrometer.MeteredBody.asInputStream,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.RequestTemplate.request,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.micrometer.MeteredClient.execute,feign.mock.RequestKey.create,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.micrometer.MeteredEncoder.encode,feign.RequestTemplate.headers,feign.Feign.configKey,feign.AsyncResponseHandler.handleResponse,feign.micrometer.MeteredBody.count,feign.RequestTemplate.method,feign.micrometer.MeteredDecoder.decode,feign.RequestTemplate.header,feign.DeclarativeContract.registerClassAnnotation,feign.Util.ensureClosed,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.mock.MockClient.ok,feign.mock.MockTarget.url,feign.micrometer.FeignMetricName.extractHost,feign.DeclarativeContract.processAnnotationsOnParameter,feign.mock.RequestKey.builder,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.mock.MockTarget.apply,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny",",feign.mock.MockClient.ok,feign.micrometer.FeignMetricName.tag,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.micrometer.MicrometerCapabilityTest.clientPropagatesUncheckedException,47,5,",feign.micrometer.FeignMetricName.tag,feign.template.Template.toString,feign.RequestTemplate.body,feign.DeclarativeContract.processAnnotationOnClass,feign.micrometer.MeteredInvocationHandleFactory.create,feign.RequestTemplate.queries,feign.micrometer.FeignMetricName.name,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.micrometer.MeteredClient.execute,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.micrometer.MeteredEncoder.encode,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.micrometer.FeignMetricName.extractHost,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.mock.MockTarget.apply,feign.template.Literal.create,feign.template.HeaderTemplate.from,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.micrometer.FeignMetricName.tag,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.micrometer.FeignMetricName.name,feign.SynchronousMethodHandler.invoke"
feign,feign.micrometer.MicrometerCapabilityTest.decoderPropagatesUncheckedException,86,7,",feign.Types.checkNotPrimitive,feign.micrometer.MicrometerCapability.enrich,feign.RequestTemplate.body,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.mock.RequestKey.equals,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.RequestTemplate.header,feign.FeignException.checkRequestNotNull,feign.Util.emptyToNull,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.mock.MockClient.executeAny,feign.mock.MockClient.add,feign.RequestTemplate.queries,feign.micrometer.FeignMetricName.name,feign.mock.RequestKey.equalsExtended,feign.SynchronousMethodHandler.executeAndDecode,feign.MethodMetadata.returnType,feign.AsyncResponseHandler.decode,feign.micrometer.MeteredClient.execute,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.micrometer.FeignMetricName.extractHost,feign.mock.RequestKey.builder,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.mock.MockClient.execute,feign.Response.builder,feign.micrometer.FeignMetricName.tag,feign.mock.MockClient.getResponseBuilder,feign.MethodMetadata.urlIndex,feign.mock.RequestKey.buildUrl,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.appendHeader,feign.RequestTemplate.url,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.mock.MockClient.ok,feign.mock.MockTarget.url,feign.DeclarativeContract.processAnnotationsOnParameter,feign.mock.RequestHeaders.of,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.micrometer.MeteredInvocationHandleFactory.create,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.micrometer.MeteredEncoder.encode,feign.DeclarativeContract.registerParameterAnnotation,feign.micrometer.MeteredDecoder.decode,feign.mock.RequestKey.hashCode,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.mock.MockTarget.apply,feign.Request.create,feign.template.HeaderTemplate.create",",feign.mock.MockClient.ok,feign.mock.MockTarget.url,feign.micrometer.FeignMetricName.tag,feign.micrometer.MicrometerCapability.enrich,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.micrometer.FeignMetricName.name,feign.SynchronousMethodHandler.invoke"
feign,feign.mock.MockClientSequentialTest.sequentialRequests,80,1,",feign.template.Expression.matches,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.isSubDelimiter,feign.FeignException.clientErrorStatus,feign.template.UriUtils.isAlpha,feign.Response.reason,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.template.QueryTemplate.expand,feign.mock.RequestKey.equals,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.FeignException.checkRequestNotNull,feign.mock.MockClient.executeSequential,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.mock.RequestKey.toString,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.mock.RequestKey.equalsExtended,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.FeignException.errorStatus,feign.RequestTemplate.splitQueryParameter,feign.AsyncResponseHandler.decode,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.template.HeaderTemplate.getName,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.resolve,feign.mock.MockClient.execute,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.Util.copy,feign.mock.RequestKey.buildUrl,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Request.httpMethod,feign.RequestTemplate.appendHeader,feign.Response.request,feign.RequestTemplate.query,feign.mock.RequestHeaders.toString,feign.RequestTemplate.url,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.mock.MockTarget.url,feign.mock.RequestHeaders.of,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.Request.headers,feign.gson.GsonDecoder.decode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.mock.RequestHeaders.equals,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.FeignException.serverErrorStatus,feign.mock.MockTarget.apply,feign.Request.create,feign.template.UriUtils.pctEncode",",feign.SynchronousMethodHandler.invoke"
feign,feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess,39,2,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.mock.RequestKey.buildUrl,feign.RequestTemplate.queries,feign.gson.GsonDecoder.decode,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.mock.RequestHeaders.equals,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.mock.MockClient.executeSequential,feign.AsyncResponseHandler.isVoidType,feign.mock.MockTarget.apply,feign.mock.MockClient.verifyStatus,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute",",feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyStatus"
feign,feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany,69,1,",feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.Request.headers,feign.Util.copy,feign.mock.RequestKey.toString,feign.mock.RequestKey.buildUrl,feign.RequestTemplate.queries,feign.gson.GsonDecoder.decode,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.FeignException.clientErrorStatus,feign.FeignException.errorStatus,feign.RequestTemplate.splitQueryParameter,feign.mock.RequestHeaders.equals,feign.template.UriUtils.isAlpha,feign.template.Expression.getValue,feign.RequestTemplate.queryLine,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.RequestTemplate.path,feign.mock.RequestKey.equals,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.template.UriUtils.encodeInternal,feign.mock.RequestHeaders.toString,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.template.UriUtils.isGenericDelimiter,feign.Util.checkNotNull,feign.template.Expression.getName,feign.FeignException.serverErrorStatus,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.mock.MockClient.executeSequential,feign.template.UriUtils.isUnreserved,feign.template.Literal.create,feign.mock.RequestHeaders.of,feign.mock.MockTarget.apply,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.template.UriUtils.pctEncode,feign.template.QueryTemplate.getValues",",feign.SynchronousMethodHandler.invoke"
feign,feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder,0,0,,
feign,feign.mock.MockClientTest.hitMock,35,1,",feign.mock.MockClient.getResponseBuilder,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.mock.RequestKey.buildUrl,feign.RequestTemplate.queries,feign.gson.GsonDecoder.decode,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.mock.RequestKey.equals,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.UriUtils.isUnreserved,feign.mock.MockTarget.apply,feign.RequestTemplate.resolve,feign.Request.create,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny",",feign.SynchronousMethodHandler.invoke"
feign,feign.mock.MockClientTest.missHttpMethod,36,1,",feign.mock.MockClient.getResponseBuilder,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.Request.headers,feign.mock.RequestKey.buildUrl,feign.RequestTemplate.queries,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.FeignException.clientErrorStatus,feign.FeignException.errorStatus,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.mock.MockTarget.apply,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny,feign.Response.builder",",feign.SynchronousMethodHandler.invoke"
feign,feign.mock.MockClientTest.missMock,38,1,",feign.mock.MockClient.getResponseBuilder,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.mock.RequestKey.buildUrl,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.Response.body,feign.template.UriUtils.encode,feign.mock.RequestKey.equalsExtended,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.FeignException.clientErrorStatus,feign.template.UriUtils.isAbsolute,feign.FeignException.errorStatus,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.mock.RequestKey.equals,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.FeignException.checkRequestNotNull,feign.mock.MockTarget.apply,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny",",feign.SynchronousMethodHandler.invoke"
feign,feign.mock.MockClientTest.paramsEncoding,46,1,",feign.mock.MockClient.getResponseBuilder,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.mock.RequestKey.buildUrl,feign.RequestTemplate.queries,feign.gson.GsonDecoder.decode,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.Expression.getValue,feign.RequestTemplate.queryLine,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.template.QueryTemplate.expand,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.mock.RequestKey.equals,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.template.QueryTemplate.queryString,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.mock.MockTarget.apply,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny,feign.template.QueryTemplate.getValues",",feign.SynchronousMethodHandler.invoke"
feign,feign.mock.MockClientTest.resetRequests,47,3,",feign.mock.MockClient.getResponseBuilder,feign.RequestTemplate.body,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.mock.RequestKey.buildUrl,feign.gson.GsonDecoder.decode,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.mock.RequestKey.equals,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.RequestTemplate.url,feign.mock.MockClient.verifyOne,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Response.status,feign.AsyncResponseHandler.handleResponse,feign.mock.RequestKey.hashCode,feign.RequestTemplate.header,feign.mock.MockClient.verifyNever,feign.Request.charset,feign.template.Expression.getName,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.BodyTemplate.expand,feign.template.UriUtils.isUnreserved,feign.mock.MockTarget.apply,feign.RequestTemplate.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny",",feign.mock.MockClient.verifyNever,feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyOne"
feign,feign.mock.MockClientTest.verifyInvocation,38,2,",feign.template.Template.toString,feign.RequestTemplate.body,feign.template.UriUtils.isEncoded,feign.mock.RequestKey.buildUrl,feign.gson.GsonDecoder.decode,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.mock.RequestKey.hashCode,feign.RequestTemplate.header,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.BodyTemplate.expand,feign.mock.MockTarget.apply,feign.RequestTemplate.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny",",feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes"
feign,feign.mock.MockClientTest.verifyMultipleRequests,48,3,",feign.mock.MockClient.getResponseBuilder,feign.RequestTemplate.body,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.mock.RequestKey.buildUrl,feign.RequestTemplate.queries,feign.gson.GsonDecoder.decode,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes,feign.Response.body,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAlpha,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.mock.RequestKey.equals,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.RequestTemplate.url,feign.mock.MockClient.verifyOne,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.RequestTemplate.feignTarget,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.BodyTemplate.expand,feign.template.UriUtils.isUnreserved,feign.mock.MockTarget.apply,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny",",feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes,feign.mock.MockClient.verifyOne"
feign,feign.mock.MockClientTest.verifyNegative,1,1,",feign.mock.MockClient.verifyTimes",",feign.mock.MockClient.verifyTimes"
feign,feign.mock.MockClientTest.verifyNone,50,2,",feign.mock.MockClient.getResponseBuilder,feign.RequestTemplate.body,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.Request.headers,feign.mock.RequestKey.toString,feign.gson.GsonDecoder.decode,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.Literal.getValue,feign.template.UriUtils.isAbsolute,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.request,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.mock.RequestKey.equals,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.mock.RequestKey.hashCode,feign.RequestTemplate.header,feign.mock.MockClient.verifyNever,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.BodyTemplate.expand,feign.RequestTemplate.target,feign.template.Literal.create,feign.mock.MockTarget.apply,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny",",feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes"
feign,feign.mock.MockClientTest.verifyNotInvoked,4,3,",feign.mock.MockClient.verifyTimes,feign.mock.MockClient.verifyOne,feign.mock.RequestKey.toString,feign.mock.MockClient.verifyNever",",feign.mock.MockClient.verifyNever,feign.mock.MockClient.verifyTimes,feign.mock.MockClient.verifyOne"
feign,feign.mock.MockTargetTest.test,1,1,",feign.mock.MockTarget.name",",feign.mock.MockTarget.name"
feign,feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders,0,0,,
feign,feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromHeadersMap,1,1,",feign.mock.RequestHeaders.size",",feign.mock.RequestHeaders.size"
feign,feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue,1,1,",feign.mock.RequestHeaders.fetch",",feign.mock.RequestHeaders.fetch"
feign,feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection,1,1,",feign.mock.RequestHeaders.builder",",feign.mock.RequestHeaders.builder"
feign,feign.mock.RequestHeadersTest.shouldPrintHeaders,1,1,",feign.mock.RequestHeaders.toString",",feign.mock.RequestHeaders.toString"
feign,feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey,1,1,",feign.mock.RequestHeaders.sizeOf",",feign.mock.RequestHeaders.sizeOf"
feign,feign.mock.RequestKeyTest.builder,0,0,,
feign,feign.mock.RequestKeyTest.checkHashes,1,1,",feign.mock.RequestKey.hashCode",",feign.mock.RequestKey.hashCode"
feign,feign.mock.RequestKeyTest.create,4,3,",feign.mock.RequestKey.create,feign.mock.RequestKey.getHeaders,feign.mock.RequestKey.buildUrl,feign.Request.create",",feign.mock.RequestKey.getHeaders,feign.Request.create,feign.mock.RequestKey.create"
feign,feign.mock.RequestKeyTest.equalExtra,0,0,,
feign,feign.mock.RequestKeyTest.equalMinimum,0,0,,
feign,feign.mock.RequestKeyTest.equalNull,1,1,",feign.mock.RequestKey.equals",",feign.mock.RequestKey.equals"
feign,feign.mock.RequestKeyTest.equalObject,0,0,,
feign,feign.mock.RequestKeyTest.equalPost,1,1,",feign.mock.RequestKey.builder",",feign.mock.RequestKey.builder"
feign,feign.mock.RequestKeyTest.equalSelf,0,0,,
feign,feign.mock.RequestKeyTest.equalsExtended,2,1,",feign.mock.RequestKey.equalsExtended,feign.mock.RequestHeaders.equals",",feign.mock.RequestKey.equalsExtended"
feign,feign.mock.RequestKeyTest.equalsExtendedExtra,0,0,,
feign,feign.mock.RequestKeyTest.testToString,2,1,",feign.mock.RequestHeaders.toString,feign.mock.RequestKey.toString",",feign.mock.RequestKey.toString"
feign,feign.mock.RequestKeyTest.testToStringSimple,0,0,,
feign,feign.okhttp.OkHttpClientTest.noResponseBodyForPatch,0,0,,
feign,feign.okhttp.OkHttpClientTest.noResponseBodyForPost,0,0,,
feign,feign.okhttp.OkHttpClientTest.noResponseBodyForPut,0,0,,
feign,feign.okhttp.OkHttpClientTest.parsesErrorResponse,0,0,,
feign,feign.okhttp.OkHttpClientTest.parsesErrorResponseBody,0,0,,
feign,feign.okhttp.OkHttpClientTest.parsesRequestAndResponse,0,0,,
feign,feign.okhttp.OkHttpClientTest.parsesResponseMissingLength,0,0,,
feign,feign.okhttp.OkHttpClientTest.parsesUnauthorizedResponseBody,0,0,,
feign,feign.okhttp.OkHttpClientTest.postWithSpacesInPath,0,0,,
feign,feign.okhttp.OkHttpClientTest.reasonPhraseIsOptional,0,0,,
feign,feign.okhttp.OkHttpClientTest.safeRebuffering,0,0,,
feign,feign.okhttp.OkHttpClientTest.safeRebuffering_noContent,0,0,,
feign,feign.okhttp.OkHttpClientTest.testAlternativeCollectionFormat,0,0,,
feign,feign.okhttp.OkHttpClientTest.testContentTypeDefaultsToRequestCharset,0,0,,
feign,feign.okhttp.OkHttpClientTest.testContentTypeWithCharset,0,0,,
feign,feign.okhttp.OkHttpClientTest.testContentTypeWithoutCharset,53,8,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.okhttp.OkHttpClient.toMap,feign.Util.copy,feign.RequestTemplate.queries,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.Response.body,feign.okhttp.OkHttpClient.execute,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.toByteArray,feign.MethodMetadata.addWarning,feign.okhttp.OkHttpClient.toOkHttpRequest,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.Util.toString,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.Response.caseInsensitiveCopyOf,feign.assertj.RecordedRequestAssert.hasMethod,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.assertj.MockWebServerAssertions.assertThat,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.assertj.RecordedRequestAssert.hasHeaders,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.okhttp.OkHttpClientTest.newBuilder,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.okhttp.OkHttpClient.toFeignResponse,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.Feign.builder,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.RequestTemplate.resolve,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.assertj.MockWebServerAssertions.assertThat,feign.assertj.RecordedRequestAssert.hasHeaders,feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.Util.toString,feign.Response.body,feign.assertj.RecordedRequestAssert.hasMethod,feign.okhttp.OkHttpClientTest.newBuilder"
feign,feign.okhttp.OkHttpClientTest.testDefaultCollectionFormat,0,0,,
feign,feign.okhttp.OkHttpClientTest.testFollowRedirect,55,5,",feign.template.Template.toString,feign.okhttp.OkHttpClient.toMap,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.MethodMetadata.urlIndex,feign.RequestTemplate.queries,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.okhttp.OkHttpClient.execute,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.decodeOrDefault,feign.template.UriUtils.isReserved,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.okhttp.OkHttpClient.toBody,feign.okhttp.OkHttpClient.toOkHttpRequest,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.header,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.okhttp.OkHttpClientTest.newBuilder,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.okhttp.OkHttpClient.toFeignResponse,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.Util.decodeOrDefault,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.Util.checkNotNull,feign.okhttp.OkHttpClientTest.newBuilder"
feign,feign.okhttp.OkHttpClientTest.testHeadersWithNotEmptyParams,0,0,,
feign,feign.okhttp.OkHttpClientTest.testHeadersWithNullParams,0,0,,
feign,feign.okhttp.OkHttpClientTest.testNoFollowRedirect,52,3,",feign.Types.checkNotPrimitive,feign.template.Template.toString,feign.okhttp.OkHttpClient.toMap,feign.DeclarativeContract.processAnnotationOnClass,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.invoke,feign.okhttp.OkHttpClient.execute,feign.template.UriUtils.encode,feign.MethodMetadata.isIgnored,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.okhttp.OkHttpClient.toBody,feign.MethodMetadata.addWarning,feign.Util.isNotBlank,feign.okhttp.OkHttpClient.toOkHttpRequest,feign.RequestTemplate.from,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.method,feign.Request.body,feign.AsyncResponseHandler.handleResponse,feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.configKey,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.header,feign.RequestTemplate.feignTarget,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.okhttp.OkHttpClientTest.newBuilder,feign.SynchronousMethodHandler.findOptions,feign.MethodMetadata.indexToExpander,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.okhttp.OkHttpClient.toFeignResponse,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.HeaderTemplate.create,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.Response.builder",",feign.okhttp.OkHttpClientTest.newBuilder,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.okhttp.OkHttpClientTest.testPatch,0,0,,
feign,feign.okhttp.OkHttpClientTest.testResponseLength,0,0,,
feign,feign.okhttp.OkHttpClientTest.testVeryLongResponseNullLength,0,0,,
feign,feign.optionals.OptionalDecoderTests.simple204OptionalTest,25,4,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.optionals.OptionalDecoder.decode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.methodMetadata,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand",",feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.optionals.OptionalDecoderTests.simple404OptionalTest,32,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.url,feign.optionals.OptionalDecoder.isOptional,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.optionals.OptionalDecoder.decode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.Response.toBuilder,feign.codec.StringDecoder.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.DeclarativeContract.registerParameterAnnotation,feign.Util.ensureClosed,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand",",feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.Util.checkNotNull"
feign,feign.optionals.OptionalDecoderTests.test200WhenDecodingNoOptional,30,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.optionals.OptionalDecoder.decode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.MethodMetadata.indexToName,feign.template.UriUtils.isAbsolute,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.optionals.OptionalDecoderTests.test200WhenResponseBodyIsNull,37,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.url,feign.optionals.OptionalDecoder.isOptional,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.optionals.OptionalDecoder.decode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.AsyncResponseHandler.isVoidType,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.optionals.OptionalDecoderTests.test200WithOptionalString,31,3,",feign.Types.getSupertype,feign.Util.resolveLastTypeParameter,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.optionals.OptionalDecoder.isOptional,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.optionals.OptionalDecoder.decode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.Types.getRawType,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.codec.StringDecoder.decode,feign.Response.toBuilder,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.Util.checkState,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.AsyncResponseHandler.isVoidType,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.Template.expand",",feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance"
feign,feign.querymap.BeanQueryMapEncoderTest.testDefaultEncoder_haveSuperClass,2,1,",feign.querymap.BeanQueryMapEncoder.encode,feign.querymap.BeanQueryMapEncoder.getMetadata",",feign.querymap.BeanQueryMapEncoder.encode"
feign,feign.querymap.BeanQueryMapEncoderTest.testDefaultEncoder_normalClassWithOutValues,2,1,",feign.querymap.BeanQueryMapEncoder.encode,feign.querymap.BeanQueryMapEncoder.getMetadata",",feign.querymap.BeanQueryMapEncoder.encode"
feign,feign.querymap.BeanQueryMapEncoderTest.testDefaultEncoder_normalClassWithValues,2,1,",feign.querymap.BeanQueryMapEncoder.encode,feign.querymap.BeanQueryMapEncoder.getMetadata",",feign.querymap.BeanQueryMapEncoder.encode"
feign,feign.querymap.BeanQueryMapEncoderTest.testDefaultEncoder_withOverriddenParamName,2,1,",feign.querymap.BeanQueryMapEncoder.encode,feign.querymap.BeanQueryMapEncoder.getMetadata",",feign.querymap.BeanQueryMapEncoder.encode"
feign,feign.querymap.FieldQueryMapEncoderTest.testDefaultEncoder_normalClassWithOutValues,2,1,",feign.querymap.FieldQueryMapEncoder.getMetadata,feign.querymap.FieldQueryMapEncoder.encode",",feign.querymap.FieldQueryMapEncoder.encode"
feign,feign.querymap.FieldQueryMapEncoderTest.testDefaultEncoder_normalClassWithValues,2,1,",feign.querymap.FieldQueryMapEncoder.getMetadata,feign.querymap.FieldQueryMapEncoder.encode",",feign.querymap.FieldQueryMapEncoder.encode"
feign,feign.querymap.FieldQueryMapEncoderTest.testDefaultEncoder_withOverriddenParamName,2,1,",feign.querymap.FieldQueryMapEncoder.getMetadata,feign.querymap.FieldQueryMapEncoder.encode",",feign.querymap.FieldQueryMapEncoder.encode"
feign,feign.reactive.ReactiveDelegatingContractTest.onlyReactiveReturnTypesSupported,21,2,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Literal.getValue,feign.RequestTemplate.methodMetadata,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerMethodAnnotation,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata"
feign,feign.reactive.ReactiveDelegatingContractTest.reactivexTypes,21,2,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.reactive.ReactiveDelegatingContract.isReactive,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.RequestTemplate.method,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.DeclarativeContract.registerParameterAnnotation"
feign,feign.reactive.ReactiveDelegatingContractTest.reactorTypes,32,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Expression.getValue,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.reactive.ReactiveDelegatingContract.isReactive,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.RequestTemplate.method,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.DeclarativeContract.registerMethodAnnotation"
feign,feign.reactive.ReactiveDelegatingContractTest.streamsAreNotSupported,26,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.Types.getRawType,feign.MethodMetadata.returnType,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.reactive.ReactiveDelegatingContract.isReactive,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.template.Literal.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerMethodAnnotation,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata"
feign,feign.reactive.ReactiveFeignIntegrationTest.doNotCloseUnsupported,3,1,",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerParameterAnnotation,feign.reactive.ReactorFeign.builder,feign.DeclarativeContract.registerMethodAnnotation",",feign.reactive.ReactorFeign.builder"
feign,feign.reactive.ReactiveFeignIntegrationTest.invocationFactoryIsNotSupported,3,1,",feign.DeclarativeContract.registerClassAnnotation,feign.DeclarativeContract.registerMethodAnnotation,feign.reactive.ReactorFeign.builder",",feign.reactive.ReactorFeign.builder"
feign,feign.reactive.ReactiveFeignIntegrationTest.testClient,39,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.reactive.ReactorFeign.builder,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.reactive.ReactiveDelegatingContract.isReactive,feign.reactive.ReactiveInvocationHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.reactive.ReactiveInvocationHandler.invokeMethod,feign.template.Expressions.stripBraces,feign.RequestTemplate.method,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.reactive.ReactorInvocationHandler.invoke,feign.template.Literal.create,feign.MethodMetadata.formParams,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.ReflectiveFeign.newInstance,feign.reactive.ReactorFeign.builder,feign.reactive.ReactiveInvocationHandler.invoke"
feign,feign.reactive.ReactiveFeignIntegrationTest.testDefaultMethodsNotProxied,38,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.targetType,feign.reactive.ReactorFeign.builder,feign.reactive.ReactiveInvocationHandler.hashCode,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.template.UriUtils.isAlpha,feign.reactive.ReactiveInvocationHandler.toString,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.MethodMetadata.returnType,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.reactive.ReactiveDelegatingContract.isReactive,feign.reactive.ReactiveInvocationHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.hasRequestVariable,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.Util.emptyToNull,feign.ReflectiveFeign.newInstance,feign.reactive.ReactorFeign.builder,feign.reactive.ReactiveInvocationHandler.invoke"
feign,feign.reactive.ReactiveFeignIntegrationTest.testDifferentContract,36,7,",feign.Types.checkNotPrimitive,feign.DeclarativeContract.processAnnotationOnClass,feign.reactive.ReactorFeign.builder,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.methodMetadata,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.reactive.ReactiveDelegatingContract.isReactive,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.reactive.ReactiveInvocationHandler.invoke,feign.template.UriUtils.encodeInternal,feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.reactive.ReactiveInvocationHandler.invokeMethod,feign.DeclarativeContract.registerParameterAnnotation,feign.jaxrs.JAXRSContract.registerParamAnnotations,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.reactive.ReactorInvocationHandler.invoke,feign.template.Literal.create,feign.Types.resolve,feign.jaxrs.JAXRSContract.parseAndValidateMetadata,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.DeclarativeContract.registerClassAnnotation,feign.ReflectiveFeign.newInstance,feign.jaxrs.JAXRSContract.registerParamAnnotations,feign.reactive.ReactorFeign.builder,feign.DeclarativeContract.registerMethodAnnotation,feign.reactive.ReactiveInvocationHandler.invoke"
feign,feign.reactive.ReactiveFeignIntegrationTest.testErrorDecoder,56,5,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.querymap.FieldQueryMapEncoder.encode,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.reactive.RxJavaInvocationHandler.invoke,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.reactive.ReactiveInvocationHandler.invoke,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.Response.builder,feign.template.UriUtils.isGenericDelimiter,feign.querymap.FieldQueryMapEncoder.getMetadata,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.Expression.getName,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.reactive.RxJavaFeign.builder,feign.RequestTemplate.hasRequestVariable,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.reactive.RxJavaFeign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.reactive.ReactiveInvocationHandler.invoke"
feign,feign.reactive.ReactiveFeignIntegrationTest.testQueryMapEncoders,71,6,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.RequestTemplate.queries,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.template.Literal.getValue,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Response.toBuilder,feign.reactive.RxJavaInvocationHandler.invoke,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.Util.toString,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.DeclarativeContract.registerMethodAnnotation,feign.codec.StringDecoder.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.reactive.ReactiveDelegatingContract.isReactive,feign.SynchronousMethodHandler.targetRequest,feign.reactive.ReactiveInvocationHandler.invoke,feign.template.Template.expand,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.Util.checkState,feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.template.Expressions.stripBraces,feign.AsyncResponseHandler.handleResponse,feign.RequestTemplate.method,feign.Util.ensureClosed,feign.DeclarativeContract.registerClassAnnotation,feign.Response.status,feign.RequestTemplate.headers,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.reactive.RxJavaFeign.builder,feign.RequestTemplate.hasRequestVariable,feign.MethodMetadata.formParams,feign.template.Literal.create,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.reactive.RxJavaFeign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.reactive.ReactiveInvocationHandler.invoke,feign.Util.checkNotNull"
feign,feign.reactive.ReactiveFeignIntegrationTest.testReactorTargetFull,38,5,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.isDefault,feign.MethodMetadata.targetType,feign.reactive.ReactorFeign.builder,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.Expression.getValue,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.reactive.ReactiveDelegatingContract.isReactive,feign.DeclarativeContract.registerMethodAnnotation,feign.reactive.ReactiveInvocationHandler.invoke,feign.template.UriUtils.encodeInternal,feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.reactive.ReactiveInvocationHandler.invokeMethod,feign.RequestTemplate.method,feign.DeclarativeContract.registerClassAnnotation,feign.template.Expressions.stripBraces,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.reactive.ReactorInvocationHandler.invoke,feign.template.Literal.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.ReflectiveFeign.newInstance,feign.reactive.ReactorFeign.builder,feign.reactive.ReactiveInvocationHandler.invoke,feign.Util.checkNotNull"
feign,feign.reactive.ReactiveFeignIntegrationTest.testRequestInterceptor,46,5,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.targetType,feign.reactive.ReactorFeign.builder,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.reactive.ReactiveDelegatingContract.isReactive,feign.DeclarativeContract.registerMethodAnnotation,feign.reactive.ReactiveInvocationHandler.invoke,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.reactive.ReactiveInvocationHandler.invokeMethod,feign.Util.checkState,feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.template.Expressions.stripBraces,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.method,feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.reactive.ReactorInvocationHandler.invoke,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.hasRequestVariable,feign.template.Literal.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.Template.getVariables",",feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.ReflectiveFeign.newInstance,feign.reactive.ReactorFeign.builder,feign.reactive.ReactiveInvocationHandler.invoke,feign.Util.checkNotNull"
feign,feign.reactive.ReactiveFeignIntegrationTest.testRequestInterceptors,0,0,,
feign,feign.reactive.ReactiveFeignIntegrationTest.testResponseMappers,44,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.bodyIndex,feign.Util.isDefault,feign.reactive.ReactorFeign.builder,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.MethodMetadata.indexToName,feign.template.UriUtils.isAbsolute,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.reactive.ReactiveDelegatingContract.isReactive,feign.reactive.ReactiveInvocationHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation,feign.template.UriUtils.encodeInternal,feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.MethodMetadata.template,feign.Util.checkState,feign.RequestTemplate.method,feign.DeclarativeContract.registerClassAnnotation,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.reactive.ReactorInvocationHandler.invoke,feign.template.Literal.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.ReflectiveFeign.newInstance,feign.reactive.ReactorFeign.builder,feign.reactive.ReactiveInvocationHandler.invoke"
feign,feign.reactive.ReactiveFeignIntegrationTest.testRetryer,36,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.isDefault,feign.reactive.ReactorFeign.builder,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.MethodMetadata.isAlreadyProcessed,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.uri,feign.reactive.ReactiveDelegatingContract.isReactive,feign.reactive.ReactiveInvocationHandler.invoke,feign.template.UriUtils.encodeInternal,feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.Expressions.stripBraces,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.reactive.ReactorInvocationHandler.invoke,feign.MethodMetadata.formParams,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.RequestTemplate.hasRequestVariable,feign.template.Template.getVariables",",feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.ReflectiveFeign.newInstance,feign.reactive.ReactorFeign.builder,feign.reactive.ReactiveInvocationHandler.invoke"
feign,feign.reactive.ReactiveFeignIntegrationTest.testRxJavaTarget,74,5,",feign.Logger.logRequest,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.Response.reason,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.reactive.ReactiveDelegatingContract.isReactive,feign.reactive.ReactiveInvocationHandler.invoke,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Logger.methodTag,feign.template.Expressions.stripBraces,feign.Response.status,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.Util.emptyToNull,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.decodeOrDefault,feign.Util.toByteArray,feign.Logger.logAndRebufferResponse,feign.RequestTemplate.collectionFormat,feign.reactive.RxJavaInvocationHandler.invoke,feign.AsyncResponseHandler.decode,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.RequestTemplate.resolve,feign.template.Template.getVariables,feign.Util.copy,feign.jackson.JacksonDecoder.decode,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.Request.httpMethod,feign.reactive.ReactiveDelegatingContract.parseAndValidateMetadata,feign.RequestTemplate.url,feign.Response.headers,feign.reactive.ReactiveInvocationHandler.invokeMethod,feign.RequestTemplate.headers,feign.Util.checkState,feign.Util.ensureClosed,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.reactive.RxJavaFeign.builder,feign.Request.create,feign.Util.valuesOrEmpty,feign.RequestTemplate.hasRequestVariable",",feign.reactive.ReactiveFeignIntegrationTest.getServerUrl,feign.reactive.RxJavaFeign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.reactive.ReactiveInvocationHandler.invoke,feign.Util.checkNotNull"
feign,feign.reactive.ReactiveInvocationHandlerTest.invokeFailureReactor,2,1,",feign.reactive.ReactiveInvocationHandler.invokeMethod,feign.reactive.ReactorInvocationHandler.invoke",",feign.reactive.ReactorInvocationHandler.invoke"
feign,feign.reactive.ReactiveInvocationHandlerTest.invokeFailureRxJava,1,1,",feign.reactive.RxJavaInvocationHandler.invoke",",feign.reactive.RxJavaInvocationHandler.invoke"
feign,feign.reactive.ReactiveInvocationHandlerTest.invokeOnSubscribeEmptyReactor,2,1,",feign.reactive.ReactiveInvocationHandler.invokeMethod,feign.reactive.ReactorInvocationHandler.invoke",",feign.reactive.ReactorInvocationHandler.invoke"
feign,feign.reactive.ReactiveInvocationHandlerTest.invokeOnSubscribeEmptyRxJava,2,1,",feign.reactive.RxJavaInvocationHandler.invoke,feign.reactive.ReactiveInvocationHandler.invokeMethod",",feign.reactive.RxJavaInvocationHandler.invoke"
feign,feign.reactive.ReactiveInvocationHandlerTest.invokeOnSubscribeReactor,1,1,",feign.reactive.ReactorInvocationHandler.invoke",",feign.reactive.ReactorInvocationHandler.invoke"
feign,feign.reactive.ReactiveInvocationHandlerTest.invokeOnSubscribeRxJava,1,1,",feign.reactive.RxJavaInvocationHandler.invoke",",feign.reactive.RxJavaInvocationHandler.invoke"
feign,feign.ribbon.LBClientFactoryTest.testCreateLBClient,2,1,",feign.ribbon.LBClient.create,feign.ribbon.LBClient.parseStatusCodes",",feign.ribbon.LBClient.create"
feign,feign.ribbon.LBClientTest.testParseCodes,1,1,",feign.ribbon.LBClient.parseStatusCodes",",feign.ribbon.LBClient.parseStatusCodes"
feign,feign.ribbon.LBClientTest.testRibbonRequest,2,1,",feign.Request.toString,feign.Util.valuesOrEmpty",",feign.Request.toString"
feign,feign.ribbon.LoadBalancingTargetTest.loadBalancingDefaultPolicyRoundRobin,60,5,",feign.Types.checkNotPrimitive,feign.template.Template.toString,feign.MethodMetadata.bodyIndex,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.RequestTemplate.queries,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.Response.body,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.ribbon.LoadBalancingTargetTest.hostAndPort,feign.MethodMetadata.indexToName,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.collectionFormat,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.ribbon.LoadBalancingTarget.name,feign.RequestTemplate.from,feign.Util.isBlank,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.DeclarativeContract.registerMethodAnnotation,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.MethodMetadata.template,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Request.body,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.Response.status,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.indexToExpanderClass,feign.DeclarativeContract.registerParameterAnnotation,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.indexToExpander,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.AsyncResponseHandler.isVoidType,feign.Feign.builder,feign.ribbon.LoadBalancingTarget.apply,feign.MethodMetadata.formParams,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.MethodMetadata.headerMapIndex,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.ribbon.LoadBalancingTarget.create,feign.Response.builder",",feign.ribbon.LoadBalancingTargetTest.hostAndPort,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke,feign.ribbon.LoadBalancingTarget.create"
feign,feign.ribbon.LoadBalancingTargetTest.loadBalancingTargetPath,38,6,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.ribbon.LoadBalancingTargetTest.hostAndPort,feign.template.UriUtils.isAlpha,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.RequestTemplate.headers,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationOnMethod,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.ribbon.LoadBalancingTarget.apply,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.ribbon.LoadBalancingTarget.create",",feign.ribbon.LoadBalancingTargetTest.hostAndPort,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke,feign.Util.checkNotNull,feign.ribbon.LoadBalancingTarget.create"
feign,feign.ribbon.PropagateFirstIOExceptionTest.doesntPropagateWhenNotIOE,0,0,,
feign,feign.ribbon.PropagateFirstIOExceptionTest.propagatesDoubleNestedIOE,1,1,",feign.ribbon.RibbonClient.propagateFirstIOException",",feign.ribbon.RibbonClient.propagateFirstIOException"
feign,feign.ribbon.PropagateFirstIOExceptionTest.propagatesFirstNestedIOE,0,0,,
feign,feign.ribbon.PropagateFirstIOExceptionTest.propagatesNestedIOE,0,0,,
feign,feign.ribbon.RibbonClientTest.ioExceptionFailsAfterTooManyFailures,63,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.ribbon.RibbonClient.execute,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.RequestTemplate.methodMetadata,feign.ribbon.RibbonClientTest.hostAndPort,feign.Util.isNotBlank,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.uri,feign.ribbon.RibbonClient.lbClient,feign.template.Template.expand,feign.RequestTemplate.path,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.ribbon.RibbonClient.cleanUrl,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.ribbon.LBClient.getRequestSpecificRetryHandler,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriTemplate.create,feign.ribbon.LBClient.execute,feign.Util.checkState,feign.RequestTemplate.headers,feign.FeignException.errorExecuting,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.MethodMetadata.method,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.RequestTemplate.target,feign.RequestTemplate.hasRequestVariable,feign.template.Literal.create,feign.Feign.builder,feign.ribbon.LBClient.create,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.ReflectiveFeign.newInstance,feign.ribbon.RibbonClientTest.hostAndPort,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.ribbon.RibbonClientTest.ioExceptionRetry,76,6,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.template.Literal.getValue,feign.ribbon.RibbonClient.create,feign.Util.isBlank,feign.ribbon.RibbonClientTest.serverListKey,feign.RequestTemplate.from,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.MethodMetadata.queryMapIndex,feign.template.UriUtils.encodeInternal,feign.ribbon.RibbonClient.cleanUrl,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.Request.body,feign.Response.status,feign.template.Expressions.stripBraces,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.indexToExpander,feign.ribbon.RibbonClientTest.client,feign.template.Expressions.create,feign.Util.emptyToNull,feign.ribbon.LBClient.create,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.MethodMetadata.bodyIndex,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.splitQueryParameter,feign.RequestTemplate.collectionFormat,feign.ribbon.RibbonClient.lbClient,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.template.QueryTemplate.getValues,feign.Response.builder,feign.template.Template.getVariables,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.Util.isNotBlank,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.ribbon.LBClient.getRequestSpecificRetryHandler,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.expand,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.ribbon.RibbonClient.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.ribbon.LBClient.execute,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.Request.charset,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.RequestTemplate.hasRequestVariable",",feign.ribbon.RibbonClientTest.client,feign.ribbon.RibbonClient.create,feign.Feign.builder,feign.ribbon.RibbonClientTest.serverListKey,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.ribbon.RibbonClientTest.ioExceptionRetryWithBuilder,0,0,,
feign,feign.ribbon.RibbonClientTest.loadBalancingDefaultPolicyRoundRobin,61,4,",feign.template.QueryTemplate.getName,feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.ribbon.RibbonClient.execute,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.splitQueryParameter,feign.ribbon.RibbonClient.create,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.ribbon.RibbonClientTest.serverListKey,feign.RequestTemplate.from,feign.ribbon.RibbonClientTest.hostAndPort,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.ribbon.RibbonClient.lbClient,feign.DeclarativeContract.registerMethodAnnotation,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.ribbon.RibbonClient.cleanUrl,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.ribbon.LBClient.getRequestSpecificRetryHandler,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.ribbon.LBClient.execute,feign.template.UriUtils.isDigit,feign.Response.status,feign.RequestTemplate.headers,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.ribbon.RibbonClient.builder,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.ribbon.LBClient.create,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.ribbon.RibbonClient.create,feign.ReflectiveFeign.newInstance,feign.ribbon.RibbonClientTest.serverListKey,feign.Feign.builder,feign.ribbon.RibbonClientTest.hostAndPort,feign.SynchronousMethodHandler.invoke"
feign,feign.ribbon.RibbonClientTest.ribbonRetryConfigurationOnMultipleServers,66,7,",feign.SynchronousMethodHandler.invoke,feign.MethodMetadata.targetType,feign.ribbon.RibbonClient.create,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.ribbon.RibbonClientTest.serverListKey,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.ribbon.RibbonClient.cleanUrl,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.template.Expressions.stripBraces,feign.MethodMetadata.indexToExpanderClass,feign.template.UriUtils.isGenericDelimiter,feign.FeignException.checkRequestNotNull,feign.template.Expressions.create,feign.Util.emptyToNull,feign.ribbon.LBClient.create,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.splitQueryParameter,feign.ribbon.RibbonClient.lbClient,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Util.isNotBlank,feign.ribbon.RibbonClientTest.hostAndPort,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.ribbon.LBClient.getRequestSpecificRetryHandler,feign.RequestTemplate.headers,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.ribbon.RibbonClient.execute,feign.RequestTemplate.appendQuery,feign.MethodMetadata.indexToName,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.template.QueryTemplate.getVariables,feign.ribbon.LBClient.execute,feign.DeclarativeContract.registerParameterAnnotation,feign.FeignException.errorExecuting,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.RequestTemplate.hasRequestVariable",",feign.ribbon.RibbonClient.create,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.ribbon.RibbonClientTest.serverListKey,feign.ribbon.RibbonClientTest.hostAndPort,feign.SynchronousMethodHandler.invoke,feign.Util.checkNotNull"
feign,feign.ribbon.RibbonClientTest.ribbonRetryConfigurationOnSameServer,65,3,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.ribbon.RibbonClient.execute,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.Util.isBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.DeclarativeContract.registerMethodAnnotation,feign.ribbon.RibbonClient.lbClient,feign.template.Template.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.ribbon.RibbonClient.cleanUrl,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Request.body,feign.ribbon.LBClient.getRequestSpecificRetryHandler,feign.RequestTemplate.method,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.ribbon.LBClient.execute,feign.FeignException.errorExecuting,feign.template.Expressions.stripBraces,feign.Util.checkState,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.ribbon.LBClient.create,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.SynchronousMethodHandler.invoke,feign.ReflectiveFeign.newInstance,feign.Feign.builder"
feign,feign.ribbon.RibbonClientTest.ribbonRetryOnStatusCodes,64,5,",feign.Response.close,feign.SynchronousMethodHandler.invoke,feign.ribbon.RibbonClient.create,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.ribbon.RibbonClientTest.serverListKey,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.ribbon.LBClient.parseStatusCodes,feign.ribbon.RibbonClient.cleanUrl,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.Request.body,feign.template.UriUtils.isGenericDelimiter,feign.template.Expressions.create,feign.ribbon.LBClient.create,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.ribbon.RibbonClient.lbClient,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.RequestTemplate.methodMetadata,feign.ribbon.RibbonClientTest.hostAndPort,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.ribbon.LBClient.getRequestSpecificRetryHandler,feign.RequestTemplate.headers,feign.MethodMetadata.warnings,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.ribbon.RibbonClient.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.ribbon.RibbonClient.propagateFirstIOException,feign.template.QueryTemplate.getVariables,feign.ribbon.LBClient.execute,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.Request.charset,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.RequestTemplate.hasRequestVariable",",feign.ribbon.RibbonClient.create,feign.ReflectiveFeign.newInstance,feign.ribbon.RibbonClientTest.serverListKey,feign.ribbon.RibbonClientTest.hostAndPort,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.ribbon.RibbonClientTest.testCleanUrl,1,1,",feign.ribbon.RibbonClient.cleanUrl",",feign.ribbon.RibbonClient.cleanUrl"
feign,feign.ribbon.RibbonClientTest.testCleanUrlWithMatchingHostAndPart,1,1,",feign.ribbon.RibbonClient.cleanUrl",",feign.ribbon.RibbonClient.cleanUrl"
feign,feign.ribbon.RibbonClientTest.testFeignOptionsClientConfig,0,0,,
feign,feign.ribbon.RibbonClientTest.testFeignOptionsFollowRedirect,61,4,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.MethodMetadata.bodyIndex,feign.DeclarativeContract.processAnnotationOnClass,feign.Util.copy,feign.ribbon.RibbonClient.execute,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.Util.isDefault,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isReserved,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.Util.toByteArray,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.RequestTemplate.splitQueryParameter,feign.template.UriUtils.isAlpha,feign.ribbon.RibbonClient.create,feign.ReflectiveFeign.newInstance,feign.Util.isNotBlank,feign.RequestTemplate.from,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.ribbon.RibbonClient.lbClient,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.ribbon.RibbonClient.cleanUrl,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.ribbon.LBClient.parseStatusCodes,feign.template.Template.parseFragment,feign.Feign.configKey,feign.Request.body,feign.ribbon.LBClient.getRequestSpecificRetryHandler,feign.DeclarativeContract.registerClassAnnotation,feign.template.UriTemplate.create,feign.AsyncResponseHandler.handleResponse,feign.ribbon.LBClient.execute,feign.MethodMetadata.template,feign.RequestTemplate.method,feign.RequestTemplate.headers,feign.RequestTemplate.decodeSlash,feign.template.UriUtils.isGenericDelimiter,feign.MethodMetadata.warnings,feign.Request.charset,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.ribbon.LBClient.create,feign.RequestTemplate.resolve,feign.Request.create,feign.Types.resolve,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.ribbon.RibbonClient.create,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.SynchronousMethodHandler.invoke"
feign,feign.ribbon.RibbonClientTest.testFeignOptionsNoFollowRedirect,79,6,",feign.Request.url,feign.SynchronousMethodHandler.invoke,feign.template.Literal.getValue,feign.ribbon.RibbonClient.create,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.ribbon.RibbonClientTest.serverListKey,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.ribbon.RibbonClient.cleanUrl,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.UriUtils.isGenericDelimiter,feign.template.Expression.getName,feign.ribbon.RibbonClientTest.client,feign.template.Expressions.create,feign.ribbon.RibbonClient.builder,feign.ribbon.LBClient.create,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.Util.decodeOrDefault,feign.Util.toByteArray,feign.RequestTemplate.splitQueryParameter,feign.ribbon.RibbonClient.lbClient,feign.SynchronousMethodHandler.targetRequest,feign.MethodMetadata.template,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Util.copy,feign.Util.isDefault,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.template.Expression.getValue,feign.Types.getRawType,feign.Util.isNotBlank,feign.ribbon.RibbonClientTest.hostAndPort,feign.MethodMetadata.isAlreadyProcessed,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.ribbon.LBClient.getRequestSpecificRetryHandler,feign.Util.checkState,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.MethodMetadata.method,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.ribbon.RibbonClient.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.ribbon.LBClient.execute,feign.DeclarativeContract.registerParameterAnnotation,feign.template.UriUtils.isDigit,feign.RequestTemplate.decodeSlash,feign.Request.charset,feign.DeclarativeContract.processAnnotationOnMethod,feign.Request.create,feign.RequestTemplate.hasRequestVariable",",feign.Util.decodeOrDefault,feign.ribbon.RibbonClient.create,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.ribbon.RibbonClientTest.serverListKey,feign.ribbon.RibbonClientTest.hostAndPort,feign.SynchronousMethodHandler.invoke"
feign,feign.ribbon.RibbonClientTest.testHTTPSViaRibbon,64,6,",feign.RequestTemplate.getRequestVariables,feign.template.Template.toString,feign.client.TrustingSSLSocketFactory.get,feign.DeclarativeContract.processAnnotationOnClass,feign.Request.headers,feign.ribbon.RibbonClient.execute,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.ribbon.RibbonClientTest.hostAndPort,feign.RequestTemplate.from,feign.ribbon.RibbonClientTest.serverListKey,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.ribbon.RibbonClient.lbClient,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.query,feign.template.QueryTemplate.getVariables,feign.ribbon.RibbonClient.cleanUrl,feign.template.Template.encodeLiteral,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.ribbon.LBClient.getRequestSpecificRetryHandler,feign.template.UriTemplate.create,feign.Request.body,feign.ribbon.LBClient.execute,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.RequestTemplate.headers,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.client.TrustingSSLSocketFactory.setEnabledCipherSuites,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.DeclarativeContract.parseAndValidateMetadata,feign.DeclarativeContract.processAnnotationsOnParameter,feign.client.TrustingSSLSocketFactory.loadKeyStore,feign.Util.emptyToNull,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.RequestTemplate.hasRequestVariable,feign.Feign.builder,feign.client.TrustingSSLSocketFactory.createSocket,feign.ribbon.LBClient.create,feign.RequestTemplate.resolve,feign.Types.resolve,feign.Request.create,feign.MethodMetadata.headerMapIndex,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables",",feign.client.TrustingSSLSocketFactory.get,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.ribbon.RibbonClientTest.hostAndPort,feign.ribbon.RibbonClientTest.serverListKey,feign.SynchronousMethodHandler.invoke"
feign,feign.ribbon.RibbonClientTest.urlEncodeQueryStringParameters,76,6,",feign.SynchronousMethodHandler.invoke,feign.template.UriUtils.isSubDelimiter,feign.ribbon.RibbonClient.create,feign.template.UriUtils.isAlpha,feign.ReflectiveFeign.newInstance,feign.ribbon.RibbonClientTest.serverListKey,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.Response.toBuilder,feign.DeclarativeContract.registerMethodAnnotation,feign.template.QueryTemplate.expand,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.ribbon.RibbonClient.cleanUrl,feign.template.QueryTemplate.toString,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.QueryTemplate.queryString,feign.template.Expressions.create,feign.Util.emptyToNull,feign.ribbon.LBClient.create,feign.Types.resolve,feign.RequestTemplate.getRequestVariables,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.splitQueryParameter,feign.MethodMetadata.returnType,feign.ribbon.RibbonClient.lbClient,feign.SynchronousMethodHandler.targetRequest,feign.Feign.configKey,feign.DeclarativeContract.registerClassAnnotation,feign.RequestTemplate.method,feign.AsyncResponseHandler.handleResponse,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.Feign.builder,feign.RequestTemplate.resolve,feign.RequestTemplate.queryLine,feign.template.QueryTemplate.getValues,feign.template.Template.getVariables,feign.Response.builder,feign.Util.isDefault,feign.template.Template.resolveExpression,feign.MethodMetadata.isIgnored,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.UriUtils.isReserved,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.query,feign.RequestTemplate.url,feign.ribbon.LBClient.getRequestSpecificRetryHandler,feign.RequestTemplate.headers,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.MethodMetadata.warnings,feign.Util.checkNotNull,feign.DeclarativeContract.processAnnotationsOnParameter,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.QueryTemplate.getName,feign.template.UriUtils.isEncoded,feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.ribbon.RibbonClient.execute,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.MethodMetadata.addWarning,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.getVariables,feign.ribbon.LBClient.execute,feign.DeclarativeContract.registerParameterAnnotation,feign.RequestTemplate.decodeSlash,feign.DeclarativeContract.processAnnotationOnMethod,feign.MethodMetadata.formParams,feign.Request.create,feign.RequestTemplate.hasRequestVariable,feign.template.UriUtils.pctEncode",",feign.ribbon.RibbonClient.create,feign.ReflectiveFeign.newInstance,feign.Feign.builder,feign.ribbon.RibbonClientTest.serverListKey,feign.SynchronousMethodHandler.invoke,feign.Util.checkNotNull"
feign,feign.sax.SAXDecoderTest.niceErrorOnUnconfiguredType,4,2,",feign.sax.SAXDecoderTest.statusFailedResponse,feign.Util.checkState,feign.sax.SAXDecoder.decode,feign.Request.create",",feign.sax.SAXDecoderTest.statusFailedResponse,feign.sax.SAXDecoder.decode"
feign,feign.sax.SAXDecoderTest.notFoundDecodesToNull,1,1,",feign.Response.caseInsensitiveCopyOf",",feign.Response.caseInsensitiveCopyOf"
feign,feign.sax.SAXDecoderTest.nullBodyDecodesToNull,5,4,",feign.sax.SAXDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Response.body,feign.Response.builder",",feign.sax.SAXDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Response.builder"
feign,feign.sax.SAXDecoderTest.parsesConfiguredTypes,6,2,",feign.sax.SAXDecoderTest.statusFailedResponse,feign.Util.ensureClosed,feign.sax.SAXDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.Util.checkNotNull",",feign.sax.SAXDecoderTest.statusFailedResponse,feign.sax.SAXDecoder.decode"
feign,feign.slf4j.Slf4jLoggerTest.logOnlyIfDebugEnabled,1,1,",feign.slf4j.RecordingSimpleLogger.logLevel",",feign.slf4j.RecordingSimpleLogger.logLevel"
feign,feign.slf4j.Slf4jLoggerTest.logRequestsAndResponses,7,4,",feign.Logger.logRequest,feign.slf4j.Slf4jLogger.logRequest,feign.slf4j.Slf4jLogger.logAndRebufferResponse,feign.Logger.logAndRebufferResponse,feign.slf4j.Slf4jLogger.log,feign.Response.reason,feign.slf4j.RecordingSimpleLogger.logLevel",",feign.slf4j.Slf4jLogger.logRequest,feign.slf4j.Slf4jLogger.logAndRebufferResponse,feign.slf4j.Slf4jLogger.log,feign.slf4j.RecordingSimpleLogger.logLevel"
feign,feign.slf4j.Slf4jLoggerTest.useFeignLoggerByDefault,2,2,",feign.slf4j.RecordingSimpleLogger.logLevel,feign.slf4j.Slf4jLogger.log",",feign.slf4j.RecordingSimpleLogger.logLevel,feign.slf4j.Slf4jLogger.log"
feign,feign.slf4j.Slf4jLoggerTest.useLoggerByClassIfRequested,3,2,",feign.Logger.methodTag,feign.slf4j.RecordingSimpleLogger.logLevel,feign.slf4j.Slf4jLogger.log",",feign.slf4j.RecordingSimpleLogger.logLevel,feign.slf4j.Slf4jLogger.log"
feign,feign.slf4j.Slf4jLoggerTest.useLoggerByNameIfRequested,2,2,",feign.slf4j.RecordingSimpleLogger.logLevel,feign.slf4j.Slf4jLogger.log",",feign.slf4j.RecordingSimpleLogger.logLevel,feign.slf4j.Slf4jLogger.log"
feign,feign.slf4j.Slf4jLoggerTest.useSpecifiedLoggerIfRequested,2,2,",feign.slf4j.RecordingSimpleLogger.logLevel,feign.slf4j.Slf4jLogger.log",",feign.slf4j.RecordingSimpleLogger.logLevel,feign.slf4j.Slf4jLogger.log"
feign,feign.soap.SOAPCodecTest.decodeAnnotatedParameterizedTypes,13,3,",feign.soap.SOAPDecoder.decode,feign.jaxb.JAXBContextFactory.createMarshaller,feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.createUnmarshaller,feign.RequestTemplate.header,feign.Request.create,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.soap.SOAPEncoder.encode,feign.jaxb.JAXBContextFactory.setMarshallerProperties,feign.template.Template.parseTemplate",",feign.soap.SOAPDecoder.decode,feign.soap.SOAPEncoder.encode,feign.Request.create"
feign,feign.soap.SOAPCodecTest.decodesSoap,4,2,",feign.soap.SOAPDecoder.decode,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.createUnmarshaller,feign.Request.create",",feign.soap.SOAPDecoder.decode,feign.Request.create"
feign,feign.soap.SOAPCodecTest.decodesSoap1_2Protocol,0,0,,
feign,feign.soap.SOAPCodecTest.decodesSoapWithSchemaOnEnvelope,4,1,",feign.soap.SOAPDecoder.decode,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.createUnmarshaller,feign.Response.body",",feign.soap.SOAPDecoder.decode"
feign,feign.soap.SOAPCodecTest.doesntDecodeParameterizedTypes,5,3,",feign.soap.SOAPDecoder.decode,feign.jaxb.JAXBContextFactory.getContext,feign.jaxb.JAXBContextFactory.createUnmarshaller,feign.Request.create,feign.Response.builder",",feign.soap.SOAPDecoder.decode,feign.Request.create,feign.Response.builder"
feign,feign.soap.SOAPCodecTest.doesntEncodeParameterizedTypes,1,1,",feign.soap.SOAPEncoder.encode",",feign.soap.SOAPEncoder.encode"
feign,feign.soap.SOAPCodecTest.encodesSoap,15,3,",feign.jaxb.JAXBContextFactory.createMarshaller,feign.template.Template.parseFragment,feign.RequestTemplate.body,feign.jaxb.JAXBContextFactory.getContext,feign.template.Literal.create,feign.Util.isNotBlank,feign.RequestTemplate.header,feign.assertj.FeignAssertions.assertThat,feign.assertj.RequestTemplateAssert.hasBody,feign.RequestTemplate.appendHeader,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.soap.SOAPEncoder.encode,feign.jaxb.JAXBContextFactory.setMarshallerProperties,feign.template.Template.parseTemplate",",feign.soap.SOAPEncoder.encode,feign.assertj.RequestTemplateAssert.hasBody,feign.assertj.FeignAssertions.assertThat"
feign,feign.soap.SOAPCodecTest.encodesSoapWithCustomJAXBFormattedOuput,0,0,,
feign,feign.soap.SOAPCodecTest.encodesSoapWithCustomJAXBMarshallerEncoding,0,0,,
feign,feign.soap.SOAPCodecTest.encodesSoapWithCustomJAXBNoSchemaLocation,0,0,,
feign,feign.soap.SOAPCodecTest.encodesSoapWithCustomJAXBSchemaLocation,0,0,,
feign,feign.soap.SOAPCodecTest.notFoundDecodesToNull,3,3,",feign.jaxb.JAXBDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf",",feign.jaxb.JAXBDecoder.decode,feign.Request.create,feign.Response.caseInsensitiveCopyOf"
feign,feign.soap.SOAPFaultDecoderTest.errorDecoderReturnsFeignExceptionOn503Status,8,3,",feign.soap.SOAPErrorDecoder.defaultErrorDecoder,feign.Util.toByteArray,feign.FeignException.errorStatus,feign.Util.copy,feign.Request.create,feign.soap.SOAPErrorDecoder.decode,feign.FeignException.serverErrorStatus,feign.Response.builder",",feign.soap.SOAPErrorDecoder.decode,feign.Request.create,feign.Response.builder"
feign,feign.soap.SOAPFaultDecoderTest.errorDecoderReturnsFeignExceptionOnEmptyFault,11,5,",feign.FeignException.checkRequestNotNull,feign.Types.checkNotPrimitive,feign.soap.SOAPErrorDecoder.defaultErrorDecoder,feign.Util.toByteArray,feign.FeignException.errorStatus,feign.Util.copy,feign.Util.ensureClosed,feign.Response.builder,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.FeignException.serverErrorStatus,feign.soap.SOAPErrorDecoder.decode",",feign.Types.checkNotPrimitive,feign.Response.builder,feign.Request.create,feign.Response.caseInsensitiveCopyOf,feign.soap.SOAPErrorDecoder.decode"
feign,feign.soap.SOAPFaultDecoderTest.errorDecoderReturnsSOAPFaultException,3,3,",feign.soap.SOAPFaultDecoderTest.getResourceBytes,feign.Response.caseInsensitiveCopyOf,feign.soap.SOAPErrorDecoder.decode",",feign.soap.SOAPFaultDecoderTest.getResourceBytes,feign.Response.caseInsensitiveCopyOf,feign.soap.SOAPErrorDecoder.decode"
feign,feign.soap.SOAPFaultDecoderTest.soapDecoderThrowsSOAPFaultException,2,2,",feign.soap.SOAPDecoder.decode,feign.soap.SOAPFaultDecoderTest.getResourceBytes",",feign.soap.SOAPDecoder.decode,feign.soap.SOAPFaultDecoderTest.getResourceBytes"
feign,feign.spring.SpringContractTest.composedAnnotation,39,2,",feign.mock.MockClient.getResponseBuilder,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.mock.RequestKey.buildUrl,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.caseInsensitiveCopyOf,feign.template.Template.expand,feign.mock.RequestKey.equals,feign.RequestTemplate.path,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.mock.MockClient.verifyOne,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.RequestTemplate.header,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.mock.MockTarget.apply,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.RequestTemplate.resolve,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny",",feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyOne"
feign,feign.spring.SpringContractTest.inheritance,57,2,",feign.mock.MockClient.getResponseBuilder,feign.RequestTemplate.body,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.Request.headers,feign.jackson.JacksonDecoder.decode,feign.mock.RequestKey.buildUrl,feign.RequestTemplate.queries,feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.Literal.getValue,feign.spring.Data.getContent,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.template.Template.expand,feign.RequestTemplate.path,feign.mock.RequestKey.equals,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.url,feign.mock.MockClient.verifyOne,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.Util.ensureClosed,feign.mock.RequestKey.hashCode,feign.RequestTemplate.header,feign.Request.charset,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.jackson.JacksonEncoder.encode,feign.mock.MockTarget.url,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.mock.RequestHeaders.of,feign.AsyncResponseHandler.isVoidType,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.mock.MockTarget.apply,feign.RequestTemplate.resolve,feign.Request.create,feign.template.HeaderTemplate.create,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny",",feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyOne"
feign,feign.spring.SpringContractTest.notAHttpMethod,0,0,,
feign,feign.spring.SpringContractTest.requestParam,56,2,",feign.mock.MockClient.getResponseBuilder,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.Request.headers,feign.mock.RequestKey.buildUrl,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.RequestTemplate.extractQueryTemplates,feign.RequestTemplate.queryLine,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.RequestTemplate.path,feign.mock.RequestKey.equals,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.mock.MockClient.verifyOne,feign.Response.status,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.mock.RequestKey.hashCode,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.mock.RequestKey.builder,feign.AsyncResponseHandler.isVoidType,feign.mock.MockTarget.apply,feign.template.HeaderTemplate.from,feign.template.HeaderTemplate.getValues,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny,feign.template.QueryTemplate.getValues",",feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyOne"
feign,feign.spring.SpringContractTest.requestTwoParams,63,2,",feign.mock.MockClient.getResponseBuilder,feign.template.Template.toString,feign.template.UriUtils.isEncoded,feign.Request.headers,feign.mock.RequestKey.buildUrl,feign.RequestTemplate.queries,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyTimes,feign.mock.RequestKey.equalsExtended,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.RequestTemplate.appendQuery,feign.template.Literal.getValue,feign.RequestTemplate.extractQueryTemplates,feign.template.UriUtils.isAbsolute,feign.RequestTemplate.splitQueryParameter,feign.template.UriUtils.isAlpha,feign.Util.isNotBlank,feign.Util.isBlank,feign.RequestTemplate.from,feign.RequestTemplate.queryLine,feign.RequestTemplate.request,feign.RequestTemplate.appendHeader,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.RequestTemplate.path,feign.mock.RequestKey.equals,feign.template.HeaderTemplate.expand,feign.SynchronousMethodHandler.targetRequest,feign.mock.RequestKey.create,feign.template.UriUtils.encodeInternal,feign.RequestTemplate.query,feign.template.QueryTemplate.toString,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.mock.MockClient.verifyOne,feign.RequestTemplate.headers,feign.AsyncResponseHandler.handleResponse,feign.mock.RequestKey.hashCode,feign.template.QueryTemplate.queryString,feign.RequestTemplate.header,feign.Util.checkNotNull,feign.SynchronousMethodHandler.findOptions,feign.template.UriUtils.encodeChunk,feign.mock.RequestKey.builder,feign.template.UriUtils.isUnreserved,feign.RequestTemplate.target,feign.template.Literal.create,feign.mock.MockTarget.apply,feign.template.HeaderTemplate.from,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.mock.MockClient.execute,feign.mock.MockClient.executeAny,feign.template.QueryTemplate.getValues",",feign.SynchronousMethodHandler.invoke,feign.mock.MockClient.verifyOne"
feign,feign.stream.StreamDecoderTest.shouldCloseIteratorWhenStreamClosed,2,2,",feign.Request.create,feign.stream.StreamDecoder.decode,feign.Util.ensureClosed",",feign.Request.create,feign.stream.StreamDecoder.decode,feign.Util.ensureClosed"
feign,feign.stream.StreamDecoderTest.simpleStreamTest,29,3,",feign.template.Template.toString,feign.DeclarativeContract.processAnnotationOnClass,feign.Response.close,feign.SynchronousMethodHandler.invoke,feign.Response.body,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.SynchronousMethodHandler.executeAndDecode,feign.template.UriUtils.isAbsolute,feign.MethodMetadata.addWarning,feign.ReflectiveFeign.newInstance,feign.RequestTemplate.from,feign.RequestTemplate.request,feign.RequestTemplate.uri,feign.Response.toBuilder,feign.Response.caseInsensitiveCopyOf,feign.AsyncResponseHandler.decode,feign.RequestTemplate.path,feign.template.UriUtils.encodeInternal,feign.MethodMetadata.queryMapIndex,feign.SynchronousMethodHandler.targetRequest,feign.RequestTemplate.url,feign.template.Template.parseFragment,feign.Feign.configKey,feign.template.UriTemplate.create,feign.DeclarativeContract.registerClassAnnotation,feign.AsyncResponseHandler.handleResponse,feign.stream.StreamDecoder.decode,feign.Util.ensureClosed,feign.MethodMetadata.configKey,feign.RequestTemplate.decodeSlash,feign.MethodMetadata.warnings,feign.template.UriUtils.encodeChunk,feign.DeclarativeContract.parseAndValidateMetadata,feign.template.Expressions.create,feign.DeclarativeContract.processAnnotationOnMethod,feign.RequestTemplate.target,feign.Feign.builder,feign.RequestTemplate.resolve,feign.Request.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded",",feign.Util.ensureClosed,feign.Feign.builder,feign.ReflectiveFeign.newInstance,feign.SynchronousMethodHandler.invoke"
feign,feign.template.BodyTemplateTest.bodyTemplatesSupportJsonOnlyWhenEncoded,8,2,",feign.template.Expressions.create,feign.template.BodyTemplate.expand,feign.template.Template.parseFragment,feign.template.BodyTemplate.create,feign.template.Expressions.stripBraces,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.Template.parseTemplate",",feign.template.BodyTemplate.expand,feign.template.BodyTemplate.create"
feign,feign.template.HeaderTemplateTest.append_should_preserve_order,5,2,",feign.template.Template.parseFragment,feign.Util.isNotBlank,feign.template.HeaderTemplate.append,feign.template.HeaderTemplate.create,feign.template.Template.parseTemplate",",feign.template.HeaderTemplate.create,feign.template.HeaderTemplate.append"
feign,feign.template.HeaderTemplateTest.create_should_preserve_order,1,1,",feign.template.HeaderTemplate.create",",feign.template.HeaderTemplate.create"
feign,feign.template.HeaderTemplateTest.it_should_return_expanded,7,2,",feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.Template.resolveExpression,feign.template.HeaderTemplate.create,feign.template.Template.expand,feign.template.HeaderTemplate.expand,feign.template.Template.parseTemplate",",feign.template.HeaderTemplate.create,feign.template.HeaderTemplate.expand"
feign,feign.template.HeaderTemplateTest.it_should_return_expanded_literals,0,0,,
feign,feign.template.HeaderTemplateTest.it_should_return_name,3,1,",feign.template.Template.parseFragment,feign.template.HeaderTemplate.create,feign.template.Template.parseTemplate",",feign.template.HeaderTemplate.create"
feign,feign.template.HeaderTemplateTest.it_should_throw_exception_when_name_is_empty,1,1,",feign.template.HeaderTemplate.create",",feign.template.HeaderTemplate.create"
feign,feign.template.HeaderTemplateTest.it_should_throw_exception_when_name_is_null,1,1,",feign.template.HeaderTemplate.create",",feign.template.HeaderTemplate.create"
feign,feign.template.HeaderTemplateTest.it_should_throw_exception_when_value_is_null,1,1,",feign.template.HeaderTemplate.create",",feign.template.HeaderTemplate.create"
feign,feign.template.HeaderTemplateTest.it_should_throw_exception_when_value_is_null_for_chunks,1,1,",feign.template.HeaderTemplate.from",",feign.template.HeaderTemplate.from"
feign,feign.template.QueryTemplateTest.collectionFormat,10,2,",feign.template.UriUtils.encodeChunk,feign.template.Template.parseFragment,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.QueryTemplate.queryString,feign.template.QueryTemplate.create,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.expand,feign.template.UriUtils.pctEncode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.emptyParameterRemains,11,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.expand,feign.template.QueryTemplate.queryString,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.expandCollection,15,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.UriUtils.isUnreserved,feign.template.Expressions.stripBraces,feign.template.UriUtils.isDigit,feign.template.QueryTemplate.expand,feign.template.QueryTemplate.queryString,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.expandCollectionValueWithBrackets,0,0,,
feign,feign.template.QueryTemplateTest.expandCollectionValueWithDollar,13,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.QueryTemplate.expand,feign.template.QueryTemplate.queryString,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.expandCollectionWithBlanks,0,0,,
feign,feign.template.QueryTemplateTest.expandEmptyCollection,8,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.QueryTemplate.queryString,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.QueryTemplate.expand,feign.template.UriUtils.encode,feign.template.Template.expand,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.expandMultipleValues,11,2,",feign.template.UriUtils.encodeChunk,feign.template.Template.parseFragment,feign.template.QueryTemplate.expand,feign.template.QueryTemplate.queryString,feign.template.QueryTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.expandName,16,2,",feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.UriUtils.encode,feign.template.Template.parseTemplate,feign.template.Expression.toString,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseFragment,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.queryString,feign.template.Expression.getName,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriUtils.isUnreserved,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.pctEncode",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.expandNameUnresolved,0,0,,
feign,feign.template.QueryTemplateTest.expandPureParameter,12,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.Expressions.stripBraces,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.expand,feign.template.UriUtils.encode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.expandPureParameterWithSlash,0,0,,
feign,feign.template.QueryTemplateTest.expandSingleValue,17,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.Expressions.stripBraces,feign.template.UriUtils.isUnreserved,feign.template.UriUtils.isAlpha,feign.template.QueryTemplate.expand,feign.template.UriUtils.encode,feign.template.QueryTemplate.queryString,feign.template.QueryTemplate.create,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.pctEncode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.expandSingleValueWithComma,0,0,,
feign,feign.template.QueryTemplateTest.expandSingleValueWithJson,0,0,,
feign,feign.template.QueryTemplateTest.expandSingleValueWithPipe,0,0,,
feign,feign.template.QueryTemplateTest.expandSingleValueWithSpace,0,0,,
feign,feign.template.QueryTemplateTest.expandSingleValueWithTab,0,0,,
feign,feign.template.QueryTemplateTest.explicitNullValuesAreRemoved,10,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.templateToQueryString,6,2,",feign.template.QueryTemplate.toString,feign.template.Template.toString,feign.template.Template.parseFragment,feign.template.QueryTemplate.queryString,feign.template.QueryTemplate.create,feign.template.QueryTemplate.getValues,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.create,feign.template.QueryTemplate.toString"
feign,feign.template.QueryTemplateTest.unresolvedMultiValueQueryTemplates,8,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.QueryTemplate.create,feign.template.Template.encodeLiteral,feign.template.QueryTemplate.expand,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.QueryTemplateTest.unresolvedQuery,7,2,",feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.QueryTemplate.queryString,feign.template.QueryTemplate.create,feign.template.QueryTemplate.expand,feign.template.Template.expand,feign.template.Template.parseTemplate",",feign.template.QueryTemplate.expand,feign.template.QueryTemplate.create"
feign,feign.template.UriTemplateTest.emptyRelativeTemplate,7,1,",feign.template.UriUtils.encodeChunk,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.emptyTemplate,0,0,,
feign,feign.template.UriTemplateTest.encodeLiterals,7,1,",feign.template.UriUtils.encodeChunk,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Template.encodeLiteral,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.encodeReserved,9,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.UriUtils.encode,feign.template.Template.resolveExpression,feign.template.Template.expand,feign.template.UriUtils.pctEncode,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.encodeSlashes,10,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Expressions.stripBraces,feign.template.UriUtils.encode,feign.template.Template.resolveExpression,feign.template.Template.expand,feign.template.UriUtils.pctEncode,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.encodeVariables,10,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.UriUtils.encode,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.UriUtils.pctEncode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.ensurePlusInEncodedAs2BOnQuery,13,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.UriUtils.isUnreserved,feign.template.UriUtils.isAlpha,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.ensurePlusIsSupportedOnPath,8,1,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Template.encodeLiteral,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.incompleteTemplateIsALiteral,3,1,",feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Template.expand,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.literalTemplate,9,1,",feign.template.UriUtils.encodeChunk,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.UriUtils.isEncoded,feign.template.UriUtils.isUnreserved,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.missingVariablesOnPathAreRemoved,11,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Expressions.stripBraces,feign.template.Template.getVariables,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.Template.getVariables,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.nestedExpressionsAreLiterals,12,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.UriUtils.isUnreserved,feign.template.UriUtils.isDigit,feign.template.UriUtils.encode,feign.template.Template.getVariables,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.pctEncode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.Template.getVariables,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.nullTemplate,1,1,",feign.template.UriTemplate.create",",feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.rejectEmptyExpressions,9,1,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Expressions.stripBraces,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.simpleTemplate,17,3,",feign.template.UriUtils.isReserved,feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Expression.matches,feign.template.Template.parseTemplate,feign.template.Template.parseFragment,feign.template.UriTemplate.create,feign.template.Expressions.stripBraces,feign.template.UriUtils.isUnreserved,feign.template.Template.resolveExpression,feign.template.UriUtils.isGenericDelimiter,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.getVariables",",feign.template.Template.expand,feign.template.UriTemplate.create,feign.template.Template.getVariables"
feign,feign.template.UriTemplateTest.simpleTemplateMultipleExpressions,0,0,,
feign,feign.template.UriTemplateTest.simpleTemplateMultipleSequentialExpressions,13,3,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Literal.create,feign.template.Template.getVariables,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.Template.getVariables,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.simpleTemplateUnresolvedVariablesAreRemoved,0,0,,
feign,feign.template.UriTemplateTest.simpleTemplateWithRegularExpressions,0,0,,
feign,feign.template.UriTemplateTest.simpleTemplateWithRegularExpressionsValidation,0,0,,
feign,feign.template.UriTemplateTest.skipAlreadyEncodedLiteral,6,1,",feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Template.encodeLiteral,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.skipAlreadyEncodedVariable,10,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.UriUtils.encode,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.pctEncode,feign.template.Template.expand,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.UriUtils.encode,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.skipSlashes,10,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.UriUtils.pctEncode,feign.template.Template.resolveExpression,feign.template.Template.encodeLiteral,feign.template.Template.expand,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.Template.expand,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.substituteNullMap,2,2,",feign.template.Template.expand,feign.template.UriTemplate.create",",feign.template.Template.expand,feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.testLiteralTemplateWithQueryString,8,1,",feign.template.UriUtils.encodeChunk,feign.template.UriTemplate.create,feign.template.Template.parseFragment,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.UriTemplate.create"
feign,feign.template.UriTemplateTest.testToString,10,2,",feign.template.UriUtils.encodeChunk,feign.template.Expressions.create,feign.template.Template.parseFragment,feign.template.Template.toString,feign.template.UriTemplate.create,feign.template.Expression.getValue,feign.template.Template.encodeLiteral,feign.template.UriUtils.isEncoded,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal,feign.template.Template.parseTemplate",",feign.template.UriTemplate.create,feign.template.Template.toString"
feign,feign.template.UriUtilsTest.pctEncode,5,1,",feign.template.UriUtils.encodeChunk,feign.template.UriUtils.isUnreserved,feign.template.UriUtils.isAlpha,feign.template.UriUtils.encode,feign.template.UriUtils.encodeInternal",",feign.template.UriUtils.encode"
feign,feign.template.UriUtilsTest.pctEncodeWithReservedCharacters,0,0,,
