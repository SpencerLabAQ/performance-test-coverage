Project Name,Test Name,Count,Direct Count,Methods,Direct Methods
iri,com.iota.iri.BundleValidatorTest.checkBundleNonTailApproval,14,2,",com.iota.iri.BundleValidator.validateBundleTailApproval,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.getBranchTransaction,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.bytes,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validateBundleTailApproval"
iri,com.iota.iri.BundleValidatorTest.checkBundleTailApproval,16,2,",com.iota.iri.BundleValidator.validateBundleTailApproval,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.controllers.TransactionViewModel.getBranchTransaction,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.bytes,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validateBundleTailApproval"
iri,com.iota.iri.BundleValidatorTest.checkBundleTransactionsApproval,15,1,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.crypto.Curl.reset,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.utils.Serializer.serialize,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs"
iri,com.iota.iri.BundleValidatorTest.checkBundleTransactionsApprovalFailure,12,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.BundleValidator.validateBundleTransactionsApproval,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.validateBundleTransactionsApproval,com.iota.iri.BundleValidatorTest.persistAndMapTxs"
iri,com.iota.iri.BundleValidatorTest.checkInconsistencyOfConsistentBundle,14,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.bytes,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.BundleValidator.isInconsistent,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.isInconsistent,com.iota.iri.BundleValidatorTest.persistAndMapTxs"
iri,com.iota.iri.BundleValidatorTest.checkInconsistencyOfInconsistentBundle,20,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.BundleValidator.isInconsistent,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.isInconsistent,com.iota.iri.BundleValidatorTest.persistAndMapTxs"
iri,com.iota.iri.BundleValidatorTest.validateBiggerValidBundle,38,2,"com.iota.iri.utils.Converter.getTrits,com.iota.iri.controllers.TransactionViewModel.update,,com.iota.iri.BundleValidator.validateBundleTailApproval,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.controllers.TransactionViewModel.getBranchTransaction,com.iota.iri.storage.Tangle.update,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.longValue,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.controllers.TransactionViewModel.setValidity,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validateBundleTransactionsApproval,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validateBundleHashOfBundleWithInvalidBundleHash,16,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.BundleValidatorTest.persistAndMapTxs"
iri,com.iota.iri.BundleValidatorTest.validateBundleHashOfValidBundle,22,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.BundleValidatorTest.persistAndMapTxs"
iri,com.iota.iri.BundleValidatorTest.validateBundleNonTailApprovalFailure,36,5,"com.iota.iri.utils.Converter.getTrits,com.iota.iri.controllers.TransactionViewModel.update,,com.iota.iri.BundleValidator.validateBundleTailApproval,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.storage.Tangle.update,com.iota.iri.controllers.TransactionViewModel.getBranchTransaction,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.storage.Tangle.updateMessageQueueProvider,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.crypto.Curl.reset,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.controllers.TransactionViewModel.setValidity,com.iota.iri.utils.Converter.trits,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.getValidity,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.utils.Converter.trits,com.iota.iri.BundleValidator.validate,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.BundleValidatorTest.validateBundleWithInvalidBundleHashOnNonTailTransaction,21,3,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.crypto.Curl.reset,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.BundleValidator.getMode,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate,com.iota.iri.controllers.TransactionViewModel.fromHash"
iri,com.iota.iri.BundleValidatorTest.validateBundleWithInvalidBundleHashOnTailTransaction,17,3,"com.iota.iri.utils.Converter.getTrits,,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.utils.Converter.longValue,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate,com.iota.iri.controllers.TransactionViewModel.fromHash"
iri,com.iota.iri.BundleValidatorTest.validateBundleWithInvalidIndices,23,2,"com.iota.iri.utils.Converter.getTrits,com.iota.iri.controllers.TransactionViewModel.update,,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.storage.Tangle.update,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.crypto.Curl.reset,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.controllers.TransactionViewModel.setValidity,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validateBundleWithInvalidSignature,39,3,",com.iota.iri.controllers.TransactionViewModel.update,com.iota.iri.utils.Converter.getTrits,com.iota.iri.BundleValidator.validateBundleTailApproval,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.storage.Tangle.update,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.controllers.TransactionViewModel.getBranchTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.longValue,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.controllers.TransactionViewModel.setValidity,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.BundleValidator.validateBundleTransactionsApproval,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch","com.iota.iri.controllers.TransactionViewModel.fromHash,,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validateBundleWithMissingNonTailTransaction,17,3,"com.iota.iri.utils.Converter.getTrits,,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.getValidity,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.getValidity,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validateBundleWithMissingTailTransaction,14,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.longValue,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch","com.iota.iri.controllers.TransactionViewModel.fromHash,,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validateSemanticsOfBundleWhichSpendsMoreThanMaxSupply,14,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.bytes,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.utils.Converter.longValue,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.crypto.Curl.reset,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.BundleValidatorTest.persistAndMapTxs"
iri,com.iota.iri.BundleValidatorTest.validateSemanticsOfBundleWithInvalidIndices,13,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.utils.Serializer.serialize,com.iota.iri.BundleValidator.hasMode,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.BundleValidatorTest.persistAndMapTxs"
iri,com.iota.iri.BundleValidatorTest.validateSemanticsOfBundleWithMissingTransaction,11,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.utils.Serializer.serialize,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.BundleValidatorTest.persistAndMapTxs"
iri,com.iota.iri.BundleValidatorTest.validateSemanticsOfValidBundle,17,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.value,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.BundleValidatorTest.persistAndMapTxs"
iri,com.iota.iri.BundleValidatorTest.validateSignaturesOfBundleWithInvalidSignatures,25,3,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validateSignatures"
iri,com.iota.iri.BundleValidatorTest.validateSignaturesOfValidBundle,21,3,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.longValue,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.utils.Converter.trits,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.BundleValidator.hasMode,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validateSignatures"
iri,com.iota.iri.BundleValidatorTest.validateValidBundle,34,2,"com.iota.iri.utils.Converter.getTrits,com.iota.iri.controllers.TransactionViewModel.update,,com.iota.iri.BundleValidator.validateBundleTailApproval,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.storage.Tangle.update,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.controllers.TransactionViewModel.getBranchTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.controllers.TransactionViewModel.value,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.crypto.Curl.reset,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.controllers.TransactionViewModel.setValidity,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validateBundleTransactionsApproval,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.model.AbstractHash.equals,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validationModeAll,38,2,"com.iota.iri.utils.Converter.getTrits,,com.iota.iri.BundleValidator.validateBundleTailApproval,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.controllers.TransactionViewModel.getBranchTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.longValue,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.crypto.Curl.reset,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validateBundleTransactionsApproval,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.BundleValidator.hasMode,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validationModeAllWithInvalidBundle,0,0,,
iri,com.iota.iri.BundleValidatorTest.validationModeBundleHash,25,2,"com.iota.iri.utils.Converter.getTrits,,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validationModeSignaturesOnBundleWithEmptyBundleHash,32,2,"com.iota.iri.utils.Converter.getTrits,,com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.bytes,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.crypto.Curl.reset,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validationModeSignaturesOnBundleWithInvalidBundleHashAndSemantics,35,2,"com.iota.iri.utils.Converter.getTrits,,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validationModeSignaturesOnBundleWithInvalidSemantics,32,2,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.validationModeSignaturesWithInvalidSignatures,34,2,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.longValue,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.storage.Tangle.load,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.BundleValidatorTest.verifyValidateSkippingChecks,37,2,",com.iota.iri.controllers.TransactionViewModel.update,com.iota.iri.utils.Converter.getTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.storage.Tangle.update,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.controllers.TransactionViewModel.setValidity,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.BundleValidator.loadTransactionsFromTangle,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.crypto.Kerl.reset,com.iota.iri.BundleValidator.validateBundleHash,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.BundleValidator.validateSignatures,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.BundleValidator.validateBundleSemantics,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.BundleValidator.validate,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.BundleValidatorTest.persistAndMapTxs,com.iota.iri.BundleValidator.validate"
iri,com.iota.iri.IXITest.processCommandEmpty,3,2,"com.iota.iri.IXI.processCommand,,com.iota.iri.service.dto.AbstractResponse.toString,com.iota.iri.service.dto.AbstractResponse.hashCode","com.iota.iri.IXI.processCommand,,com.iota.iri.service.dto.AbstractResponse.toString"
iri,com.iota.iri.IXITest.processCommandError,3,2,"com.iota.iri.IXI.processCommand,,com.iota.iri.service.dto.AbstractResponse.toString,com.iota.iri.service.dto.AbstractResponse.hashCode","com.iota.iri.IXI.processCommand,,com.iota.iri.service.dto.AbstractResponse.toString"
iri,com.iota.iri.IXITest.processCommandNull,3,2,",com.iota.iri.IXI.processCommand,com.iota.iri.service.dto.AbstractResponse.toString,com.iota.iri.service.dto.AbstractResponse.hashCode",",com.iota.iri.IXI.processCommand,com.iota.iri.service.dto.AbstractResponse.toString"
iri,com.iota.iri.IXITest.processCommandUnknown,3,2,"com.iota.iri.IXI.processCommand,,com.iota.iri.service.dto.AbstractResponse.toString,com.iota.iri.service.dto.AbstractResponse.hashCode","com.iota.iri.IXI.processCommand,,com.iota.iri.service.dto.AbstractResponse.toString"
iri,com.iota.iri.IXITest.processIXICommandUnknown,3,2,"com.iota.iri.IXI.processCommand,,com.iota.iri.service.dto.AbstractResponse.toString,com.iota.iri.service.dto.AbstractResponse.hashCode","com.iota.iri.IXI.processCommand,,com.iota.iri.service.dto.AbstractResponse.toString"
iri,com.iota.iri.MainInjectionConfigurationTest.configure,2,1,",com.iota.iri.MainInjectionConfiguration.configure,com.iota.iri.MainInjectionConfigurationTest.testInjector",",com.iota.iri.MainInjectionConfigurationTest.testInjector"
iri,com.iota.iri.MainInjectionConfigurationTest.givenLocalSnapshotsDisabledWhenProvideLocalSnapshotManagerThenNull,8,6,",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotManager,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.MainInjectionConfiguration.provideMilestoneService,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.provideSnapshotService,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotManager,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.provideMilestoneService,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.provideSnapshotService"
iri,com.iota.iri.MainInjectionConfigurationTest.givenLocalSnapshotsDisabledWhenProvideTransactionPrunerThenNull,5,3,",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService"
iri,com.iota.iri.MainInjectionConfigurationTest.givenPruningDisabledWhenProvideTransactionPrunerThenNull,5,4,",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService"
iri,com.iota.iri.MainInjectionConfigurationTest.provideApi,13,10,",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotManager,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.provideTipSelector,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.MainInjectionConfiguration.provideApi,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideSeenMilestonesRetriever,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.service.API.getTrytes,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.provideTransactionValidator,com.iota.iri.MainInjectionConfiguration.provideIxi,com.iota.iri.service.API.wereAddressesSpentFrom,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotManager,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.provideTipSelector,com.iota.iri.MainInjectionConfiguration.provideApi,com.iota.iri.MainInjectionConfiguration.provideSeenMilestonesRetriever,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.provideTransactionValidator,com.iota.iri.MainInjectionConfiguration.provideIxi"
iri,com.iota.iri.MainInjectionConfigurationTest.provideIota,10,8,",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotManager,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.provideTipSelector,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.MainInjectionConfiguration.provideSeenMilestonesRetriever,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.provideTransactionValidator,com.iota.iri.MainInjectionConfiguration.configure,com.iota.iri.MainInjectionConfiguration.provideLedgerService",",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotManager,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.provideTipSelector,com.iota.iri.MainInjectionConfiguration.provideSeenMilestonesRetriever,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.provideTransactionValidator,com.iota.iri.MainInjectionConfiguration.provideLedgerService"
iri,com.iota.iri.MainInjectionConfigurationTest.provideIxi,11,9,",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotManager,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.service.validation.TransactionValidator.setMwm,com.iota.iri.MainInjectionConfiguration.provideInSyncService,com.iota.iri.MainInjectionConfiguration.provideTipSelector,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.MainInjectionConfiguration.provideSeenMilestonesRetriever,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideIota,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.provideTransactionValidator,com.iota.iri.MainInjectionConfiguration.provideIxi,com.iota.iri.MainInjectionConfiguration.configure,com.iota.iri.MainInjectionConfiguration.provideLedgerService",",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotManager,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.provideInSyncService,com.iota.iri.MainInjectionConfiguration.provideTipSelector,com.iota.iri.MainInjectionConfiguration.provideSeenMilestonesRetriever,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideIota,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.provideTransactionValidator,com.iota.iri.MainInjectionConfiguration.provideIxi,com.iota.iri.MainInjectionConfiguration.provideLedgerService"
iri,com.iota.iri.MainInjectionConfigurationTest.provideLedgerService,5,3,",com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService"
iri,com.iota.iri.MainInjectionConfigurationTest.provideLocalSnapshotManager,8,7,",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotManager,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.MainInjectionConfiguration.provideMilestoneService,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.provideSnapshotProvider,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotManager,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.provideMilestoneService,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.provideSnapshotProvider"
iri,com.iota.iri.MainInjectionConfigurationTest.provideLocalSnapshotsPersistenceProvider,3,2,",com.iota.iri.MainInjectionConfiguration.configure,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider",",com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider"
iri,com.iota.iri.MainInjectionConfigurationTest.provideMilestoneService,3,2,",com.iota.iri.MainInjectionConfiguration.configure,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider",",com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider"
iri,com.iota.iri.MainInjectionConfigurationTest.provideMilestoneSolidifier,7,5,",com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideMilestoneSolidifier,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideTransactionSolidifier"
iri,com.iota.iri.MainInjectionConfigurationTest.provideSeenMilestonesRetriever,4,3,",com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.provideSeenMilestonesRetriever,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.provideSeenMilestonesRetriever"
iri,com.iota.iri.MainInjectionConfigurationTest.provideSnapshotProvider,3,2,",com.iota.iri.MainInjectionConfiguration.configure,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider",",com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider"
iri,com.iota.iri.MainInjectionConfigurationTest.provideSnapshotService,4,3,",com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideSnapshotProvider,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideSnapshotProvider,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider"
iri,com.iota.iri.MainInjectionConfigurationTest.provideSpentAddressesProvider,3,2,",com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider"
iri,com.iota.iri.MainInjectionConfigurationTest.provideSpentAddressesService,3,2,",com.iota.iri.MainInjectionConfiguration.configure,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider",",com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider"
iri,com.iota.iri.MainInjectionConfigurationTest.provideTransactionPruner,7,5,",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideSnapshotProvider,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfiguration.provideTransactionPruner,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideSpentAddressesService,com.iota.iri.MainInjectionConfiguration.provideSnapshotProvider"
iri,com.iota.iri.MainInjectionConfigurationTest.provideTransactionValidator,4,3,",com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider,com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideTransactionValidator,com.iota.iri.MainInjectionConfiguration.configure",",com.iota.iri.MainInjectionConfigurationTest.testInjector,com.iota.iri.MainInjectionConfiguration.provideTransactionValidator,com.iota.iri.MainInjectionConfiguration.provideLocalSnapshotsPersistenceProvider"
iri,com.iota.iri.conf.ConfigFactoryTest.createFromFileTestnetWithBoolean,4,2,"com.iota.iri.conf.TestnetConfig.setCoordinator,,com.iota.iri.conf.deserializers.CustomBoolDeserializer.deserialize,com.iota.iri.utils.Converter.trits,com.iota.iri.conf.deserializers.CustomStringDeserializer.deserialize,com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigFactoryTest.createFromFileTestnetWithFileNotFound,1,1,",com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigFactoryTest.createFromFileTestnetWithInteger,4,2,",com.iota.iri.conf.TestnetConfig.setCoordinator,com.iota.iri.utils.Converter.trits,com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigFactoryTest.createFromFileTestnetWithTestnetFalseAndFalse,2,2,",com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigFactoryTest.createFromFileTestnetWithTestnetFalseAndTrue,4,2,"com.iota.iri.conf.TestnetConfig.setCoordinator,,com.iota.iri.conf.BaseIotaConfig.setZmqEnabled,com.iota.iri.conf.deserializers.CustomBoolDeserializer.deserialize,com.iota.iri.utils.Converter.trits,com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigFactoryTest.createFromFileTestnetWithTestnetTrueAndFalse,5,2,"com.iota.iri.conf.TestnetConfig.setCoordinator,,com.iota.iri.conf.deserializers.CustomBoolDeserializer.deserialize,com.iota.iri.utils.Converter.trits,com.iota.iri.conf.deserializers.CustomStringDeserializer.deserialize,com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigFactoryTest.createFromFileTestnetWithTestnetTrueAndTrue,4,2,",com.iota.iri.conf.deserializers.CustomBoolDeserializer.deserialize,com.iota.iri.conf.deserializers.CustomStringDeserializer.deserialize,com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigFactoryTest.createFromFileTestnetWithTrailingSpaces,4,3,",com.iota.iri.conf.TestnetConfig.setCoordinator,com.iota.iri.model.AbstractHash.equals,com.iota.iri.utils.Converter.trits,com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactoryTest.createTestnetConfigFile,com.iota.iri.model.AbstractHash.equals,com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigFactoryTest.createIotaConfigMainnet,1,1,",com.iota.iri.conf.ConfigFactory.createIotaConfig",",com.iota.iri.conf.ConfigFactory.createIotaConfig"
iri,com.iota.iri.conf.ConfigFactoryTest.createIotaConfigTestnet,0,0,,
iri,com.iota.iri.conf.ConfigTest.backwardsIniCompatibilityTest,2,2,",com.iota.iri.conf.ConfigTest.deriveNameFromSetter,com.iota.iri.utils.IotaUtils.getAllSetters",",com.iota.iri.conf.ConfigTest.deriveNameFromSetter,com.iota.iri.utils.IotaUtils.getAllSetters"
iri,com.iota.iri.conf.ConfigTest.pruningSnapshotDelayBelowMin,2,1,",com.iota.iri.conf.BaseIotaConfig.setLocalSnapshotsPruningDelay,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigTest.pruningSnapshotDelayIsMin,1,1,",com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigTest.testArgsParsingMainnet,8,2,",com.iota.iri.conf.BaseIotaConfig.setZmqEnabled,com.iota.iri.utils.IotaUtils.getIriVersion,com.iota.iri.conf.BaseIotaConfig.setRemoteLimitApi,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs,com.iota.iri.utils.IotaUtils.splitStringToImmutableList,com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.setRemoteTrustedApiHosts,com.iota.iri.conf.BaseIotaConfig.setNeighbors",",com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs"
iri,com.iota.iri.conf.ConfigTest.testArgsParsingTestnet,7,2,"com.iota.iri.conf.TestnetConfig.setCoordinator,com.iota.iri.model.AbstractHash.equals,,com.iota.iri.utils.IotaUtils.getIriVersion,com.iota.iri.conf.BaseIotaConfig.setRemoteLimitApi,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs,com.iota.iri.conf.BaseIotaConfig.getMaxDepth,com.iota.iri.conf.TestnetConfig.getCoordinatorSignatureMode,com.iota.iri.utils.IotaUtils.splitStringToImmutableList,com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.setNeighbors,com.iota.iri.utils.Converter.trits,com.iota.iri.conf.TestnetConfig.isDontValidateTestnetMilestoneSig",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs,com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.TestnetConfig.isDontValidateTestnetMilestoneSig"
iri,com.iota.iri.conf.ConfigTest.testDontValidateMIlestoneSigDefaultValue,1,1,",com.iota.iri.conf.ConfigFactory.createIotaConfig",",com.iota.iri.conf.ConfigFactory.createIotaConfig"
iri,com.iota.iri.conf.ConfigTest.testIniParsingMainnet,5,1,",com.iota.iri.utils.IotaUtils.splitStringToImmutableList,com.iota.iri.conf.BaseIotaConfig.setNeighbors,com.iota.iri.conf.deserializers.CustomBoolDeserializer.deserialize,com.iota.iri.conf.BaseIotaConfig.setRemoteTrustedApiHosts,com.iota.iri.conf.deserializers.CustomStringDeserializer.deserialize,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigTest.testIniParsingTestnet,5,2,",com.iota.iri.utils.IotaUtils.splitStringToImmutableList,com.iota.iri.conf.deserializers.CustomBoolDeserializer.deserialize,com.iota.iri.conf.TestnetConfig.setNumberOfKeysInMilestone,com.iota.iri.conf.BaseIotaConfig.isRescanDb,com.iota.iri.conf.TestnetConfig.getMwm,com.iota.iri.conf.BaseIotaConfig.setNeighbors,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.BaseIotaConfig.isRescanDb,com.iota.iri.conf.TestnetConfig.getMwm,com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigTest.testInvalidIni,3,1,"com.iota.iri.conf.deserializers.CustomBoolDeserializer.deserialize,,com.iota.iri.conf.deserializers.CustomBoolDeserializer.parseNull,com.iota.iri.conf.ConfigFactory.createFromFile",",com.iota.iri.conf.ConfigFactory.createFromFile"
iri,com.iota.iri.conf.ConfigTest.testRemoteFlag,3,2,",com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.utils.IotaUtils.getIriVersion,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs",",com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs"
iri,com.iota.iri.conf.ZMQConfigTest.getZmqIpc,4,2,",com.iota.iri.conf.BaseIotaConfig.getDbCacheSize,com.iota.iri.utils.IotaUtils.getIriVersion,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs,com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.setZmqIpc",",com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs"
iri,com.iota.iri.conf.ZMQConfigTest.getZmqPort,3,1,",com.iota.iri.conf.BaseIotaConfig.getDbCacheSize,com.iota.iri.utils.IotaUtils.getIriVersion,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs",",com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs"
iri,com.iota.iri.conf.ZMQConfigTest.getZmqThreads,3,2,",com.iota.iri.utils.IotaUtils.getIriVersion,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs,com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.setZmqThreads,com.iota.iri.conf.BaseIotaConfig.getMaxFindTransactions",",com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs"
iri,com.iota.iri.conf.ZMQConfigTest.isZmqEnableIpc,3,2,",com.iota.iri.utils.IotaUtils.getIriVersion,com.iota.iri.conf.BaseIotaConfig.getNeighbors,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs,com.iota.iri.conf.ConfigFactory.createIotaConfig",",com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs"
iri,com.iota.iri.conf.ZMQConfigTest.isZmqEnableTcp,4,2,",com.iota.iri.conf.BaseIotaConfig.getLocalSnapshotsDbLogPath,com.iota.iri.utils.IotaUtils.getIriVersion,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs,com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.getCacheSizeBytes",",com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs"
iri,com.iota.iri.conf.ZMQConfigTest.isZmqEnabled,3,2,",com.iota.iri.utils.IotaUtils.getIriVersion,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs,com.iota.iri.conf.BaseIotaConfig.getRemoteLimitApi,com.iota.iri.conf.ConfigFactory.createIotaConfig",",com.iota.iri.conf.ConfigFactory.createIotaConfig,com.iota.iri.conf.BaseIotaConfig.parseConfigFromArgs"
iri,com.iota.iri.conf.ZMQConfigTest.isZmqEnabledLegacy,0,0,,
iri,com.iota.iri.controllers.BundleViewModelTest.firstShouldFindTx,17,5,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.first,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.storage.Tangle.getFirst,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.modelAndIndex,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.BundleViewModel.first,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.controllers.BundleViewModel.getHashes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.BundleViewModel.first,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.controllers.BundleViewModel.getHashes,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.controllers.BundleViewModelTest.fromHash,0,0,,
iri,com.iota.iri.controllers.BundleViewModelTest.getTail,0,0,,
iri,com.iota.iri.controllers.BundleViewModelTest.getTransactionViewModels,0,0,,
iri,com.iota.iri.controllers.BundleViewModelTest.quietFromHash,0,0,,
iri,com.iota.iri.controllers.BundleViewModelTest.quietGetTail,0,0,,
iri,com.iota.iri.controllers.MilestoneViewModelTest.first,10,3,"com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.controllers.MilestoneViewModel.first,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.modelAndIndex,,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.first,com.iota.iri.model.IntegerIndex.bytes,com.iota.iri.model.persistables.Milestone.bytes,com.iota.iri.storage.Tangle.getFirst,com.iota.iri.utils.Converter.trits,com.iota.iri.storage.Tangle.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save","com.iota.iri.controllers.MilestoneViewModel.first,com.iota.iri.utils.Converter.trits,com.iota.iri.controllers.MilestoneViewModel.store,"
iri,com.iota.iri.controllers.MilestoneViewModelTest.firstWithSnapshot,0,0,,
iri,com.iota.iri.controllers.MilestoneViewModelTest.getHash,1,1,",com.iota.iri.utils.Converter.trits",",com.iota.iri.utils.Converter.trits"
iri,com.iota.iri.controllers.MilestoneViewModelTest.getMilestone,4,2,",com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.storage.Tangle.load,com.iota.iri.model.persistables.Milestone.read,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.controllers.MilestoneViewModel.clear,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.storage.Tangle.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.controllers.MilestoneViewModel.clear,com.iota.iri.controllers.MilestoneViewModel.load"
iri,com.iota.iri.controllers.MilestoneViewModelTest.index,1,1,",com.iota.iri.utils.Converter.trits",",com.iota.iri.utils.Converter.trits"
iri,com.iota.iri.controllers.MilestoneViewModelTest.initSnapshot,0,0,,
iri,com.iota.iri.controllers.MilestoneViewModelTest.latest,6,2,"com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.modelAndIndex,,com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.utils.Converter.trits,com.iota.iri.storage.Tangle.getLatest,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.latest,com.iota.iri.controllers.MilestoneViewModel.latest,com.iota.iri.storage.Tangle.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save",",com.iota.iri.utils.Converter.trits,com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.controllers.MilestoneViewModel.latest"
iri,com.iota.iri.controllers.MilestoneViewModelTest.latestSnapshot,5,2,"com.iota.iri.controllers.MilestoneViewModel.store,,com.iota.iri.model.persistables.Milestone.bytes,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.storage.Tangle.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save","com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.utils.Converter.trits,"
iri,com.iota.iri.controllers.MilestoneViewModelTest.next,17,4,"com.iota.iri.controllers.MilestoneViewModel.first,,com.iota.iri.model.IntegerIndex.read,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.first,com.iota.iri.controllers.MilestoneViewModel.findClosestNextMilestone,com.iota.iri.storage.Tangle.getFirst,com.iota.iri.model.persistables.Milestone.bytes,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.next,com.iota.iri.model.persistables.Milestone.read,com.iota.iri.controllers.MilestoneViewModel.next,com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.modelAndIndex,com.iota.iri.utils.Serializer.getInteger,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.next,com.iota.iri.storage.Tangle.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save","com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.controllers.MilestoneViewModel.first,,com.iota.iri.controllers.MilestoneViewModel.findClosestNextMilestone,com.iota.iri.controllers.MilestoneViewModel.next"
iri,com.iota.iri.controllers.MilestoneViewModelTest.nextGreaterThan,0,0,,
iri,com.iota.iri.controllers.MilestoneViewModelTest.nextWithSnapshot,6,2,"com.iota.iri.controllers.MilestoneViewModel.store,,com.iota.iri.model.IntegerIndex.bytes,com.iota.iri.model.persistables.Milestone.bytes,com.iota.iri.utils.Converter.trits,com.iota.iri.storage.Tangle.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save","com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.utils.Converter.trits,"
iri,com.iota.iri.controllers.MilestoneViewModelTest.prevBefore,7,2,"com.iota.iri.controllers.MilestoneViewModel.store,,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.IntegerIndex.bytes,com.iota.iri.model.persistables.Milestone.bytes,com.iota.iri.controllers.MilestoneViewModel.findClosestPrevMilestone,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.storage.Tangle.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save","com.iota.iri.controllers.MilestoneViewModel.store,,com.iota.iri.controllers.MilestoneViewModel.findClosestPrevMilestone"
iri,com.iota.iri.controllers.MilestoneViewModelTest.previous,8,2,"com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.modelAndIndex,,com.iota.iri.storage.Tangle.previous,com.iota.iri.model.persistables.Milestone.bytes,com.iota.iri.controllers.MilestoneViewModel.previous,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.previous,com.iota.iri.storage.Tangle.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save","com.iota.iri.controllers.MilestoneViewModel.store,,com.iota.iri.controllers.MilestoneViewModel.previous"
iri,com.iota.iri.controllers.MilestoneViewModelTest.snapshot,0,0,,
iri,com.iota.iri.controllers.MilestoneViewModelTest.store,3,1,"com.iota.iri.controllers.MilestoneViewModel.store,,com.iota.iri.storage.Tangle.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save","com.iota.iri.controllers.MilestoneViewModel.store,"
iri,com.iota.iri.controllers.MilestoneViewModelTest.updateSnapshot,8,3,",com.iota.iri.controllers.MilestoneViewModel.store,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.persistables.Milestone.bytes,com.iota.iri.utils.Converter.trits,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.storage.Tangle.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save",",com.iota.iri.utils.Converter.trits,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.controllers.MilestoneViewModel.store"
iri,com.iota.iri.controllers.TagViewModelTest.getHash,0,0,,
iri,com.iota.iri.controllers.TagViewModelTest.getTransactionHashes,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.addTipHash,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.getRandomNonSolidTipHash,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.getRandomSolidTipHash,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.getRandomTipHash,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.getTips,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.loadTipHashes,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.nonSolidSize,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.nonsolidCapacityLimited,6,3,",com.iota.iri.controllers.TipsViewModel.nonSolidSize,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TipsViewModel.addTipHash,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.TransactionTestUtils.getTransactionHash",",com.iota.iri.controllers.TipsViewModel.nonSolidSize,com.iota.iri.controllers.TipsViewModel.addTipHash,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.controllers.TipsViewModelTest.removeTipHash,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.setSolid,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.size,0,0,,
iri,com.iota.iri.controllers.TipsViewModelTest.solidCapacityLimited,7,3,",com.iota.iri.model.AbstractHash.trits,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TipsViewModel.addTipHash,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.controllers.TipsViewModel.setSolid,com.iota.iri.TransactionTestUtils.getTransactionHash","com.iota.iri.controllers.TipsViewModel.addTipHash,,com.iota.iri.controllers.TipsViewModel.setSolid,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.controllers.TipsViewModelTest.totalCapacityLimited,8,3,",com.iota.iri.model.AbstractHash.trits,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TipsViewModel.addTipHash,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.controllers.TipsViewModel.setSolid,com.iota.iri.TransactionTestUtils.getTransactionHash",",com.iota.iri.controllers.TipsViewModel.setSolid,com.iota.iri.controllers.TipsViewModel.addTipHash,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.controllers.TransactionViewModelTest.approversFromHash,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.dump,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.findShouldBeSuccessful,21,4,",com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.seek,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.controllers.TransactionViewModel.find,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.storage.Tangle.find,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.keysStartingWith,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.controllers.TransactionViewModel.find,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.controllers.TransactionViewModelTest.findShouldReturnNull,18,4,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.seek,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.controllers.TransactionViewModel.find,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.storage.Tangle.find,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Curl.reset,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.keysStartingWith,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.find,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.controllers.TransactionViewModelTest.firstShouldFindTx,16,5,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.first,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.controllers.TransactionViewModel.first,com.iota.iri.storage.Tangle.getFirst,com.iota.iri.model.AbstractHash.read,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.modelAndIndex,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.utils.Converter.bytes,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.controllers.TransactionViewModel.first,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.controllers.TransactionViewModelTest.fromAddress,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.fromBundle,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.fromHash,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.fromHash1,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.fromTag,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getAddress,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getApprovers,18,4,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getApprovers,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.controllers.TransactionViewModel.getApprovers,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.controllers.TransactionViewModelTest.getArrivalTime,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getBranchTransaction,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getBranchTransactionHash,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getBundleHash,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getBundleTransactions,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getBytes,41,6,",com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.getType,com.iota.iri.model.persistables.Transaction.exists,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.utils.Serializer.getLong,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.model.persistables.Transaction.canMerge,com.iota.iri.utils.Serializer.serialize,com.iota.iri.utils.Serializer.getInteger,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch","com.iota.iri.model.AbstractHash.trailingZeros,,com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.controllers.TransactionViewModelTest.getCurrentIndex,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getHash,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getLastIndex,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getTag,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getTransactionAnalyzedFlag,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getTrunkTransaction,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getTrunkTransactionHash,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getType,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getValidity,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.getValue,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.hashesFromQuery,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.mightExist,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.setAnalyzed,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.setArrivalTime,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.setValidity,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.store,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.trits,41,7,"com.iota.iri.utils.Converter.getTrits,,com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.exists,com.iota.iri.controllers.TransactionViewModel.getType,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.utils.Serializer.getLong,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.utils.Serializer.getInteger,com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.model.persistables.Transaction.canMerge,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.utils.Converter.bytes,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.controllers.TransactionViewModelTest.update,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.update1,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.updateApprovers,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.updateHeightPrefilledSlotShouldFail,25,5,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.updateHeights,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.controllers.TransactionViewModel.updateHeights,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.controllers.TransactionViewModelTest.updateHeightShouldWork,26,6,"com.iota.iri.utils.Converter.getTrits,com.iota.iri.controllers.TransactionViewModel.update,,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.updateHeights,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.storage.Tangle.update,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.getType,com.iota.iri.model.persistables.Transaction.exists,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.controllers.TransactionViewModel.updateHeight,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.controllers.TransactionViewModel.getHeight,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.persistables.Transaction.canMerge,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.controllers.TransactionViewModel.updateHeights,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getHeight,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.controllers.TransactionViewModelTest.updateReceivedTransactionCount,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.updateTips,0,0,,
iri,com.iota.iri.controllers.TransactionViewModelTest.value,0,0,,
iri,com.iota.iri.crypto.CurlTest.normalHashWorks,3,2,",com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform",",com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.Curl.absorb"
iri,com.iota.iri.crypto.CurlTest.pairHashIsFasterThanNormalHash,6,4,",com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.Curl.pairTransform,com.iota.iri.crypto.Curl.reset,com.iota.iri.utils.Converter.longPair,com.iota.iri.crypto.Curl.set,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform",",com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.Curl.reset,com.iota.iri.crypto.Curl.set,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.utils.Converter.longPair"
iri,com.iota.iri.crypto.CurlTest.pairHashWorks,5,4,",com.iota.iri.utils.Converter.trytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.Curl.pairTransform,com.iota.iri.crypto.Curl.set,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.utils.Converter.longPair",",com.iota.iri.utils.Converter.trytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.Curl.set,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.utils.Converter.longPair"
iri,com.iota.iri.crypto.ISSTest.addressGenerationISS,15,5,",com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.ISS.subseed,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.crypto.ISS.key,com.iota.iri.crypto.ISS.address,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.model.AbstractHash.trits,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.crypto.Curl.reset,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.crypto.ISS.digests,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.Kerl.reset,com.iota.iri.model.AbstractHash.equals,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.crypto.Curl.absorb",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.crypto.ISS.digests,com.iota.iri.crypto.ISS.subseed,com.iota.iri.crypto.ISS.key,com.iota.iri.crypto.ISS.address"
iri,com.iota.iri.crypto.ISSTest.sigDigestISSInPlace,10,5,"com.iota.iri.crypto.Kerl.squeeze,,com.iota.iri.model.AbstractHash.equals,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.ISS.subseed,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.reset,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.crypto.ISS.key,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.crypto.ISS.address,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.crypto.ISS.subseed,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.crypto.ISS.key,com.iota.iri.crypto.ISS.address,com.iota.iri.utils.Converter.trits"
iri,com.iota.iri.crypto.ISSTest.testSignatureResolvesToAddressISS,20,10,",com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.ISS.subseed,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.crypto.ISS.key,com.iota.iri.crypto.ISS.address,com.iota.iri.crypto.Curl.transform,com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.crypto.Curl.reset,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.ISS.digests,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.ISSInPlace.digest,com.iota.iri.crypto.Kerl.reset,com.iota.iri.crypto.ISS.normalizedBundle,com.iota.iri.crypto.ISS.digest,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.crypto.ISSInPlace.normalizedBundle,com.iota.iri.crypto.ISS.signatureFragment,com.iota.iri.crypto.Curl.absorb","com.iota.iri.crypto.Kerl.squeeze,,com.iota.iri.crypto.ISS.digests,com.iota.iri.crypto.ISS.digest,com.iota.iri.crypto.ISS.subseed,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.crypto.ISS.key,com.iota.iri.crypto.ISS.address,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.ISS.signatureFragment,com.iota.iri.crypto.ISS.normalizedBundle"
iri,com.iota.iri.crypto.KerlTest.bytesFromBigInt,0,0,,
iri,com.iota.iri.crypto.KerlTest.kerlMultiAbsorbMultiSqueeze,8,5,"com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.utils.Converter.trytes,,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.utils.Converter.trits","com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.utils.Converter.trytes,,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.utils.Converter.allocatingTritsFromTrytes"
iri,com.iota.iri.crypto.KerlTest.kerlMultiSqueeze,4,2,"com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.utils.Converter.trytes,,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.utils.Converter.trits","com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.utils.Converter.trytes,,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.utils.Converter.allocatingTritsFromTrytes"
iri,com.iota.iri.crypto.KerlTest.kerlOneAbsorb,5,3,"com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.utils.Converter.trytes,,com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.utils.Converter.trits","com.iota.iri.crypto.Kerl.squeeze,com.iota.iri.utils.Converter.trytes,,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Kerl.absorb,com.iota.iri.utils.Converter.allocatingTritsFromTrytes"
iri,com.iota.iri.crypto.KerlTest.limitBigIntFromTrits,0,0,,
iri,com.iota.iri.crypto.KerlTest.loopRandBytesFromBigInt,3,3,",com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.crypto.Kerl.bytesFromBigInt",",com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.crypto.Kerl.bytesFromBigInt"
iri,com.iota.iri.crypto.KerlTest.loopRandTritsFromBigInt,4,4,",com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.crypto.KerlTest.getRandomTrits",",com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.Kerl.bytesFromBigInt,com.iota.iri.crypto.Kerl.tritsFromBigInt,com.iota.iri.crypto.KerlTest.getRandomTrits"
iri,com.iota.iri.crypto.KerlTest.tritsFromBigInt,1,1,",com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.Kerl.tritsFromBigInt",",com.iota.iri.crypto.Kerl.bigIntFromTrits,com.iota.iri.crypto.Kerl.tritsFromBigInt"
iri,com.iota.iri.crypto.PearlDiverTest.testCancel,1,1,",com.iota.iri.crypto.PearlDiver.cancel",",com.iota.iri.crypto.PearlDiver.cancel"
iri,com.iota.iri.crypto.PearlDiverTest.testInvalidMagnitude,2,1,",com.iota.iri.crypto.PearlDiver.validateParameters,com.iota.iri.crypto.PearlDiver.search",",com.iota.iri.crypto.PearlDiver.search"
iri,com.iota.iri.crypto.PearlDiverTest.testInvalidTritsLength,2,1,",com.iota.iri.crypto.PearlDiver.validateParameters,com.iota.iri.crypto.PearlDiver.search",",com.iota.iri.crypto.PearlDiver.search"
iri,com.iota.iri.crypto.PearlDiverTest.testNoRandomFail,0,0,,
iri,com.iota.iri.crypto.PearlDiverTest.testRandomTryteHash,10,3,",com.iota.iri.utils.Converter.trytes,com.iota.iri.crypto.PearlDiver.search,com.iota.iri.crypto.PearlDiverTest.getRandomTrytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.PearlDiver.getRunnable,com.iota.iri.crypto.PearlDiver.transform,com.iota.iri.crypto.PearlDiverTest.isAllNines,com.iota.iri.crypto.PearlDiver.copy,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.PearlDiver.initializeMidCurlStates,com.iota.iri.crypto.PearlDiverTest.getHashFor,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform",",com.iota.iri.crypto.PearlDiverTest.getHashFor,com.iota.iri.crypto.PearlDiverTest.getRandomTrytes,com.iota.iri.crypto.PearlDiverTest.isAllNines"
iri,com.iota.iri.crypto.batched.BatchedHasherTest.batchedBCTCurlWorks,3,3,",com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.crypto.batched.BatchedBCTCurl.submitHashingRequest",",com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.crypto.batched.BatchedBCTCurl.submitHashingRequest"
iri,com.iota.iri.crypto.batched.BatchedHasherTest.fakeBatchedCurlWorks,6,3,",com.iota.iri.utils.Converter.trytes,com.iota.iri.crypto.batched.HashRequest.getCallback,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.batched.FakeBatchedCurl.submitHashingRequest,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.batched.HashRequest.getInput,com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.crypto.Curl.reset,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform",",com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.crypto.batched.FakeBatchedCurl.submitHashingRequest"
iri,com.iota.iri.model.HashTest.bytes,4,2,",com.iota.iri.crypto.Curl.squeeze,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform",",com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits"
iri,com.iota.iri.model.HashTest.calculate,6,2,",com.iota.iri.crypto.Curl.squeeze,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform","com.iota.iri.model.TransactionHash.calculate,,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.TransactionTestUtils.getTransactionTrits"
iri,com.iota.iri.model.HashTest.calculate1,0,0,,
iri,com.iota.iri.model.HashTest.calculate2,5,3,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform",",com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits"
iri,com.iota.iri.model.HashTest.compareTo,5,2,",com.iota.iri.model.AbstractHash.compareTo,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform","com.iota.iri.model.TransactionHash.calculate,,com.iota.iri.model.AbstractHash.compareTo,com.iota.iri.TransactionTestUtils.getTransactionTrits"
iri,com.iota.iri.model.HashTest.equals,6,2,",com.iota.iri.model.AbstractHash.equals,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform","com.iota.iri.model.TransactionHash.calculate,,com.iota.iri.model.AbstractHash.equals,com.iota.iri.TransactionTestUtils.getTransactionTrits"
iri,com.iota.iri.model.HashTest.hashCodeTest,4,1,",com.iota.iri.crypto.Curl.squeeze,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform","com.iota.iri.model.TransactionHash.calculate,,com.iota.iri.TransactionTestUtils.getTransactionTrits"
iri,com.iota.iri.model.HashTest.toStringTest,5,2,",com.iota.iri.utils.Converter.trytes,com.iota.iri.model.AbstractHash.toString,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform","com.iota.iri.model.TransactionHash.calculate,,com.iota.iri.model.AbstractHash.toString,com.iota.iri.TransactionTestUtils.getTransactionTrits"
iri,com.iota.iri.model.HashTest.trailingZeros,0,0,,
iri,com.iota.iri.model.HashTest.trits,4,1,",com.iota.iri.crypto.Curl.squeeze,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform","com.iota.iri.model.TransactionHash.calculate,,com.iota.iri.TransactionTestUtils.getTransactionTrits"
iri,com.iota.iri.model.persistables.TransactionTest.fromTrits,4,2,",com.iota.iri.model.AbstractHash.equals,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getTransaction,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.readMetadata",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionTrits"
iri,com.iota.iri.model.persistables.TransactionTest.testBytes,8,2,",com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.utils.Serializer.serialize,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getTransaction,com.iota.iri.utils.Converter.bytes,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.TransactionTestUtils.getTransaction,com.iota.iri.TransactionTestUtils.buildTransaction,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.model.safe.SafeObject.getData","com.iota.iri.TransactionTestUtils.getTransaction,,com.iota.iri.model.persistables.Transaction.metadata"
iri,com.iota.iri.network.NeighborRouterTest.addAndRemoveNeighborsAddsAndRemovesConnectionsAccordingly,11,6,",com.iota.iri.utils.Converter.trytes,com.iota.iri.model.AbstractHash.toString,com.iota.iri.network.protocol.Protocol.addProtocolHeader,com.iota.iri.network.protocol.Handshake.createHandshakePacket,com.iota.iri.network.NeighborRouterImpl.addNeighbor,com.iota.iri.network.NeighborRouterImpl.removeNeighbor,com.iota.iri.network.NeighborRouterImpl.parseURI,com.iota.iri.network.NeighborRouterImpl.isURIValid,com.iota.iri.network.NeighborRouterImpl.getConnectedNeighbors,com.iota.iri.network.NeighborRouterImpl.availableNeighborSlotsFilled,com.iota.iri.network.NeighborRouterImpl.shutdown,com.iota.iri.network.neighbor.impl.NeighborImpl.send",",com.iota.iri.model.AbstractHash.toString,com.iota.iri.network.NeighborRouterImpl.addNeighbor,com.iota.iri.network.NeighborRouterImpl.removeNeighbor,com.iota.iri.network.NeighborRouterImpl.getConnectedNeighbors,com.iota.iri.network.protocol.Handshake.createHandshakePacket,com.iota.iri.network.NeighborRouterImpl.shutdown,com.iota.iri.network.neighbor.impl.NeighborImpl.send"
iri,com.iota.iri.network.NeighborRouterTest.initsWithConfigDefinedNeighbors,4,3,",com.iota.iri.network.neighbor.impl.NeighborImpl.getHostAddressAndPort,com.iota.iri.utils.Converter.trytes,com.iota.iri.model.AbstractHash.toString,com.iota.iri.network.NeighborRouterImpl.getNeighbors,com.iota.iri.utils.Converter.trits,com.iota.iri.network.NeighborRouterImpl.shutdown",",com.iota.iri.network.neighbor.impl.NeighborImpl.getHostAddressAndPort,com.iota.iri.model.AbstractHash.toString,com.iota.iri.network.NeighborRouterImpl.getNeighbors,com.iota.iri.utils.Converter.trits,com.iota.iri.network.NeighborRouterImpl.shutdown"
iri,com.iota.iri.network.NetworkInjectionConfigurationTest.provideInSyncService,1,1,"com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,","com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,"
iri,com.iota.iri.network.NetworkInjectionConfigurationTest.provideNeighborRouter,5,3,"com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,,com.iota.iri.utils.Converter.trytes,com.iota.iri.network.NetworkInjectionConfiguration.provideNeighborRouter,com.iota.iri.network.NetworkInjectionConfiguration.provideTransactionProcessingPipeline,com.iota.iri.model.AbstractHash.toString,com.iota.iri.crypto.batched.BatchedHasherFactory.create","com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,,com.iota.iri.network.NetworkInjectionConfiguration.provideNeighborRouter,com.iota.iri.network.NetworkInjectionConfiguration.provideTransactionProcessingPipeline"
iri,com.iota.iri.network.NetworkInjectionConfigurationTest.provideTipsRequester,6,4,"com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,,com.iota.iri.utils.Converter.trytes,com.iota.iri.network.NetworkInjectionConfiguration.provideNeighborRouter,com.iota.iri.network.NetworkInjectionConfiguration.provideTransactionProcessingPipeline,com.iota.iri.model.AbstractHash.toString,com.iota.iri.network.NetworkInjectionConfiguration.provideTipsRequester","com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,,com.iota.iri.network.NetworkInjectionConfiguration.provideTransactionProcessingPipeline,com.iota.iri.network.NetworkInjectionConfiguration.provideNeighborRouter,com.iota.iri.network.NetworkInjectionConfiguration.provideTipsRequester"
iri,com.iota.iri.network.NetworkInjectionConfigurationTest.provideTransactionProcessingPipeline,4,3,"com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,,com.iota.iri.network.NetworkInjectionConfiguration.provideTransactionProcessingPipeline,com.iota.iri.network.NetworkInjectionConfiguration.provideNeighborRouter,com.iota.iri.utils.Converter.trits,com.iota.iri.network.NetworkInjectionConfiguration.provideTransactionRequester","com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,,com.iota.iri.network.NetworkInjectionConfiguration.provideTransactionProcessingPipeline,com.iota.iri.network.NetworkInjectionConfiguration.provideNeighborRouter,com.iota.iri.network.NetworkInjectionConfiguration.provideTransactionRequester"
iri,com.iota.iri.network.NetworkInjectionConfigurationTest.provideTransactionRequester,2,2,"com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,,com.iota.iri.network.NetworkInjectionConfiguration.provideTransactionRequester","com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,,com.iota.iri.network.NetworkInjectionConfiguration.provideTransactionRequester"
iri,com.iota.iri.network.NetworkInjectionConfigurationTest.provideTransactionSolidifier,1,1,"com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,","com.iota.iri.network.NetworkInjectionConfigurationTest.testInjector,"
iri,com.iota.iri.network.TransactionRequesterTest.checkSolidity,0,0,,
iri,com.iota.iri.network.TransactionRequesterTest.clearTransactionRequest,0,0,,
iri,com.iota.iri.network.TransactionRequesterTest.getRequestedTransactions,0,0,,
iri,com.iota.iri.network.TransactionRequesterTest.init,0,0,,
iri,com.iota.iri.network.TransactionRequesterTest.instance,0,0,,
iri,com.iota.iri.network.TransactionRequesterTest.nonMilestoneCapacityLimited,12,2,",com.iota.iri.model.AbstractHash.trits,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.network.TransactionRequester.transactionsToRequestIsFull,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.network.TransactionRequester.requestTransaction,com.iota.iri.network.TransactionRequester.popEldestTransactionToRequest,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash",",com.iota.iri.network.TransactionRequester.requestTransaction,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.network.TransactionRequesterTest.numberOfTransactionsToRequest,0,0,,
iri,com.iota.iri.network.TransactionRequesterTest.popEldestTransactionToRequest,3,2,",com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.network.TransactionRequester.requestTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.TransactionTestUtils.getTransactionHash",",com.iota.iri.network.TransactionRequester.requestTransaction,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.network.TransactionRequesterTest.requestTransaction,0,0,,
iri,com.iota.iri.network.TransactionRequesterTest.rescanTransactionsToRequest,0,0,,
iri,com.iota.iri.network.TransactionRequesterTest.transactionRequestedFreshness,11,4,",com.iota.iri.model.AbstractHash.trits,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.network.TransactionRequester.isTransactionRequested,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.network.TransactionRequester.numberOfTransactionsToRequest,com.iota.iri.network.TransactionRequester.transactionsToRequestIsFull,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.network.TransactionRequester.requestTransaction,com.iota.iri.network.TransactionRequester.popEldestTransactionToRequest,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash",",com.iota.iri.network.TransactionRequester.isTransactionRequested,com.iota.iri.network.TransactionRequester.numberOfTransactionsToRequest,com.iota.iri.network.TransactionRequester.requestTransaction,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.network.TransactionRequesterTest.transactionToRequest,0,0,,
iri,com.iota.iri.network.neighbor.impl.NeighborImplTest.aSendWhileWriteInterestIsDisabledActivatesItAgain,2,2,",com.iota.iri.network.neighbor.impl.NeighborImplTest.createEmptyTxPacket,com.iota.iri.network.neighbor.impl.NeighborImpl.send",",com.iota.iri.network.neighbor.impl.NeighborImplTest.createEmptyTxPacket,com.iota.iri.network.neighbor.impl.NeighborImpl.send"
iri,com.iota.iri.network.neighbor.impl.NeighborImplTest.handshakeWithWrongPacketPutsItIntoFailedState,4,2,",com.iota.iri.network.protocol.message.impl.MessageReaderImpl.readMessage,com.iota.iri.network.neighbor.impl.NeighborImpl.handshake,com.iota.iri.network.neighbor.impl.NeighborImpl.parseHeader,com.iota.iri.network.neighbor.impl.NeighborImplTest.createEmptyTxPacket,com.iota.iri.network.neighbor.impl.NeighborImpl.read",",com.iota.iri.network.neighbor.impl.NeighborImplTest.createEmptyTxPacket,com.iota.iri.network.neighbor.impl.NeighborImpl.handshake"
iri,com.iota.iri.network.neighbor.impl.NeighborImplTest.handshakingWorks,5,2,"com.iota.iri.network.neighbor.impl.NeighborImpl.handleMessage,,com.iota.iri.network.protocol.message.impl.MessageReaderImpl.readMessage,com.iota.iri.network.neighbor.impl.NeighborImpl.handshake,com.iota.iri.network.protocol.Handshake.fromByteBuffer,com.iota.iri.network.protocol.message.impl.MessageReaderImpl.ready,com.iota.iri.network.protocol.Handshake.createHandshakePacket,com.iota.iri.network.neighbor.impl.NeighborImpl.read",",com.iota.iri.network.protocol.Handshake.createHandshakePacket,com.iota.iri.network.neighbor.impl.NeighborImpl.handshake"
iri,com.iota.iri.network.neighbor.impl.NeighborImplTest.markingTheNeighborForDisconnectWillNeverMakeItReadyForMessagesAgain,0,0,,
iri,com.iota.iri.network.neighbor.impl.NeighborImplTest.readHeartbeat,8,3,"com.iota.iri.network.protocol.message.impl.MessageReaderImpl.readMessage,com.iota.iri.network.neighbor.impl.NeighborImpl.heartbeat,com.iota.iri.network.neighbor.impl.NeighborImpl.handleMessage,,com.iota.iri.network.protocol.Protocol.createHeartbeatPacket,com.iota.iri.network.protocol.Protocol.addProtocolHeader,com.iota.iri.network.protocol.Heartbeat.fromByteBuffer,com.iota.iri.network.protocol.Heartbeat.setFirstSolidMilestoneIndex,com.iota.iri.network.neighbor.impl.NeighborImpl.parseHeader,com.iota.iri.network.protocol.Protocol.parseHeader,com.iota.iri.network.protocol.message.impl.MessageReaderImpl.getMessage,com.iota.iri.network.neighbor.impl.NeighborImpl.setState,com.iota.iri.network.neighbor.impl.NeighborImpl.read",",com.iota.iri.network.neighbor.impl.NeighborImpl.heartbeat,com.iota.iri.network.protocol.Protocol.createHeartbeatPacket,com.iota.iri.network.protocol.Heartbeat.setFirstSolidMilestoneIndex,com.iota.iri.network.neighbor.impl.NeighborImpl.setState"
iri,com.iota.iri.network.neighbor.impl.NeighborImplTest.readingTransactionFullyPutsItInThePipeline,5,2,"com.iota.iri.network.neighbor.impl.NeighborImpl.handleMessage,,com.iota.iri.network.protocol.message.impl.MessageReaderImpl.readMessage,com.iota.iri.network.protocol.message.MessageReaderFactory.create,com.iota.iri.network.neighbor.impl.NeighborImpl.parseHeader,com.iota.iri.network.neighbor.impl.NeighborImplTest.createEmptyTxPacket,com.iota.iri.network.neighbor.impl.NeighborImpl.read",",com.iota.iri.network.protocol.message.MessageReaderFactory.create,com.iota.iri.network.neighbor.impl.NeighborImplTest.createEmptyTxPacket,com.iota.iri.network.neighbor.impl.NeighborImpl.read"
iri,com.iota.iri.network.neighbor.impl.NeighborImplTest.writeHeartbeat,3,2,",com.iota.iri.network.protocol.Protocol.createHeartbeatPacket,com.iota.iri.network.protocol.Protocol.addProtocolHeader,com.iota.iri.network.neighbor.impl.NeighborImpl.writeMsg,com.iota.iri.network.neighbor.impl.NeighborImpl.write,com.iota.iri.network.neighbor.impl.NeighborImpl.send",",com.iota.iri.network.neighbor.impl.NeighborImpl.write,com.iota.iri.network.protocol.Protocol.createHeartbeatPacket,com.iota.iri.network.neighbor.impl.NeighborImpl.send"
iri,com.iota.iri.network.neighbor.impl.NeighborImplTest.writeWithAMessageInTheSendQueueWritesItToTheChannel,3,2,",com.iota.iri.network.neighbor.impl.NeighborImpl.writeMsg,com.iota.iri.network.neighbor.impl.NeighborImpl.write,com.iota.iri.network.neighbor.impl.NeighborImplTest.createEmptyTxPacket,com.iota.iri.network.neighbor.impl.NeighborImpl.send",",com.iota.iri.network.neighbor.impl.NeighborImpl.write,com.iota.iri.network.neighbor.impl.NeighborImplTest.createEmptyTxPacket,com.iota.iri.network.neighbor.impl.NeighborImpl.send"
iri,com.iota.iri.network.neighbor.impl.NeighborImplTest.writeWithNoMessageInTheSendQueueReturnsZero,1,1,",com.iota.iri.network.protocol.message.MessageReaderFactory.create,com.iota.iri.network.neighbor.impl.NeighborImpl.write",",com.iota.iri.network.protocol.message.MessageReaderFactory.create,com.iota.iri.network.neighbor.impl.NeighborImpl.write"
iri,com.iota.iri.network.pipeline.BroadcastStageTest.doesntGossipToOriginNeighbor,1,1,",com.iota.iri.network.pipeline.BroadcastStage.process",",com.iota.iri.network.pipeline.BroadcastStage.process"
iri,com.iota.iri.network.pipeline.BroadcastStageTest.gossipsToAllIfNoOriginNeighbor,1,1,",com.iota.iri.network.pipeline.BroadcastStage.process",",com.iota.iri.network.pipeline.BroadcastStage.process"
iri,com.iota.iri.network.pipeline.HashingStageTest.process,6,2,",com.iota.iri.crypto.Curl.squeeze,com.iota.iri.crypto.batched.FakeBatchedCurl.submitHashingRequest,com.iota.iri.network.pipeline.HashingStage.process,com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.crypto.Curl.reset,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform",",com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.network.pipeline.HashingStage.process"
iri,com.iota.iri.network.pipeline.MilestoneStageTest.existingMilestoneIsPropagated,2,1,",com.iota.iri.network.pipeline.MilestoneStage.solidify,com.iota.iri.network.pipeline.MilestoneStage.process,com.iota.iri.network.pipeline.MilestonePayload.getMilestoneTransaction",",com.iota.iri.network.pipeline.MilestoneStage.process"
iri,com.iota.iri.network.pipeline.MilestoneStageTest.newMilestoneBelowSnapshotAborts,2,1,",com.iota.iri.network.pipeline.MilestoneStage.abort,com.iota.iri.network.pipeline.MilestoneStage.process",",com.iota.iri.network.pipeline.MilestoneStage.process"
iri,com.iota.iri.network.pipeline.MilestoneStageTest.newMilestoneProcessesThroughToSolidification,2,1,",com.iota.iri.network.pipeline.MilestoneStage.solidify,com.iota.iri.network.pipeline.MilestoneStage.process",",com.iota.iri.network.pipeline.MilestoneStage.process"
iri,com.iota.iri.network.pipeline.PreProcessStageTest.processingAKnownTxDirectsToReplyStage,4,2,",com.iota.iri.model.AbstractHash.equals,com.iota.iri.network.protocol.Protocol.extractRequestedTxHash,com.iota.iri.network.SampleTransaction.createSampleTxBuffer,com.iota.iri.network.pipeline.PreProcessStage.process,com.iota.iri.network.TransactionCacheDigester.getDigest,com.iota.iri.network.neighbor.impl.NeighborMetricsImpl.incrAllTransactionsCount",",com.iota.iri.network.SampleTransaction.createSampleTxBuffer,com.iota.iri.network.pipeline.PreProcessStage.process"
iri,com.iota.iri.network.pipeline.PreProcessStageTest.processingAnUnknownTxDirectsToHashingStage,3,2,"com.iota.iri.utils.Converter.getTrits,,com.iota.iri.network.pipeline.ValidationPayload.getHashOfRequestedTx,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.network.SampleTransaction.createSampleTxBuffer,com.iota.iri.network.pipeline.PreProcessStage.process,com.iota.iri.network.TransactionCacheDigester.getDigest",",com.iota.iri.network.pipeline.ValidationPayload.getHashOfRequestedTx,com.iota.iri.network.SampleTransaction.createSampleTxBuffer,com.iota.iri.network.pipeline.PreProcessStage.process"
iri,com.iota.iri.network.pipeline.PreProcessStageTest.theTransactionsPayloadGetsExpanded,3,2,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.network.pipeline.ValidationPayload.getHashOfRequestedTx,com.iota.iri.network.pipeline.PreProcessStage.process,com.iota.iri.network.TransactionCacheDigester.getDigest",",com.iota.iri.network.pipeline.ValidationPayload.getHashOfRequestedTx,com.iota.iri.network.pipeline.PreProcessStage.process"
iri,com.iota.iri.network.pipeline.ReceivedStageTest.alreadyStoredTransactionDoesNoUpdates,1,1,",com.iota.iri.network.pipeline.ReceivedStage.process",",com.iota.iri.network.pipeline.ReceivedStage.process"
iri,com.iota.iri.network.pipeline.ReceivedStageTest.newlyStoredTransactionUpdatesAlsoArrivalTimeAndSender,1,1,",com.iota.iri.network.pipeline.ReceivedStage.process",",com.iota.iri.network.pipeline.ReceivedStage.process"
iri,com.iota.iri.network.pipeline.ReplyStageTest.usingASuppliedRequestedHashTheTransactionIsReplied,7,2,",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.equals,com.iota.iri.model.AbstractHash.trits,com.iota.iri.utils.Converter.getTrits,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.network.pipeline.ReplyStage.process,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.network.TransactionCacheDigester.getDigest","com.iota.iri.TangleMockUtils.mockTransaction,,com.iota.iri.network.pipeline.ReplyStage.process"
iri,com.iota.iri.network.pipeline.ReplyStageTest.usingTheNullHashARandomTipIsGettingReplied,5,2,",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.network.pipeline.ReplyStage.getRandomTipPointer,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.network.pipeline.ReplyStage.process,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.network.TransactionCacheDigester.getDigest","com.iota.iri.TangleMockUtils.mockTransaction,,com.iota.iri.network.pipeline.ReplyStage.process"
iri,com.iota.iri.network.pipeline.SolidifyStageTest.quickSetSolidTransactionIsBroadcast,1,1,",com.iota.iri.network.pipeline.SolidifyStage.process",",com.iota.iri.network.pipeline.SolidifyStage.process"
iri,com.iota.iri.network.pipeline.SolidifyStageTest.solidTransactionIsBroadcast,2,1,",com.iota.iri.network.pipeline.SolidifyStage.process,com.iota.iri.network.pipeline.ProcessingContext.setNextStage",",com.iota.iri.network.pipeline.SolidifyStage.process"
iri,com.iota.iri.network.pipeline.SolidifyStageTest.unsolidTransactionBroadcastsRandomSolidTip,3,1,"com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.network.pipeline.SolidifyStage.broadcastTip,com.iota.iri.network.pipeline.SolidifyStage.process,",",com.iota.iri.network.pipeline.SolidifyStage.process"
iri,com.iota.iri.network.pipeline.SolidifyStageTest.unsolidWithNoRandomTipsAborts,2,1,",com.iota.iri.network.pipeline.SolidifyStage.broadcastTip,com.iota.iri.network.pipeline.SolidifyStage.process",",com.iota.iri.network.pipeline.SolidifyStage.process"
iri,com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.anInvalidNewTransactionStopsBeingProcessedAfterTheValidationStage,7,3,",com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.mockHashingStage,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.hashAndValidate,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.process,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.start,com.iota.iri.utils.Converter.bytes,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.addStage,com.iota.iri.network.TransactionCacheDigester.getDigest",",com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.process,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.start,com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.mockHashingStage"
iri,com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.processingAKnownTransactionOnlyFlowsToTheReplyStage,4,3,",com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.process,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.start,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.addStage,com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.network.SampleTransaction.createSampleTxBuffer",",com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.process,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.start,com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.network.SampleTransaction.createSampleTxBuffer"
iri,com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.processingAValidMilestone,10,6,"com.iota.iri.utils.Converter.getTrits,,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.mockHashingStage,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.setHashingStage,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.process,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.start,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.addStage,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.injectMockedStagesIntoPipeline,com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.network.SampleTransaction.createSampleTxBuffer,com.iota.iri.crypto.Curl.reset,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.setReceivedStage,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform","com.iota.iri.utils.Converter.getTrits,,com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.mockHashingStage,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.process,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.start,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.injectMockedStagesIntoPipeline,com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.network.SampleTransaction.createSampleTxBuffer,com.iota.iri.utils.TransactionTruncator.truncateTransaction"
iri,com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.processingAValidNewTransactionFlowsThroughTheEntirePipeline,4,3,",com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.mockHashingStage,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.process,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.start,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.addStage,com.iota.iri.network.SampleTransaction.createSampleTxBuffer",",com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.mockHashingStage,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.process,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.start,com.iota.iri.network.SampleTransaction.createSampleTxBuffer"
iri,com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.processingAValidNewTransactionNotOriginatingFromANeighborFlowsThroughTheCorrectStages,6,4,",com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.mockHashingStage,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.hashAndValidate,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.process,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.start,com.iota.iri.utils.Converter.bytes,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.addStage,com.iota.iri.crypto.batched.BatchedHasherFactory.create,com.iota.iri.network.TransactionCacheDigester.getDigest",",com.iota.iri.network.pipeline.TransactionProcessingPipelineTest.mockHashingStage,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.process,com.iota.iri.network.pipeline.TransactionProcessingPipelineImpl.start,com.iota.iri.crypto.batched.BatchedHasherFactory.create"
iri,com.iota.iri.network.pipeline.ValidationStageTest.processingAValidTransactionWillProceedToReceivedStageIfNoNeighborIsDefined,4,2,",com.iota.iri.model.AbstractHash.equals,com.iota.iri.model.AbstractHash.trits,com.iota.iri.network.pipeline.ValidationStage.process,com.iota.iri.utils.Converter.bytes,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.model.safe.SafeObject.getData",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.network.pipeline.ValidationStage.process,com.iota.iri.model.AbstractHash.trits"
iri,com.iota.iri.network.pipeline.ValidationStageTest.processingAValidTransactionWillProceedToReplyAndReceivedStages,4,1,",com.iota.iri.model.AbstractHash.equals,com.iota.iri.network.pipeline.ValidationStage.process,com.iota.iri.utils.Converter.bytes,com.iota.iri.network.pipeline.ProcessingContext.setNextStage,com.iota.iri.model.AbstractHash.bytes",",com.iota.iri.network.pipeline.ValidationStage.process"
iri,com.iota.iri.network.pipeline.ValidationStageTest.processingAnInvalidTransactionWillAbortTheProcessing,2,1,",com.iota.iri.network.pipeline.ValidationStage.process,com.iota.iri.utils.Converter.bytes",",com.iota.iri.network.pipeline.ValidationStage.process"
iri,com.iota.iri.network.protocol.ProtocolTest.createHandshakePacket,2,1,",com.iota.iri.network.protocol.Handshake.createHandshakePacket,com.iota.iri.network.protocol.Protocol.addProtocolHeader",",com.iota.iri.network.protocol.Handshake.createHandshakePacket"
iri,com.iota.iri.network.protocol.ProtocolTest.createHeartbeatPacket,2,1,",com.iota.iri.network.protocol.Protocol.createHeartbeatPacket,com.iota.iri.network.protocol.Protocol.addProtocolHeader",",com.iota.iri.network.protocol.Protocol.createHeartbeatPacket"
iri,com.iota.iri.network.protocol.ProtocolTest.createTransactionGossipPacket,2,1,",com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.network.protocol.Protocol.addProtocolHeader,com.iota.iri.TransactionTestUtils.constructTransactionBytes,com.iota.iri.network.protocol.Protocol.createTransactionGossipPacket","com.iota.iri.network.protocol.Protocol.createTransactionGossipPacket,,com.iota.iri.TransactionTestUtils.constructTransactionBytes"
iri,com.iota.iri.network.protocol.ProtocolTest.parseHeader,1,1,",com.iota.iri.network.protocol.Protocol.parseHeader",",com.iota.iri.network.protocol.Protocol.parseHeader"
iri,com.iota.iri.network.protocol.ProtocolTest.parseHeartbeat,1,1,",com.iota.iri.network.protocol.Heartbeat.fromByteBuffer",",com.iota.iri.network.protocol.Heartbeat.fromByteBuffer"
iri,com.iota.iri.network.protocol.ProtocolTest.parsingHeaderWithTooBigAdvertisedLengthThrows,1,1,",com.iota.iri.network.protocol.Protocol.parseHeader",",com.iota.iri.network.protocol.Protocol.parseHeader"
iri,com.iota.iri.network.protocol.ProtocolTest.parsingHeaderWithUnknownMessageTypeThrows,1,1,",com.iota.iri.network.protocol.Protocol.parseHeader",",com.iota.iri.network.protocol.Protocol.parseHeader"
iri,com.iota.iri.service.APIIntegrationTests.sendNonJsonBody,1,1,",com.iota.iri.service.APIIntegrationTests.given",",com.iota.iri.service.APIIntegrationTests.given"
iri,com.iota.iri.service.APIIntegrationTests.shouldSendTransactionAndFetchByAddress,12,3,",com.iota.iri.utils.Converter.trytes,com.iota.iri.model.AbstractHash.toString,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.service.APIIntegrationTests.findTransactions,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.service.APIIntegrationTests.sendTransfer,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.service.APIIntegrationTests.getHash,com.iota.iri.crypto.Curl.reset,com.iota.iri.crypto.Curl.absorb,com.iota.iri.service.APIIntegrationTests.gson,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.utils.Converter.trits,com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.crypto.Curl.transform",",com.iota.iri.service.APIIntegrationTests.sendTransfer,com.iota.iri.service.APIIntegrationTests.findTransactions,com.iota.iri.service.APIIntegrationTests.getHash"
iri,com.iota.iri.service.APIIntegrationTests.shouldSendTransactionAndFetchByTag,11,3,",com.iota.iri.utils.Converter.trytes,com.iota.iri.model.AbstractHash.toString,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.findTransactions,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.service.APIIntegrationTests.sendTransfer,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.service.APIIntegrationTests.getHash,com.iota.iri.crypto.Curl.reset,com.iota.iri.utils.Converter.allocatingTritsFromTrytes,com.iota.iri.utils.Converter.trits,com.iota.iri.crypto.Curl.absorb,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.sendTransfer,com.iota.iri.service.APIIntegrationTests.findTransactions,com.iota.iri.service.APIIntegrationTests.getHash"
iri,com.iota.iri.service.APIIntegrationTests.shouldTestAddNeighbors,2,2,",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson"
iri,com.iota.iri.service.APIIntegrationTests.shouldTestBroadcastTransactions,2,2,",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson"
iri,com.iota.iri.service.APIIntegrationTests.shouldTestFindTransactions,2,2,",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson"
iri,com.iota.iri.service.APIIntegrationTests.shouldTestGetIotaConfig,2,2,",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson"
iri,com.iota.iri.service.APIIntegrationTests.shouldTestGetNeighbors,2,2,",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson"
iri,com.iota.iri.service.APIIntegrationTests.shouldTestGetNodeInfo,2,2,",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson"
iri,com.iota.iri.service.APIIntegrationTests.shouldTestGetTrytes,2,2,",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson"
iri,com.iota.iri.service.APIIntegrationTests.shouldTestRemoveNeighbors,2,2,",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson"
iri,com.iota.iri.service.APIIntegrationTests.shouldTestStoreTransactions,2,2,",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson"
iri,com.iota.iri.service.APIIntegrationTests.shouldTestattachToTangle,2,2,",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson",",com.iota.iri.service.APIIntegrationTests.given,com.iota.iri.service.APIIntegrationTests.gson"
iri,com.iota.iri.service.APITest.whenStoreTransactionsStatementThenSetArrivalTimeToCurrentMillis,22,19,",com.iota.iri.service.API.broadcastTransactions,com.iota.iri.service.API.addNeighbors,com.iota.iri.service.API.getBalances,com.iota.iri.service.API.convertTrytes,com.iota.iri.service.API.getMissingTransactions,com.iota.iri.service.API.getTransactionsToApprove,com.iota.iri.service.API.storeTransactions,com.iota.iri.utils.Converter.trits,com.iota.iri.service.API.getNeighbors,com.iota.iri.service.API.checkConsistency,com.iota.iri.service.API.getNodeAPIConfiguration,com.iota.iri.utils.Converter.increment,com.iota.iri.service.API.interruptAttachingToTangle,com.iota.iri.service.API.attachToTangle,com.iota.iri.service.API.getTrytes,com.iota.iri.service.API.storeTransactionsStatement,com.iota.iri.service.API.removeNeighbors,com.iota.iri.service.API.getInclusionStates,com.iota.iri.service.API.wereAddressesSpentFrom,com.iota.iri.service.API.getNodeInfo,com.iota.iri.service.APITest.isCloseToCurrentMillis,com.iota.iri.service.dto.AbstractResponse.createEmptyResponse,com.iota.iri.service.API.findTransactions",",com.iota.iri.service.API.broadcastTransactions,com.iota.iri.service.API.addNeighbors,com.iota.iri.service.API.getBalances,com.iota.iri.service.API.getTransactionsToApprove,com.iota.iri.service.API.storeTransactions,com.iota.iri.service.API.checkConsistency,com.iota.iri.service.API.getNeighbors,com.iota.iri.service.API.getNodeAPIConfiguration,com.iota.iri.service.API.interruptAttachingToTangle,com.iota.iri.service.API.attachToTangle,com.iota.iri.service.API.getTrytes,com.iota.iri.service.API.storeTransactionsStatement,com.iota.iri.service.API.removeNeighbors,com.iota.iri.service.API.findTransactions,com.iota.iri.service.API.getInclusionStates,com.iota.iri.service.API.wereAddressesSpentFrom,com.iota.iri.service.APITest.isCloseToCurrentMillis,com.iota.iri.service.API.getNodeInfo,com.iota.iri.service.API.getMissingTransactions"
iri,com.iota.iri.service.ApiCallTest.apiHasAllEnums,0,0,,
iri,com.iota.iri.service.ledger.impl.LedgerServiceImplTest.generateBalanceDiffWithPersistsSpentAddresses,19,4,",com.iota.iri.TransactionTestUtils.createTransactionWithTrunkBundleHash,com.iota.iri.utils.Converter.getTrits,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.transform,com.iota.iri.TransactionTestUtils.createTransactionFromTrits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.value,com.iota.iri.TangleMockUtils.mockValidBundle,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.crypto.Curl.reset,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.utils.Converter.trytes,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.AbstractHash.toString,com.iota.iri.BundleValidator.isInconsistent,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.TransactionTestUtils.nextWord,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.crypto.Curl.absorb",",com.iota.iri.model.AbstractHash.toString,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.BundleValidator.isInconsistent,com.iota.iri.TangleMockUtils.mockValidBundle"
iri,com.iota.iri.service.milestone.impl.MilestoneInSyncServiceTest.isInSyncTestScanComplete,1,1,",com.iota.iri.service.milestone.impl.MilestoneInSyncService.isInSync",",com.iota.iri.service.milestone.impl.MilestoneInSyncService.isInSync"
iri,com.iota.iri.service.milestone.impl.MilestoneInSyncServiceTest.isInSyncTestScanIncomplete,1,1,",com.iota.iri.service.milestone.impl.MilestoneInSyncService.isInSync",",com.iota.iri.service.milestone.impl.MilestoneInSyncService.isInSync"
iri,com.iota.iri.service.milestone.impl.MilestoneServiceImplTest.findLatestProcessedSolidMilestoneInDatabaseAtEnd,6,4,",com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.wasMilestoneAppliedToLedger,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.utils.Converter.trits,com.iota.iri.controllers.MilestoneViewModel.latest,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase",",com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.utils.Converter.trits,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase"
iri,com.iota.iri.service.milestone.impl.MilestoneServiceImplTest.findLatestProcessedSolidMilestoneInDatabaseAtStart,14,3,",com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.binarySearchLatestProcessedSolidMilestoneInDatabase,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.model.IntegerIndex.equals,com.iota.iri.controllers.MilestoneViewModel.findClosestNextMilestone,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.wasMilestoneAppliedToLedger,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.controllers.MilestoneViewModel.findClosestPrevMilestone,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.controllers.MilestoneViewModel.latest,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.getMilestoneInMiddleOfRange,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase","com.iota.iri.TangleMockUtils.mockTransaction,,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase"
iri,com.iota.iri.service.milestone.impl.MilestoneServiceImplTest.findLatestProcessedSolidMilestoneInDatabaseInMiddle,15,3,",com.iota.iri.controllers.MilestoneViewModel.findClosestNextMilestone,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.IntegerIndex.equals,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.controllers.MilestoneViewModel.findClosestPrevMilestone,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.wasMilestoneAppliedToLedger,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.binarySearchLatestProcessedSolidMilestoneInDatabase,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.controllers.MilestoneViewModel.latest,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.model.AbstractHash.equals,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.getMilestoneInMiddleOfRange","com.iota.iri.TangleMockUtils.mockTransaction,,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase"
iri,com.iota.iri.service.milestone.impl.MilestoneServiceImplTest.findLatestProcessedSolidMilestoneInDatabaseNearEnd,9,3,",com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.wasMilestoneAppliedToLedger,com.iota.iri.controllers.MilestoneViewModel.findClosestPrevMilestone,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.controllers.MilestoneViewModel.latest,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase","com.iota.iri.TangleMockUtils.mockTransaction,,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase"
iri,com.iota.iri.service.milestone.impl.MilestoneServiceImplTest.findLatestProcessedSolidMilestoneInDatabaseNearStart,16,4,",com.iota.iri.controllers.MilestoneViewModel.findClosestNextMilestone,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.IntegerIndex.equals,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.controllers.MilestoneViewModel.findClosestPrevMilestone,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.wasMilestoneAppliedToLedger,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.binarySearchLatestProcessedSolidMilestoneInDatabase,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.controllers.MilestoneViewModel.latest,com.iota.iri.controllers.MilestoneViewModel.index,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.model.AbstractHash.equals,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.model.IntegerIndex.getValue,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.getMilestoneInMiddleOfRange",",com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.controllers.MilestoneViewModel.index,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase"
iri,com.iota.iri.service.milestone.impl.MilestoneServiceImplTest.findLatestProcessedSolidMilestoneInDatabaseNone,14,3,",com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.controllers.MilestoneViewModel.index,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.binarySearchLatestProcessedSolidMilestoneInDatabase,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.controllers.MilestoneViewModel.findClosestNextMilestone,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.wasMilestoneAppliedToLedger,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.controllers.MilestoneViewModel.findClosestPrevMilestone,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.controllers.MilestoneViewModel.latest,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.getMilestoneInMiddleOfRange,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase","com.iota.iri.TangleMockUtils.mockTransaction,,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.milestone.impl.MilestoneServiceImpl.findLatestProcessedSolidMilestoneInDatabase"
iri,com.iota.iri.service.restserver.RestEasyTest.allowed,2,2,",com.iota.iri.service.restserver.resteasy.RestEasy.start,com.iota.iri.service.restserver.resteasy.RestEasy.init",",com.iota.iri.service.restserver.resteasy.RestEasy.start,com.iota.iri.service.restserver.resteasy.RestEasy.init"
iri,com.iota.iri.service.restserver.RestEasyTest.nodeInfoMissingApiVersion,2,2,",com.iota.iri.service.restserver.resteasy.RestEasy.start,com.iota.iri.service.restserver.resteasy.RestEasy.init",",com.iota.iri.service.restserver.resteasy.RestEasy.start,com.iota.iri.service.restserver.resteasy.RestEasy.init"
iri,com.iota.iri.service.restserver.RestEasyTest.nodeInfoValid,2,2,",com.iota.iri.service.restserver.resteasy.RestEasy.start,com.iota.iri.service.restserver.resteasy.RestEasy.init",",com.iota.iri.service.restserver.resteasy.RestEasy.start,com.iota.iri.service.restserver.resteasy.RestEasy.init"
iri,com.iota.iri.service.restserver.RestEasyTest.notAllowed,2,2,",com.iota.iri.service.restserver.resteasy.RestEasy.start,com.iota.iri.service.restserver.resteasy.RestEasy.init",",com.iota.iri.service.restserver.resteasy.RestEasy.start,com.iota.iri.service.restserver.resteasy.RestEasy.init"
iri,com.iota.iri.service.snapshot.impl.LocalSnapshotManagerImplTest.takeLocalSnapshot,3,2,",com.iota.iri.utils.thread.ThreadUtils.sleep,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.TransactionTestUtils.getTransactionHash",",com.iota.iri.utils.thread.ThreadUtils.sleep,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.service.snapshot.impl.SnapshotImplTest.cloneTest,1,1,",com.iota.iri.service.snapshot.impl.SnapshotImpl.equals,com.iota.iri.service.snapshot.impl.SnapshotImpl.clone",",com.iota.iri.service.snapshot.impl.SnapshotImpl.equals,com.iota.iri.service.snapshot.impl.SnapshotImpl.clone"
iri,com.iota.iri.service.snapshot.impl.SnapshotImplTest.skippedMilestoneTest,2,2,",com.iota.iri.service.snapshot.impl.SnapshotImpl.addSkippedMilestone,com.iota.iri.service.snapshot.impl.SnapshotImpl.removeSkippedMilestone",",com.iota.iri.service.snapshot.impl.SnapshotImpl.addSkippedMilestone,com.iota.iri.service.snapshot.impl.SnapshotImpl.removeSkippedMilestone"
iri,com.iota.iri.service.snapshot.impl.SnapshotImplTest.updateTest,4,3,",com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.clone,com.iota.iri.service.snapshot.impl.SnapshotImpl.setInitialTimestamp,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockWrite,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.update,com.iota.iri.service.snapshot.impl.SnapshotImpl.update,com.iota.iri.service.snapshot.impl.SnapshotImpl.equals,com.iota.iri.TransactionTestUtils.getTransactionHash",",com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.clone,com.iota.iri.service.snapshot.impl.SnapshotImpl.setInitialTimestamp,com.iota.iri.service.snapshot.impl.SnapshotImpl.update,com.iota.iri.service.snapshot.impl.SnapshotImpl.equals,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImplTest.createTest,3,2,",com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.getSeenMilestones,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.update,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.equals",",com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.update,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.equals"
iri,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImplTest.hashTest,1,1,",com.iota.iri.model.AbstractHash.equals",",com.iota.iri.model.AbstractHash.equals"
iri,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImplTest.initialIndexTest,0,0,,
iri,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImplTest.initialTimestampTest,1,1,",com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.getInitialTimestamp",",com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.getInitialTimestamp"
iri,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImplTest.seenMilestonesTest,0,0,,
iri,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImplTest.solidEntryPointsTest,1,1,",com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.getSolidEntryPointIndex",",com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.getSolidEntryPointIndex"
iri,com.iota.iri.service.snapshot.impl.SnapshotProviderImplTest.testGetLatestSnapshot,24,5,",com.iota.iri.service.snapshot.impl.SnapshotImpl.getHash,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.readSnapshotStateFromJAR,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.first,com.iota.iri.utils.Converter.bytes,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.first,com.iota.iri.service.snapshot.impl.SnapshotImpl.getBalances,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.snapshot.impl.SnapshotImpl.equals,com.iota.iri.model.AbstractHash.trits,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.readSnapshotState,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.loadSnapshots,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.equals,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.getInitialTimestamp,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.getBalances,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.isConsistent,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.init,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.loadBuiltInSnapshot,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.loadLocalSnapshot,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasCorrectSupply,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.getInitialIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.clone,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.hasCorrectSupply",",com.iota.iri.service.snapshot.impl.SnapshotImpl.getHash,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasCorrectSupply,com.iota.iri.service.snapshot.impl.SnapshotImpl.getBalances,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.init,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.equals,com.iota.iri.service.snapshot.impl.SnapshotImpl.getInitialTimestamp"
iri,com.iota.iri.service.snapshot.impl.SnapshotProviderImplTest.testPersistSnapshot,39,6,",com.iota.iri.service.snapshot.impl.SnapshotImpl.getSeenMilestones,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.readSnapshotStateFromJAR,com.iota.iri.service.snapshot.impl.SnapshotImpl.getHash,com.iota.iri.service.snapshot.impl.SnapshotImpl.getTimestamp,com.iota.iri.controllers.LocalSnapshotViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.first,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.first,com.iota.iri.utils.Converter.bytes,com.iota.iri.conf.BaseIotaConfig.getLocalSnapshotsEnabled,com.iota.iri.model.IntegerIndex.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.getBalances,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.applyStateDiff,com.iota.iri.service.snapshot.impl.SnapshotMockUtils.createSnapshot,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.snapshot.impl.SnapshotImpl.getSolidEntryPoints,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.persistSnapshot,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.setIndex,com.iota.iri.model.AbstractHash.trits,com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.getBalanceChanges,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.setSolidEntryPoints,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.readSnapshotState,com.iota.iri.model.LocalSnapshot.bytes,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.loadSnapshots,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.save,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.utils.Converter.trytes,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.getBalances,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.isConsistent,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.get,com.iota.iri.service.snapshot.impl.SnapshotImpl.applyStateDiff,com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.isConsistent,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.init,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.loadBuiltInSnapshot,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.loadLocalSnapshot,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.getSolidEntryPoints,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.model.AbstractHash.toString,com.iota.iri.model.AbstractHash.equals,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.modelAndIndex,com.iota.iri.conf.TestnetConfig.getMilestoneStartIndex,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.service.snapshot.impl.SnapshotImpl.clone,com.iota.iri.model.LocalSnapshot.read,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.hasCorrectSupply,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.model.AbstractHash.toString,com.iota.iri.service.snapshot.impl.SnapshotImpl.getHash,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.get,com.iota.iri.service.snapshot.impl.SnapshotImpl.applyStateDiff,com.iota.iri.service.snapshot.impl.SnapshotImpl.getBalances,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.init,com.iota.iri.service.snapshot.impl.SnapshotMockUtils.createSnapshot,com.iota.iri.utils.Converter.trits,com.iota.iri.service.snapshot.impl.SnapshotProviderImpl.persistSnapshot"
iri,com.iota.iri.service.snapshot.impl.SnapshotServiceImplTest.replayMilestonesInconsistent,10,6,",com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.StateDiffViewModel.load,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.service.snapshot.impl.SnapshotServiceImpl.replayMilestones,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.controllers.StateDiffViewModel.isEmpty,com.iota.iri.service.snapshot.impl.SnapshotServiceImplTest.createBalanceMap,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.utils.Converter.trits,com.iota.iri.service.snapshot.impl.SnapshotImpl.equals,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.TangleMockUtils.mockStateDiff",",com.iota.iri.service.snapshot.impl.SnapshotServiceImpl.replayMilestones,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.snapshot.impl.SnapshotServiceImplTest.createBalanceMap,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.utils.Converter.trits,com.iota.iri.service.snapshot.impl.SnapshotImpl.equals,com.iota.iri.TangleMockUtils.mockStateDiff"
iri,com.iota.iri.service.snapshot.impl.SnapshotServiceImplTest.replayMilestonesMultiple,0,0,,
iri,com.iota.iri.service.snapshot.impl.SnapshotServiceImplTest.replayMilestonesSingle,13,6,",com.iota.iri.controllers.StateDiffViewModel.load,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockWrite,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.applyStateDiff,com.iota.iri.service.snapshot.impl.SnapshotImpl.getBalance,com.iota.iri.service.snapshot.impl.SnapshotImpl.setTimestamp,com.iota.iri.TangleMockUtils.mockStateDiff,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.service.snapshot.impl.SnapshotServiceImpl.replayMilestones,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.service.snapshot.impl.SnapshotServiceImplTest.createBalanceMap,com.iota.iri.service.snapshot.impl.SnapshotImpl.applyStateDiff,com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.isConsistent,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.TangleMockUtils.mockMilestone",",com.iota.iri.service.snapshot.impl.SnapshotServiceImpl.replayMilestones,com.iota.iri.TangleMockUtils.mockMilestone,com.iota.iri.service.snapshot.impl.SnapshotServiceImplTest.createBalanceMap,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.getBalance,com.iota.iri.TangleMockUtils.mockStateDiff"
iri,com.iota.iri.service.snapshot.impl.SnapshotServiceImplTest.rollbackMilestonesAll,0,0,,
iri,com.iota.iri.service.snapshot.impl.SnapshotServiceImplTest.rollbackMilestonesInvalidIndex,0,0,,
iri,com.iota.iri.service.snapshot.impl.SnapshotServiceImplTest.rollbackMilestonesSingle,0,0,,
iri,com.iota.iri.service.snapshot.impl.SnapshotStateDiffImplTest.getBalanceChanges,2,1,",com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.getBalanceChanges,com.iota.iri.model.AbstractHash.bytes",",com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.getBalanceChanges"
iri,com.iota.iri.service.snapshot.impl.SnapshotStateDiffImplTest.isConsistent,4,2,",com.iota.iri.utils.Converter.bytes,com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.isConsistent,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.AbstractHash.bytes",",com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.isConsistent"
iri,com.iota.iri.service.snapshot.impl.SnapshotStateImplTest.testApplyStateDiff,2,1,",com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.isConsistent,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.applyStateDiff",",com.iota.iri.service.snapshot.impl.SnapshotStateImpl.applyStateDiff"
iri,com.iota.iri.service.snapshot.impl.SnapshotStateImplTest.testApplyStateDiffThrowsException,2,1,",com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.isConsistent,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.applyStateDiff",",com.iota.iri.service.snapshot.impl.SnapshotStateImpl.applyStateDiff"
iri,com.iota.iri.service.snapshot.impl.SnapshotStateImplTest.testGetBalance,1,1,",com.iota.iri.service.snapshot.impl.SnapshotStateImpl.getBalance",",com.iota.iri.service.snapshot.impl.SnapshotStateImpl.getBalance"
iri,com.iota.iri.service.snapshot.impl.SnapshotStateImplTest.testGetBalances,0,0,,
iri,com.iota.iri.service.snapshot.impl.SnapshotStateImplTest.testHasCorrectSupply,1,1,",com.iota.iri.service.snapshot.impl.SnapshotStateImpl.hasCorrectSupply",",com.iota.iri.service.snapshot.impl.SnapshotStateImpl.hasCorrectSupply"
iri,com.iota.iri.service.snapshot.impl.SnapshotStateImplTest.testIsConsistent,3,1,",com.iota.iri.utils.Converter.trytes,com.iota.iri.model.AbstractHash.toString,com.iota.iri.service.snapshot.impl.SnapshotStateImpl.isConsistent",",com.iota.iri.service.snapshot.impl.SnapshotStateImpl.isConsistent"
iri,com.iota.iri.service.snapshot.impl.SnapshotStateImplTest.testPatchedState,1,1,",com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.getBalanceChanges",",com.iota.iri.service.snapshot.impl.SnapshotStateDiffImpl.getBalanceChanges"
iri,com.iota.iri.service.snapshot.impl.SnapshotStateImplTest.testUpdate,1,1,",com.iota.iri.service.snapshot.impl.SnapshotStateImpl.update",",com.iota.iri.service.snapshot.impl.SnapshotStateImpl.update"
iri,com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImplTest.failWhenAssertingForExistingData,2,1,",com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImpl.doSpentAddressesExist,com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImpl.init",",com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImpl.init"
iri,com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImplTest.testContainsAddress,2,2,",com.iota.iri.model.AbstractHash.equals,com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImpl.containsAddress",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImpl.containsAddress"
iri,com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImplTest.testSaveAddress,2,2,",com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImpl.saveAddress,com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImpl.saveAddressesBatch",",com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImpl.saveAddress,com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImpl.saveAddressesBatch"
iri,com.iota.iri.service.spentaddresses.impl.SpentAddressesProviderImplTest.testSaveAddressesBatch,0,0,,
iri,com.iota.iri.service.spentaddresses.impl.SpentAddressesServiceImplTest.doesntPersistZeroValueBundles,8,3,",com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.utils.Converter.bytes,com.iota.iri.TangleMockUtils.mockValidBundle,com.iota.iri.service.spentaddresses.impl.SpentAddressesServiceImpl.persistValidatedSpentAddressesAsync,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.TransactionTestUtils.getTransactionHash",",com.iota.iri.service.spentaddresses.impl.SpentAddressesServiceImpl.persistValidatedSpentAddressesAsync,com.iota.iri.utils.IotaUtils.createNamedSingleThreadExecutor,com.iota.iri.TangleMockUtils.mockValidBundle"
iri,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculatorTest.cwCalculationSameAsLegacy,54,9,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.persistables.Transaction.canMerge,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculatorTest.updateApproversRecursively,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getTxDirectApproversHashes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Serializer.getLong,com.iota.iri.utils.Converter.trytes,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getRating,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.model.AbstractHash.toString,com.iota.iri.model.AbstractHash.equals,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.utils.Serializer.serialize,com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculateRatingDfs,com.iota.iri.model.persistables.Hashes.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.tipselection.impl.CumulativeWeightCalculatorTest.updateApproversRecursively,com.iota.iri.model.AbstractHash.toString,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculatorTest.testCalculateCumulativeWeight,28,5,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getTxDirectApproversHashes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Serializer.getLong,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getRating,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.utils.Serializer.serialize,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculateRatingDfs,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculatorTest.testCalculateCumulativeWeight2,52,9,",com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.createTxHashToCumulativeWeightMap,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getTxDirectApproversHashes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Serializer.getLong,com.iota.iri.utils.Converter.trytes,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getRating,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.toString,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.model.AbstractHash.toString,com.iota.iri.model.persistables.Hashes.exists,com.iota.iri.utils.Serializer.serialize,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculateRatingDfs,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.model.AbstractHash.toString,com.iota.iri.model.AbstractHash.equals,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.toString,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculatorTest.testCalculateCumulativeWeightDiamond,31,7,",com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.utils.Serializer.getLong,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getTxDirectApproversHashes,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getRating,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.AbstractHash.toString,com.iota.iri.model.AbstractHash.equals,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculateRatingDfs,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.model.AbstractHash.toString,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculatorTest.testCalculateCumulativeWeightLinear,29,6,",com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getTxDirectApproversHashes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Serializer.getLong,com.iota.iri.utils.Converter.trytes,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getRating,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.AbstractHash.toString,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.utils.Serializer.serialize,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculateRatingDfs,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.model.AbstractHash.toString,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculatorTest.testCollsionsInDiamondTangle,0,0,,
iri,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculatorTest.testTangleWithCircle,33,6,",com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.utils.Serializer.getLong,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getTxDirectApproversHashes,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.getRating,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculateRatingDfs,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculator.calculate,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.CumulativeWeightCalculatorTest.testTangleWithCircle2,0,0,,
iri,com.iota.iri.service.tipselection.impl.EntryPointSelectorImplTest.testEntryPointAWithoutTangleData,8,2,",com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.service.snapshot.impl.SnapshotImpl.getHash,com.iota.iri.service.tipselection.impl.EntryPointSelectorImplTest.mockMilestoneTrackerBehavior,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.service.tipselection.impl.EntryPointSelectorImpl.getEntryPoint,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockWrite,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.service.snapshot.impl.SnapshotImpl.setHash,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex",",com.iota.iri.service.tipselection.impl.EntryPointSelectorImpl.getEntryPoint,com.iota.iri.service.tipselection.impl.EntryPointSelectorImplTest.mockMilestoneTrackerBehavior"
iri,com.iota.iri.service.tipselection.impl.EntryPointSelectorImplTest.testEntryPointBWithTangleData,17,5,",com.iota.iri.service.tipselection.impl.EntryPointSelectorImplTest.mockMilestoneTrackerBehavior,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.service.tipselection.impl.EntryPointSelectorImpl.getEntryPoint,com.iota.iri.controllers.MilestoneViewModel.findClosestNextMilestone,com.iota.iri.crypto.Curl.transform,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.crypto.Curl.reset,com.iota.iri.service.tipselection.impl.EntryPointSelectorImplTest.mockTangleBehavior,com.iota.iri.controllers.MilestoneViewModel.load,com.iota.iri.controllers.MilestoneViewModel.get,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.controllers.MilestoneViewModel.getHash,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.service.snapshot.impl.SnapshotImpl.setHash,com.iota.iri.crypto.Curl.absorb",",com.iota.iri.service.tipselection.impl.EntryPointSelectorImplTest.mockMilestoneTrackerBehavior,com.iota.iri.service.tipselection.impl.EntryPointSelectorImpl.getEntryPoint,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.service.tipselection.impl.EntryPointSelectorImplTest.mockTangleBehavior,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex"
iri,com.iota.iri.service.tipselection.impl.RatingOneTest.testCalculate,45,7,",com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.persistables.Hashes.exists,com.iota.iri.utils.Serializer.serialize,com.iota.iri.service.tipselection.impl.RatingOne.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.tipselection.impl.RatingOne.calculate,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.TailFinderImplTest.findMissingTailTest,45,8,",com.iota.iri.TransactionTestUtils.createTransactionWithTrunkBundleHash,com.iota.iri.utils.Converter.getTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.controllers.TransactionViewModel.getApprovers,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.service.tipselection.impl.TailFinderImpl.findTail,com.iota.iri.service.tipselection.impl.TailFinderImpl.findTailFromTx,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.model.AbstractHash.equals,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.TransactionTestUtils.createTransactionWithTrunkBundleHash,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.TailFinderImpl.findTail,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.TailFinderImplTest.findTailTest,58,8,",com.iota.iri.TransactionTestUtils.createTransactionWithTrunkBundleHash,com.iota.iri.utils.Converter.getTrits,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.lastIndex,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.controllers.TransactionViewModel.getApprovers,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.service.tipselection.impl.TailFinderImpl.findTailFromTx,com.iota.iri.service.tipselection.impl.TailFinderImpl.findTail,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.utils.Serializer.getLong,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.utils.Serializer.getInteger,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.TransactionTestUtils.createTransactionWithTrunkBundleHash,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.model.AbstractHash.equals,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.TailFinderImpl.findTail,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.service.tipselection.impl.TipSelectorImplTest.checkReferenceAlpha0ExceptionTest,1,1,",com.iota.iri.service.tipselection.impl.TipSelectorImpl.checkReference",",com.iota.iri.service.tipselection.impl.TipSelectorImpl.checkReference"
iri,com.iota.iri.service.tipselection.impl.TipSelectorImplTest.checkReferenceAlpha0Test,1,1,",com.iota.iri.service.tipselection.impl.TipSelectorImpl.checkReference",",com.iota.iri.service.tipselection.impl.TipSelectorImpl.checkReference"
iri,com.iota.iri.service.tipselection.impl.TipSelectorImplTest.checkReferenceExceptionTest,1,1,",com.iota.iri.service.tipselection.impl.TipSelectorImpl.checkReference",",com.iota.iri.service.tipselection.impl.TipSelectorImpl.checkReference"
iri,com.iota.iri.service.tipselection.impl.TipSelectorImplTest.checkReferenceTest,4,2,",com.iota.iri.model.AbstractHash.trits,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.tipselection.impl.TipSelectorImpl.checkReference",",com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.tipselection.impl.TipSelectorImpl.checkReference"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.allowConfirmedTxToPassBelowMaxDepthAfterMilestoneConfirmation,31,7,",com.iota.iri.controllers.TransactionViewModel.update,com.iota.iri.controllers.TransactionViewModel.setSnapshot,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.storage.Tangle.update,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.storage.Tangle.updateMessageQueueProvider,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.belowMaxDepth,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.model.AbstractHash.toString,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.controllers.TransactionViewModel.setSnapshot,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.belowMaxDepthOnGenesis,52,11,",com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.belowMaxDepth,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.utils.Serializer.getLong,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.controllers.TransactionViewModel.updateSolid,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.persistables.Transaction.canMerge,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.controllers.TransactionViewModel.updateSolid,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.belowMaxDepthWithFreshMilestone,26,7,",com.iota.iri.controllers.TransactionViewModel.update,com.iota.iri.controllers.TransactionViewModel.setSnapshot,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.storage.Tangle.update,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.getType,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.belowMaxDepth,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.controllers.TransactionViewModel.setSnapshot,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.dontMarkWrongTxsAsBelowMaxDepth,30,8,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.controllers.TransactionViewModel.update,com.iota.iri.controllers.TransactionViewModel.setSnapshot,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.storage.Tangle.update,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.storage.Tangle.updateMessageQueueProvider,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.belowMaxDepth,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.utils.Serializer.getLong,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.model.AbstractHash.toString,com.iota.iri.utils.Serializer.serialize,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.controllers.TransactionViewModel.setSnapshot,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.utils.Converter.bytes,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.failBelowMaxDepthOnGenesisDueToLongChain,58,9,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.exists,com.iota.iri.controllers.TransactionViewModel.getType,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.belowMaxDepth,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.TransactionViewModel.snapshotIndex,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.utils.Serializer.getLong,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.conf.BaseIotaConfig.getMaxDepth,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.controllers.TransactionViewModel.updateSolid,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.model.AbstractHash.equals,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.utils.Serializer.getInteger,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.utils.Serializer.serialize,com.iota.iri.model.persistables.Transaction.canMerge,com.iota.iri.model.AbstractHash.toString,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.updateSolid,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.failBelowMaxDepthWithFreshMilestoneDueToLongChain,60,12,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.controllers.TransactionViewModel.update,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.controllers.TransactionViewModel.setSnapshot,com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.storage.Tangle.update,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.utils.Converter.longValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockWrite,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.getType,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.belowMaxDepth,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.controllers.TransactionViewModel.snapshotIndex,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.utils.Serializer.getLong,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.controllers.TransactionViewModel.updateSolid,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.getIndex,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.utils.Serializer.getInteger,com.iota.iri.model.AbstractHash.equals,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.utils.Serializer.serialize,com.iota.iri.model.persistables.Transaction.canMerge,com.iota.iri.model.AbstractHash.toString,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.controllers.TransactionViewModel.setSnapshot,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.updateSolid,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.failOnBelowMaxDepthDueToOldMilestone,26,4,",com.iota.iri.controllers.TransactionViewModel.update,com.iota.iri.controllers.TransactionViewModel.setSnapshot,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.storage.Tangle.update,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.TransactionTestUtils.setCurrentIndex,com.iota.iri.utils.Serializer.getLong,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.utils.Converter.trytes,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.AbstractHash.toString,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.controllers.TransactionViewModel.setSnapshot,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.failOnInconsistency,16,4,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockWrite,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.storage.Tangle.load,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.AbstractHash.toString,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.failOnSolid,20,4,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockWrite,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.storage.Tangle.load,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.utils.Serializer.getInteger,com.iota.iri.model.AbstractHash.toString,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.failOnTxIndex,15,4,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockWrite,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.storage.Tangle.load,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.utils.Serializer.getInteger,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.failOnTxType,16,4,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.storage.Tangle.load,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.AbstractHash.toString,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkValidatorImplTest.shouldPassValidation,15,3,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.TransactionTestUtils.setLastIndex,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockWrite,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.belowMaxDepth,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.storage.Tangle.load,com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.utils.Serializer.getInteger,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.snapshot.impl.SnapshotImpl.setIndex,com.iota.iri.TransactionTestUtils.createBundleHead,com.iota.iri.service.tipselection.impl.WalkValidatorImpl.isValid,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.service.tipselection.impl.WalkerAlphaTest.showWalkDistributionAlphaHalf,53,13,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.service.tipselection.impl.WalkerAlpha.getApprovers,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.tipselection.impl.WalkerAlpha.select,com.iota.iri.service.tipselection.impl.WalkerAlpha.findNextValidTail,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.tipselection.impl.WalkerAlpha.selectApprover,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.storage.Tangle.publish,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.service.tipselection.impl.WalkerAlpha.findTailIfValid,com.iota.iri.controllers.ApproveeViewModel.getHashes,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.persistables.Hashes.exists,com.iota.iri.utils.Serializer.serialize,com.iota.iri.model.AbstractHash.toString,com.iota.iri.service.tipselection.impl.RatingOne.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.service.tipselection.impl.WalkerAlpha.setAlpha,com.iota.iri.service.tipselection.impl.WalkerAlpha.walk,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.model.AbstractHash.toString,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.tipselection.impl.RatingOne.calculate,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.service.tipselection.impl.WalkerAlpha.walk,com.iota.iri.service.tipselection.impl.WalkerAlpha.setAlpha,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.service.tipselection.impl.WalkerAlphaTest.showWalkDistributionAlphaZero,53,10,",com.iota.iri.utils.Converter.getTrits,com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.service.tipselection.impl.WalkerAlpha.getApprovers,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.tipselection.impl.WalkerAlpha.select,com.iota.iri.service.tipselection.impl.WalkerAlpha.findNextValidTail,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.tipselection.impl.WalkerAlpha.selectApprover,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.storage.Tangle.publish,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.service.tipselection.impl.WalkerAlpha.findTailIfValid,com.iota.iri.controllers.ApproveeViewModel.getHashes,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.AbstractHash.toString,com.iota.iri.model.persistables.Hashes.exists,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.utils.Serializer.serialize,com.iota.iri.service.tipselection.impl.RatingOne.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.service.tipselection.impl.WalkerAlpha.walk,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.model.AbstractHash.toString,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.tipselection.impl.RatingOne.calculate,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.service.tipselection.impl.WalkerAlpha.walk,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.service.tipselection.impl.WalkerAlphaTest.testWalk,58,11,",com.iota.iri.model.persistables.Hashes.canMerge,com.iota.iri.utils.Converter.getTrits,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranchTrits,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.service.tipselection.impl.WalkerAlpha.getApprovers,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.tipselection.impl.WalkerAlpha.select,com.iota.iri.service.tipselection.impl.WalkerAlpha.findNextValidTail,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.tipselection.impl.WalkerAlpha.selectApprover,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.utils.Converter.trytes,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.storage.Tangle.load,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.service.tipselection.impl.WalkerAlpha.findTailIfValid,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.persistables.Hashes.exists,com.iota.iri.utils.Serializer.serialize,com.iota.iri.model.AbstractHash.toString,com.iota.iri.service.tipselection.impl.RatingOne.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.service.tipselection.impl.WalkerAlpha.walk,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.model.AbstractHash.toString,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.tipselection.impl.RatingOne.calculate,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.service.tipselection.impl.WalkerAlpha.walk,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.service.tipselection.impl.WalkerAlphaTest.testWalkChain,0,0,,
iri,com.iota.iri.service.tipselection.impl.WalkerAlphaTest.testWalkDiamond,0,0,,
iri,com.iota.iri.service.tipselection.impl.WalkerAlphaTest.testWalkEndsOnlyInRating,45,8,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.service.tipselection.impl.WalkerAlpha.getApprovers,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.tipselection.impl.WalkerAlpha.select,com.iota.iri.service.tipselection.impl.WalkerAlpha.findNextValidTail,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.tipselection.impl.WalkerAlpha.selectApprover,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.model.persistables.Hashes.read,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.storage.Tangle.publish,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.storage.Tangle.load,com.iota.iri.model.safe.SafeObject.checkSafe,com.iota.iri.service.tipselection.impl.WalkerAlpha.findTailIfValid,com.iota.iri.controllers.ApproveeViewModel.getHashes,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.TransactionTestUtils.getTransactionHash,com.iota.iri.model.persistables.Hashes.exists,com.iota.iri.utils.Serializer.serialize,com.iota.iri.service.tipselection.impl.RatingOne.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.service.tipselection.impl.WalkerAlpha.walk,com.iota.iri.model.safe.HashSafeObject.getHashcode,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.AbstractHash.equals,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.controllers.TransactionViewModel.getHash,com.iota.iri.TransactionTestUtils.getTransactionTritsWithTrunkAndBranch,com.iota.iri.service.tipselection.impl.RatingOne.calculate,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.service.tipselection.impl.WalkerAlpha.walk,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.TransactionTestUtils.getTransactionHash"
iri,com.iota.iri.service.transactionpruning.conditions.SizePruningConditionTest.getDbSizeTest,1,1,",com.iota.iri.service.transactionpruning.SizePruningCondition.shouldPrune",",com.iota.iri.service.transactionpruning.SizePruningCondition.shouldPrune"
iri,com.iota.iri.service.transactionpruning.conditions.SizePruningConditionTest.getMilestoneTest,1,1,",com.iota.iri.service.transactionpruning.SizePruningCondition.getSnapshotPruningMilestone",",com.iota.iri.service.transactionpruning.SizePruningCondition.getSnapshotPruningMilestone"
iri,com.iota.iri.service.validation.TransactionValidatorTest.testMinMwm,0,0,,
iri,com.iota.iri.service.validation.TransactionValidatorTest.validateBytesWithNewCurl,13,3,"com.iota.iri.utils.Converter.getTrits,,com.iota.iri.service.validation.TransactionValidator.runValidation,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.service.validation.TransactionValidator.hasInvalidTimestamp,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.reset,com.iota.iri.service.validation.TransactionValidator.validateBytes,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform",",com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.bytes,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.service.validation.TransactionValidator.validateBytes"
iri,com.iota.iri.service.validation.TransactionValidatorTest.validateTrits,11,3,",com.iota.iri.network.TransactionRequester.wasTransactionRecentlyRequested,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.service.validation.TransactionValidator.confirmValidTransactionValues,com.iota.iri.service.snapshot.impl.SnapshotImpl.getTimestamp,com.iota.iri.utils.Converter.bytes,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.copyTrits,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.crypto.Curl.transform,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.crypto.Curl.reset,com.iota.iri.service.validation.TransactionValidator.validateTrits,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.service.validation.TransactionValidator.runValidation,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.service.validation.TransactionValidator.hasInvalidTimestamp,com.iota.iri.crypto.Curl.absorb",",com.iota.iri.utils.Converter.copyTrits,com.iota.iri.service.validation.TransactionValidator.validateTrits,com.iota.iri.TransactionTestUtils.getTransactionTrits"
iri,com.iota.iri.service.validation.TransactionValidatorTest.validateTritsWithInvalidMetadata,0,0,,
iri,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.addToSolidificationQueue,27,3,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.setMetadata,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.getSolidificationSet,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.getTxWithBranchAndTrunk,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.crypto.Curl.reset,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.getTrunkTransactionHash,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.AbstractHash.equals,com.iota.iri.controllers.TransactionViewModel.getTagValue,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.addToSolidificationQueue,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.utils.Converter.allocateBytesForTrits,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.validation.impl.TransactionSolidifierImpl.getSolidificationSet,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.getTxWithBranchAndTrunk,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.addToSolidificationQueue"
iri,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.verifyInconsistentTransactionIsNotProcessedFully,13,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.crypto.Curl.reset,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.getNextTxInBroadcastQueue,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.getTxWithoutBranchAndTrunk,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.controllers.TransactionViewModel.getBytes,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.validation.impl.TransactionSolidifierImpl.getNextTxInBroadcastQueue,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.getTxWithoutBranchAndTrunk"
iri,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.verifyTransactionIsProcessedFully,21,3,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.model.AbstractHash.hashCode,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.getTxWithBranchAndTrunk,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.equals,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.controllers.TransactionViewModel.getObsoleteTagValue,com.iota.iri.crypto.Curl.reset,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.utils.Converter.trits,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.controllers.TransactionViewModel.getBundleHash,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.getNextTxInBroadcastQueue,com.iota.iri.controllers.TransactionViewModel.getBranchTransactionHash,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.addToSolidificationQueue,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.controllers.TransactionViewModel.equals,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.addToSolidificationQueue,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.getNextTxInBroadcastQueue,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.getTxWithBranchAndTrunk"
iri,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.verifyTxIsNotSolid,20,2,",com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.utils.Converter.longValue,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.controllers.TransactionViewModel.getType,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.isUnsolidWithoutEntryPoint,com.iota.iri.service.snapshot.impl.SnapshotImpl.getSolidEntryPoints,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.network.TransactionRequester.isTransactionRequested,com.iota.iri.controllers.TransactionViewModel.getAddressHash,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.checkSolidity,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.crypto.Curl.reset,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.checkRequester,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.storage.Tangle.load,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.getTxWithoutBranchAndTrunk,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.service.snapshot.impl.SnapshotImpl.unlockRead,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.network.TransactionRequester.requestTransaction,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch","com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.getTxWithoutBranchAndTrunk,,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.checkSolidity"
iri,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.verifyTxIsSolid,30,2,"com.iota.iri.utils.Converter.getTrits,com.iota.iri.controllers.TransactionViewModel.update,,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.addToBroadcastQueue,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.controllers.TransactionViewModel.updateHeights,com.iota.iri.controllers.TransactionViewModel.getTrunkTransaction,com.iota.iri.storage.Tangle.update,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.updateTransactions,com.iota.iri.TransactionTestUtils.getTransactionTrits,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.isUnsolidWithoutEntryPoint,com.iota.iri.service.snapshot.impl.SnapshotImpl.getSolidEntryPoints,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.getTxWithBranchAndTrunk,com.iota.iri.crypto.Curl.transform,com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.TransactionTestUtils.getTrits,com.iota.iri.service.validation.impl.TransactionSolidifierImpl.checkSolidity,com.iota.iri.crypto.Curl.reset,com.iota.iri.utils.Converter.trits,com.iota.iri.service.snapshot.impl.SnapshotImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.setAttachmentData,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.load,com.iota.iri.storage.Tangle.updatePersistenceProvider,com.iota.iri.controllers.TransactionViewModel.trits,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.update,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.controllers.TransactionViewModel.fillMetadata,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.service.snapshot.impl.SnapshotMetaDataImpl.hasSolidEntryPoint,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.service.validation.impl.TransactionSolidifierImpl.checkSolidity,com.iota.iri.service.validation.impl.TransactionSolidifierImplTest.getTxWithBranchAndTrunk"
iri,com.iota.iri.storage.TangleTest.get,0,0,,
iri,com.iota.iri.storage.TangleTest.getKeysStartingWithValue,9,4,",com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.keyStartsWithValue,com.iota.iri.storage.Tangle.saveBatch,com.iota.iri.storage.Tangle.exists,com.iota.iri.utils.Converter.bytes,com.iota.iri.controllers.TransactionViewModel.getSaveBatch,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.crypto.Curl.transform,com.iota.iri.controllers.TransactionViewModel.getMetadataSaveBatch,com.iota.iri.model.persistables.Hashes.bytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.storage.Tangle.keysStartingWith,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.keysStartingWith,com.iota.iri.controllers.TransactionViewModel.store,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.TangleTest.getRandomTransactionTrits,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.controllers.TransactionViewModel.exists,com.iota.iri.crypto.Curl.absorb,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.storage.Tangle.keysStartingWith,com.iota.iri.utils.Converter.bytes,com.iota.iri.model.TransactionHash.calculate,com.iota.iri.storage.TangleTest.getRandomTransactionTrits,com.iota.iri.controllers.TransactionViewModel.store"
iri,com.iota.iri.storage.TangleTest.save,0,0,,
iri,com.iota.iri.storage.rocksDB.LocalSnapshotsPersistenceProviderTest.localSnapshotStoredSuccessfully,11,4,",com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.service.snapshot.impl.SnapshotImpl.getTimestamp,com.iota.iri.storage.rocksDB.LocalSnapshotsPersistenceProviderTest.makeLocalSnapshot,com.iota.iri.model.LocalSnapshot.read,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.get,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.save,com.iota.iri.model.LocalSnapshot.bytes,com.iota.iri.service.snapshot.impl.SnapshotImpl.getBalances,com.iota.iri.service.snapshot.impl.SnapshotMockUtils.createSnapshot,com.iota.iri.service.snapshot.impl.SnapshotImpl.lockRead,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist",",com.iota.iri.storage.rocksDB.LocalSnapshotsPersistenceProviderTest.makeLocalSnapshot,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.get,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.save,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.exists"
iri,com.iota.iri.storage.rocksDB.LocalSnapshotsPersistenceProviderTest.spentAddressesStoredSuccessfully,7,3,",com.iota.iri.model.AbstractHash.bytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.utils.Converter.bytes,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.get,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.exists,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.exists,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.save,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.mayExist","com.iota.iri.storage.LocalSnapshotsPersistenceProvider.get,,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.save,com.iota.iri.storage.LocalSnapshotsPersistenceProvider.exists"
iri,com.iota.iri.storage.rocksDB.LocalSnapshotsPersistenceProviderTest.startMakesAvailable,2,1,",com.iota.iri.storage.LocalSnapshotsPersistenceProvider.isAvailable,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.isAvailable",",com.iota.iri.storage.LocalSnapshotsPersistenceProvider.isAvailable"
iri,com.iota.iri.storage.rocksDB.RocksDBPersistenceProviderTest.testDeleteBatch,11,5,",com.iota.iri.utils.Serializer.getInteger,com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.utils.TransactionTruncator.expandTransaction,com.iota.iri.utils.Serializer.serialize,com.iota.iri.model.safe.SafeObject.getData,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.deleteBatch,com.iota.iri.model.IntegerIndex.bytes,com.iota.iri.utils.TransactionTruncator.truncateTransaction,com.iota.iri.model.persistables.Transaction.read,com.iota.iri.model.IntegerIndex.getValue,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.model.persistables.Transaction.metadata,com.iota.iri.model.AbstractHash.bytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch",",com.iota.iri.model.persistables.Transaction.bytes,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.get,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.deleteBatch,com.iota.iri.model.IntegerIndex.getValue,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.storage.rocksDB.RocksDBPersistenceProvider.saveBatch"
iri,com.iota.iri.utils.BoundedHashSetTest.createBoundedHashSetWithCollectionTest,3,1,",com.iota.iri.utils.collections.impl.BoundedHashSet.addAll,com.iota.iri.utils.collections.impl.BoundedHashSet.add,com.iota.iri.utils.collections.impl.BoundedHashSet.getMaxSize",",com.iota.iri.utils.collections.impl.BoundedHashSet.addAll"
iri,com.iota.iri.utils.BoundedHashSetTest.testAdd,1,1,",com.iota.iri.utils.collections.impl.BoundedHashSet.addAll",",com.iota.iri.utils.collections.impl.BoundedHashSet.addAll"
iri,com.iota.iri.utils.BoundedHashSetTest.testAddAll,0,0,,
iri,com.iota.iri.utils.ConverterTest.testTrytesToAscii,1,1,",com.iota.iri.utils.Converter.trytesToAscii",",com.iota.iri.utils.Converter.trytesToAscii"
iri,com.iota.iri.utils.IotaUtilsTest.testStringFileSizeConversion,1,1,",com.iota.iri.utils.IotaUtils.parseFileSize",",com.iota.iri.utils.IotaUtils.parseFileSize"
iri,com.iota.iri.utils.MapIdentityManagerTest.verifyAccountWithClearTextPassword,5,1,",com.iota.iri.utils.Converter.asciiToTrytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.MapIdentityManager.verifyCredential,com.iota.iri.utils.MapIdentityManager.getAccount,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.MapIdentityManager.verify,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform",",com.iota.iri.utils.MapIdentityManager.verify"
iri,com.iota.iri.utils.MapIdentityManagerTest.verifyAccountWithTrytes,4,1,",com.iota.iri.utils.Converter.asciiToTrytes,com.iota.iri.utils.Converter.trytes,com.iota.iri.crypto.Curl.squeeze,com.iota.iri.utils.MapIdentityManager.verifyCredential,com.iota.iri.crypto.SpongeFactory.create,com.iota.iri.utils.MapIdentityManager.verify,com.iota.iri.crypto.Curl.absorb,com.iota.iri.crypto.Curl.transform",",com.iota.iri.utils.MapIdentityManager.verify"
iri,com.iota.iri.utils.MapIdentityManagerTest.verifyAccountWithUnsupportedCredentialType,2,1,",com.iota.iri.utils.MapIdentityManager.verifyCredential,com.iota.iri.utils.MapIdentityManager.verify",",com.iota.iri.utils.MapIdentityManager.verify"
iri,com.iota.iri.utils.TestSerializer.testSerEndian,1,1,",com.iota.iri.utils.TestSerializer.bbSerialize,com.iota.iri.utils.Serializer.serialize",",com.iota.iri.utils.TestSerializer.bbSerialize,com.iota.iri.utils.Serializer.serialize"
iri,com.iota.iri.utils.TransactionTruncatorTest.expandTruncatedByteEncodedTransaction,1,1,",com.iota.iri.utils.TransactionTruncator.expandTransaction",",com.iota.iri.utils.TransactionTruncator.expandTransaction"
iri,com.iota.iri.utils.TransactionTruncatorTest.truncateByteEncodedTransaction,2,2,",com.iota.iri.TransactionTestUtils.constructTransactionBytes,com.iota.iri.utils.TransactionTruncator.truncateTransaction",",com.iota.iri.TransactionTestUtils.constructTransactionBytes,com.iota.iri.utils.TransactionTruncator.truncateTransaction"
iri,com.iota.iri.utils.collections.impl.BoundedSetWrapperTest.createSetAndAssertEquals,0,0,,
iri,com.iota.iri.utils.collections.impl.BoundedSetWrapperTest.createSetWithException,1,1,",com.iota.iri.utils.collections.impl.BoundedSetWrapper.requireCollectionIsNotAboveMaxSize",",com.iota.iri.utils.collections.impl.BoundedSetWrapper.requireCollectionIsNotAboveMaxSize"
iri,com.iota.iri.utils.collections.impl.BoundedSetWrapperTest.testAdd,3,2,",com.iota.iri.utils.collections.impl.BoundedSetWrapper.add,com.iota.iri.utils.collections.impl.BoundedSetWrapper.addAll,com.iota.iri.utils.collections.impl.BoundedSetWrapper.size,com.iota.iri.utils.collections.impl.BoundedSetWrapper.requireCollectionIsNotAboveMaxSize",",com.iota.iri.utils.collections.impl.BoundedSetWrapper.requireCollectionIsNotAboveMaxSize,com.iota.iri.utils.collections.impl.BoundedSetWrapper.add,com.iota.iri.utils.collections.impl.BoundedSetWrapper.addAll"
iri,com.iota.iri.utils.collections.impl.BoundedSetWrapperTest.testAddAll,0,0,,
iri,com.iota.iri.utils.comparators.TryteIndexComparatorTest.shouldSortTrytesByCurrentIndex,4,1,",com.iota.iri.utils.comparators.TryteIndexComparator.compare,com.iota.iri.utils.Converter.allocateTritsForTrytes,com.iota.iri.utils.comparators.TryteIndexComparator.getCurrentIndex,com.iota.iri.utils.Converter.trits",",com.iota.iri.utils.comparators.TryteIndexComparator.compare"
iri,com.iota.iri.utils.dag.DAGHelperTest.testGet,1,1,",com.iota.iri.utils.dag.DAGHelper.get",",com.iota.iri.utils.dag.DAGHelper.get"
iri,com.iota.iri.utils.dag.DAGHelperTest.testTraverseApprovees,8,3,",com.iota.iri.model.AbstractHash.trailingZeros,com.iota.iri.utils.Converter.getTrits,com.iota.iri.model.AbstractHash.trits,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getTransaction,com.iota.iri.utils.dag.DAGHelper.traverseApprovees,com.iota.iri.TangleMockUtils.mockTransaction,com.iota.iri.model.persistables.Transaction.readMetadata","com.iota.iri.TangleMockUtils.mockTransaction,,com.iota.iri.controllers.TransactionViewModel.getTransaction,com.iota.iri.utils.dag.DAGHelper.traverseApprovees"
iri,com.iota.iri.utils.dag.DAGHelperTest.testTraverseApprovers,6,3,",com.iota.iri.utils.dag.DAGHelper.traverseApprovers,com.iota.iri.controllers.TransactionViewModel.fromHash,com.iota.iri.controllers.TransactionViewModel.getTransaction,com.iota.iri.controllers.ApproveeViewModel.load,com.iota.iri.model.persistables.Transaction.readMetadata,com.iota.iri.TangleMockUtils.mockTransaction","com.iota.iri.TangleMockUtils.mockTransaction,,com.iota.iri.controllers.TransactionViewModel.getTransaction,com.iota.iri.utils.dag.DAGHelper.traverseApprovers"
iri,com.iota.iri.utils.datastructure.impl.CuckooFilterImplTest.testAaddByteArray,6,1,",com.iota.iri.utils.BitSetUtils.convertByteArrayToBitSet,com.iota.iri.utils.BitSetUtils.convertBitSetToByteArray,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.generateFingerPrint,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.add,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.contains,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.getIndex",",com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.add"
iri,com.iota.iri.utils.datastructure.impl.CuckooFilterImplTest.testAaddString,6,1,",com.iota.iri.utils.BitSetUtils.convertByteArrayToBitSet,com.iota.iri.utils.BitSetUtils.convertBitSetToByteArray,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.generateFingerPrint,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.add,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.contains,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.getIndex",",com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.add"
iri,com.iota.iri.utils.datastructure.impl.CuckooFilterImplTest.testBcontainsByteArray,5,1,",com.iota.iri.utils.BitSetUtils.convertByteArrayToBitSet,com.iota.iri.utils.BitSetUtils.convertBitSetToByteArray,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.generateFingerPrint,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.contains,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.getIndex",",com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.contains"
iri,com.iota.iri.utils.datastructure.impl.CuckooFilterImplTest.testBcontainsString,5,1,",com.iota.iri.utils.BitSetUtils.convertByteArrayToBitSet,com.iota.iri.utils.BitSetUtils.convertBitSetToByteArray,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.generateFingerPrint,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.contains,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.getIndex",",com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.contains"
iri,com.iota.iri.utils.datastructure.impl.CuckooFilterImplTest.testCdeleteByteArray,5,1,",com.iota.iri.utils.BitSetUtils.convertByteArrayToBitSet,com.iota.iri.utils.BitSetUtils.convertBitSetToByteArray,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.generateFingerPrint,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.getIndex,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.delete",",com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.delete"
iri,com.iota.iri.utils.datastructure.impl.CuckooFilterImplTest.testCdeleteString,5,1,",com.iota.iri.utils.BitSetUtils.convertByteArrayToBitSet,com.iota.iri.utils.BitSetUtils.convertBitSetToByteArray,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.generateFingerPrint,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.getIndex,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.delete",",com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.delete"
iri,com.iota.iri.utils.datastructure.impl.CuckooFilterImplTest.testDfalsePositiveRateByteArray,6,2,",com.iota.iri.utils.BitSetUtils.convertByteArrayToBitSet,com.iota.iri.utils.BitSetUtils.convertBitSetToByteArray,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.generateFingerPrint,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.add,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.contains,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.getIndex",",com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.contains,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.add"
iri,com.iota.iri.utils.datastructure.impl.CuckooFilterImplTest.testDfalsePositiveRateString,6,3,",com.iota.iri.utils.BitSetUtils.convertByteArrayToBitSet,com.iota.iri.utils.BitSetUtils.convertBitSetToByteArray,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.generateFingerPrint,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.add,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.contains,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.getIndex",",com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.contains,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.getIndex,com.iota.iri.utils.datastructure.impl.CuckooFilterImpl.add"
iri,com.iota.iri.utils.datastructure.impl.CuckooFilterImplTest.testEcapacity,0,0,,
